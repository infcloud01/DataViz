<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Sample - Superstore Subset (Excel))' inline='true' name='federated.140lqmy1pd48g818nmigc0f9fsyz' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore Subset (Excel)' name='excel-direct.1afrg971ipb89o1dzajmg0w9ofzd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/206404804/Dropbox (Personal)/Data Science/Tableau Certification/Udemy Cert Prep Course/Sample - Superstore Subset (Excel).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1afrg971ipb89o1dzajmg0w9ofzd' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X9427:no:A1:X9427:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order Priority' ordinal='1' />
              <column datatype='real' name='Discount' ordinal='2' />
              <column datatype='real' name='Unit Price' ordinal='3' />
              <column datatype='real' name='Shipping Cost' ordinal='4' />
              <column datatype='integer' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Ship Mode' ordinal='7' />
              <column datatype='string' name='Customer Segment' ordinal='8' />
              <column datatype='string' name='Product Category' ordinal='9' />
              <column datatype='string' name='Product Sub-Category' ordinal='10' />
              <column datatype='string' name='Product Container' ordinal='11' />
              <column datatype='string' name='Product Name' ordinal='12' />
              <column datatype='real' name='Product Base Margin' ordinal='13' />
              <column datatype='string' name='Region' ordinal='14' />
              <column datatype='string' name='State or Province' ordinal='15' />
              <column datatype='string' name='City' ordinal='16' />
              <column datatype='integer' name='Postal Code' ordinal='17' />
              <column datatype='date' name='Order Date' ordinal='18' />
              <column datatype='date' name='Ship Date' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
              <column datatype='integer' name='Quantity ordered new' ordinal='21' />
              <column datatype='real' name='Sales' ordinal='22' />
              <column datatype='integer' name='Order ID' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.1afrg971ipb89o1dzajmg0w9ofzd' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B1635:no:A1:B1635:0' header='yes' outcome='2'>
              <column datatype='integer' name='Order ID' ordinal='0' />
              <column datatype='string' name='Status' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Customer Segment]' value='[Orders].[Customer Segment]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product Base Margin]' value='[Orders].[Product Base Margin]' />
          <map key='[Product Category]' value='[Orders].[Product Category]' />
          <map key='[Product Container]' value='[Orders].[Product Container]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Product Sub-Category]' value='[Orders].[Product Sub-Category]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity ordered new]' value='[Orders].[Quantity ordered new]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State or Province]' value='[Orders].[State or Province]' />
          <map key='[Status]' value='[Returns].[Status]' />
          <map key='[Unit Price]' value='[Orders].[Unit Price]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Base Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product Base Margin]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Base Margin</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State or Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State or Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State or Province</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity ordered new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity ordered new]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity ordered new</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X9427:no:A1:X9427:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B1635:no:A1:B1635:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Category Sum of Sales' datatype='real' name='[Calculation_989947506500972545]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{Fixed  [Product Category]: SUM([Sales]) }' />
      </column>
      <column aggregation='Sum' caption='First Order' datatype='integer' name='[Calculation_989947506502168578]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{FIXED [Customer ID]: MIN(YEAR([Order Date])) }' />
      </column>
      <column caption='Avery Products' datatype='boolean' name='[Calculation_989947506505424899]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS([Product Name],&quot;Avery&quot;)' />
      </column>
      <column caption='Free Shipping' datatype='real' name='[Calculation_989947506507071492]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Sales] &gt; 500 AND [Ship Mode]=&quot;Delivery Truck&quot; then 0 ELSE [Shipping Cost] END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Order ID (Returns)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <drill-paths>
        <drill-path name='Product Category, Product Sub-Category'>
          <field>[Product Category]</field>
          <field>[Product Sub-Category]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.52356' measure-ordering='alphabetic' measure-percentage='0.47644' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore Subset (Excel))' name='federated.140lqmy1pd48g818nmigc0f9fsyz' />
          </datasources>
          <datasource-dependencies datasource='federated.140lqmy1pd48g818nmigc0f9fsyz'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Sub-Category]' derivation='None' name='[none:Product Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.140lqmy1pd48g818nmigc0f9fsyz].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Product Category:nk] / [federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Product Sub-Category:nk])</rows>
        <cols>[federated.140lqmy1pd48g818nmigc0f9fsyz].[yr:Order Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore Subset (Excel))' name='federated.140lqmy1pd48g818nmigc0f9fsyz' />
          </datasources>
          <datasource-dependencies datasource='federated.140lqmy1pd48g818nmigc0f9fsyz'>
            <column caption='Category Sum of Sales' datatype='real' name='[Calculation_989947506500972545]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{Fixed  [Product Category]: SUM([Sales]) }' />
            </column>
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Sub-Category]' derivation='None' name='[none:Product Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_989947506500972545]' derivation='Sum' name='[sum:Calculation_989947506500972545:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.140lqmy1pd48g818nmigc0f9fsyz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.140lqmy1pd48g818nmigc0f9fsyz].[sum:Calculation_989947506500972545:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.140lqmy1pd48g818nmigc0f9fsyz].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.140lqmy1pd48g818nmigc0f9fsyz].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.140lqmy1pd48g818nmigc0f9fsyz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Product Category:nk] / [federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Product Sub-Category:nk])</rows>
        <cols>[federated.140lqmy1pd48g818nmigc0f9fsyz].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore Subset (Excel))' name='federated.140lqmy1pd48g818nmigc0f9fsyz' />
          </datasources>
          <datasource-dependencies datasource='federated.140lqmy1pd48g818nmigc0f9fsyz'>
            <column aggregation='Sum' caption='First Order' datatype='integer' name='[Calculation_989947506502168578]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{FIXED [Customer ID]: MIN(YEAR([Order Date])) }' />
            </column>
            <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_989947506502168578]' derivation='None' name='[none:Calculation_989947506502168578:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.140lqmy1pd48g818nmigc0f9fsyz].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.140lqmy1pd48g818nmigc0f9fsyz].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Calculation_989947506502168578:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.140lqmy1pd48g818nmigc0f9fsyz].[pcto:sum:Sales:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore Subset (Excel))' name='federated.140lqmy1pd48g818nmigc0f9fsyz' />
          </datasources>
          <datasource-dependencies datasource='federated.140lqmy1pd48g818nmigc0f9fsyz'>
            <column caption='Free Shipping' datatype='real' name='[Calculation_989947506507071492]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Sales] &gt; 500 AND [Ship Mode]=&quot;Delivery Truck&quot; then 0 ELSE [Shipping Cost] END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_989947506507071492]' derivation='Sum' name='[sum:Calculation_989947506507071492:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.140lqmy1pd48g818nmigc0f9fsyz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.140lqmy1pd48g818nmigc0f9fsyz].[sum:Calculation_989947506507071492:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.140lqmy1pd48g818nmigc0f9fsyz].[sum:Shipping Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.140lqmy1pd48g818nmigc0f9fsyz].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.140lqmy1pd48g818nmigc0f9fsyz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.140lqmy1pd48g818nmigc0f9fsyz].[:Measure Names]</rows>
        <cols>[federated.140lqmy1pd48g818nmigc0f9fsyz].[yr:Order Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore Subset (Excel))' name='federated.140lqmy1pd48g818nmigc0f9fsyz' />
          </datasources>
          <datasource-dependencies datasource='federated.140lqmy1pd48g818nmigc0f9fsyz'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Status:nk]' value='120' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.140lqmy1pd48g818nmigc0f9fsyz].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Status:nk]</rows>
        <cols>[federated.140lqmy1pd48g818nmigc0f9fsyz].[yr:Order Date:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Product Category:nk]</field>
            <field>[federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Product Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Product Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Calculation_989947506502168578:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Calculation_989947506502168578:ok]</field>
            <field>[federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Customer ID:ok]</field>
            <field>[federated.140lqmy1pd48g818nmigc0f9fsyz].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.140lqmy1pd48g818nmigc0f9fsyz].[none:Status:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9V3Bd15nv+dsn54ScMwiAAEiCYCYlkVTO7SR3O3b7Xl/fHt+5Vbemaqrm
      ZfwwNQ/zNA89Xbfb3Xbb3ZblIMuSSAWSYhZJkASInHM8ByfntMM8gAqWbCoQFAXg/F5Y2Nz7
      7LXXOf/9rbW+sARFURRy5NiiqO53A3LkuJ/kBJBjS5MTQI4tTU4AObY0OQHk2NLkBJBjS5MT
      QI5NQdQ9zos/+yd+9uvXWA6l/uw5U13nGF9N/MmxnABybAIy/O4/XqL5+Dd4ZJuW37x2kaws
      I4oi2ayIoshkMmmWx4dxR7PIkkgmnUaUZDT3u+k5ctw1sptoupK6Uie2/FY0p95kZOwir/7y
      XSo69tJu93BqOEpmfpojBxKceen3TEXiKMb6nAXIsQkQTECYbFZCSqcQDRaMGgVX3V6++/wh
      rvQH+OF//xGPdtajDs9xpmuMlChg0OYsQI7NgJDH/nYrL730a/RJL/X7nsHKMhaLHpVax44S
      Nb956Q9I4yu07nmK9to8MnnFlBTlIeRigXJsBmQxjd/nR1IbyHM5EeQUybSA1aJHSifw+EJo
      tHqsTidCJkogFEdrtOYEkGNrk5sD5AAgm80iSdL9bsYXTk4AOQCIRqOk0+n73YwvnJwAcmxp
      cgLIcdcoskg8FiUWTyIrCrKUJRaLksqIKCjIkkgykUC6PdvMppNEY3FEaX2mn2ImRTR6+36K
      8qHPl1EUBTGTIpnKoCigKDLpVIJ0dm24l1sGzXGXyExde5O3BlZJ+xY59K3/AYO/p2s2hqB2
      8dfffo6xy29w9nQ/X//J/0WzJcwv/t9/IGvUY2t5jG8eb0Mt3M39k7z6y58SRk8gY+K7XzvK
      67/9DUnUFDQd5a86bfzuldeZ8pbwf/xvX2d1/DqvvvIqps7v8r1HmnMWIMfdIlCz70n+lx/+
      HcearUy7Z+gfTfHtH/yYjuI0ffMxDj/xNDurCgBIjV8i2PAM/+W//YBE/wUCybu1Ajqe/9v/
      xt9+75sYEkuM9V3HWH+c//q9F1ga7iHrqOGb33kSm7x2dmnTfp44thuDeu3vnABy3CUCAlku
      vfKvXIo38/xuF4pkRqMRsOiNpJJ/GpiWTCQwWi2oBDNafZJs9m5XntSkfJP88z/+C03H/4ZC
      kwqDTo9aq8WSFol/wtU5AeS4SyRGTv2KUd1ufvQ3j2PS5qE3evEFQ8x5fBTlO//kbHt5DaGx
      YWKBaSJiCWaT+i7vH+OX//wbDn7tBxzbWUFevhOPZ5Gg303YYsX5CVerf/KTn/zkLluQYxOQ
      TCbRaDRotdrPdqGcZfhWN9Nzc/T33CBprWd/g4233zyFqfYA++ptvPnyS4y4A8xNjFK86wmK
      Y728+e4Uh596mqo8M3c3BXBz+d1+5mbHuTm6SEvHQfS+AU7fnOehRx/DFBziZy+eJhzzshwH
      2d3Pm1dG8S7PENUW5DzBOdYIBAIYDAZMJtP9bsoXSm4IlGNL87Fl0NXVVTKZzP1oS477SCqV
      Qq1Wf/Yh0AYnNwTKAWzdIdAdHWGKIpNJp5EVUGt0aLXqu5uw5MjxJeOOAkiGp/i//89/oKa9
      naq2oxzbW/upBOCb7mZWKqcgu4xU0EBtgWWdmvuX6bt8klm/iLO8kX07m9Dfwb0YCKxiNDox
      GreWud8axLn4x9cYXA5S2HyI5zoLee2Pb+DLGHny69/AHBzh5JkrCK46nn7i6J2XQbOpAOMe
      NT/64XepLXMyPjqEweLCszBOWlQYHpnEPT9GIisx0H2LrqtXUZxV2IQo6bTIyd/8jGujXgpL
      Clh0r1ListIzPEaJPsnV0SUmxiZwWjWcf/skY+4MlVUlaD6niVn1hNn/0INIvjmSggWHxfAX
      z11enkWrtecE8CE+9zLol43YMtcXdXznhWdpqS5CSsZw1O/h0HYTJ94YpqquhNaOQ+Snl+j3
      i58sgJMv/YbR6RliulJmR65SXNXMVN8FsioDf/zDq1R0PEilap7XbiT4+tF8fvvGIqXqEcal
      Riq1YYp2H6OzVMurl/vZ21zFy2+fY2+JxE9+doWnnn2EgTd/Tq9bYn7wGkJJK7WFn89ajHRf
      YN4TIpJRUVNdxkzPZS7duMXUYoSyEgNnT75F//AISU0eOiGBKpNlcmYWvclAz6XTdA9NorPn
      MfbuGW4ODpHRFZNZ6eXsxZt4E2rybTLXz1/g1sgkGmsR872nudozTMZQQLFz44+bN4sAMv5F
      zl27iWc1gDGvhHynnfm+c5x7d4SmQw/SWGzg6junGXQn6Ozo+ORl0NLWB/jxj3/MsZ3lCKJI
      RswQjq45mO3FDXRsr0ajVmF15OFyOVBLa0EXgkqDUa9Fo9Oj06hQMllSmSSxxFrMeU37XmoK
      HaQzMi2dR/i7H/6IXZX2z/3gVlcZLdu3U2zREfUvsiwU8Nxzz7MjP8rw4BCujqd4/rmnSC2P
      kIn6OH/5OtaSOoSkF1PJDp5/5kmqHAJJUQE5weTEIhqDEYPJhFEr4J8bYnQlipRO4A1EMBiM
      GM02tIKM/LlbnWO9WBi6yD/984usaMr51teeZVdzEedPXyQrqKhq6mD/nhZWpqaQ1GbaOvfR
      UmZh0RO4swWQxTT+UJZtDVUACJEF3r7Qi9bmoLaqkowIjY1VCOkoobSZxnITnpCK6hItsqWC
      +mINV8+8i66sBpN/jAt981gKiuioLcSdsbC9Op8Ch4nuq+8ysRSioq4eh0n3uTpgZqSXNBrC
      /iDmkhIkzzzuUIgVb4b6beVMD00QDy+T1hVjs+lprqtlaW4eqysP98IkoUgclCRLfoGqCiuJ
      hJGKYjNZSSIciJBXVkAqqaK6qhxXngu9ICLKWcJRhfKKQu7WoX+/2egWwF5YRefuNoToIj29
      o4TDQSKymWKNn57xZZLxEN6YClV0lhl3iLDPg2Qt2zzLoN6lacJJGb3ZQUlRHlIyzIongMlZ
      RIHDSNCzRDAJpeVlIKbQag1kU1EUrQkp5mc1nKKwpJSEb5GMxoTFYMWgTeP2BDE6Cyl0GPG7
      l4mkFPKLSxCSfryhJHklFdhN2g2/OrZZlkEVKcvy/DT+uEx5TR0WIcH09DxpRUt1QwOq+Cpz
      S15UBjs1NZWbRwA57o7NIoDPyoZNiFEUhZx214/3+lOWt9aMZsMKIJPJbMkqBveKTCaDIAgI
      wkYfzH02csFwObY0OQHk2NJs2CHQR5kf7mJg2ovWVkRTVQHobVQWu/7suSsLM7hKatDf4ekX
      hq9xa9KD3lbGA0c6MapBFlP0dV1iKZTBUbaNCkMWa3UdLsPHl25lMcniSpjKiuLP9BypcJiM
      wYBNr/9M133ZGL7yEiduGvhvP3qYG2dOMjIXQNQW873vHOSNF08QTKWwVXXylcf3oV/n17Cc
      8vOrn/+c/I6vcqxO5N9/d5qsItO4/1m2O4NcfqcL274nebStfJMIQImyEtDz8BNPokUhuDrP
      3MIkq0s6ara1YBYDDI7PYciroKW2BEFQIYhxvOEUEb8XV1ExC5PjyNZSdjaWAyBiYN+DR/FO
      TiLKgBoS4WUUezNPHSxDlmUWx4ZYmBhkRjbS1FxPwj3LjCdEUVUj5S4dKpWKbDRAKJ0lEM5S
      YFVYXPYh6O0YhRgJlYvt9YXMDg/iT6nY1trI1LWruPUGGht3UKAKM77go6i6kcoC2/3t489A
      yjfJbMpBbaEONEY6jz7HIZ2KqydOkdQ4eeqb38GoTvLOOzfJyqyzABSmBvvIa9qOSVaIe2co
      3fM1Ht6W5tS7Szhad3L8QYGR24OfzTEEyoSRDHno1CpUajWCLJJW9BTYTSwsLSNlkkRjMUZu
      9hDIiLgX5sgkgtzsHUIxOkl5xlgMyxj0HziBLCY1N97twlxcRjoeQwGkRBSt3YkgCKjVapCS
      yDoHFimFOxIhlYwRC/u52T1MVkywuOQl7Z3n2sgCdqcd3+IsKlshac8kSb0L2b1ISJGJxyKE
      /bP0DK2SX1REaWUlhQ4Nk8PjZFQ6tOov/9ekKDFunD/P8OwKt/pn2NnRil4lgEqNlhS9717A
      tH0P+WodxFc5f6mbps69mNfpFRxcnuDSpRsszo2xkHbRVrtWhcJS2kRs8AQ/+/Up8qur0OkM
      6LQfuC03hwXQ5aGK9xJLl6BHREJHaYWLYrOWhNfN3FyA8tp6VOEBEvIHS6cFFQ3UVRSRiWmo
      l1aYHx6htKoIG2nmllMc6Kynu2eAmvbd5DlAa3URm1hALGskm86AxkJVVTkqj5qgFGYpIFFd
      W01y0M0HKUUC9S3tFLl0ZLwW8orLSKVX0ZWUkwp5ycZXCMn51NUamVhKYa60kLE5sRpN1LY0
      s7SyzOjUAiWu5vvRs58BLQUlJegUP+cHhuibGGRqNISrvQbd6jyFLfupyreCFOFa9zi7jhzB
      uY4ORJ3JRlGxhuB8P3235um9GiAmVWJJ51Fw8K/4SnmW35/oYmfjM39y3eYQgGCkodbB1bOn
      0DhKaa4uRK/VIKjVGA1GjE4DN4ZGMJvs6FQCJosVlUaHzbz2BWTiIWZn5xHMJayNvLXYdAmu
      9UxSlO8gk84gAEZrMYWGHk69+SZ5Na1UGk1oBAGVToder8GiWmB8KoTRnodapcFqNqI2KFj0
      a3kUOqMZjQq0t//Vmc1odQ6UyBCzWHFYizC7tHRfvUJ82y5ssWXmVgIU11fcz979VAiCnupt
      2wD4+//eCgS5/M40O0sNvHyxl56REdQaG089tp0bvYNMzk5gLWng2cePYfl80S9/gtlRRKMD
      aKih7QgEPCPMrdpoKhN5/fWX+XlWxfaDj7HU9w5nLvYRUbREDz2xcT3B6XQ65wdYR8LhMHq9
      HoPhL4eRb0a+/IPLHDnuIRt2CKTRaFCpcvpdLzQazYaOBv28bFgBqNXqtZWYHOuCWq3ekgLI
      vUJzbGk2rAX4KJm4n/6+YQR7KW1NtWjJMjM6QMxQRnORiuvd8+x4YDeWTxHs5V8YZXDKjWKw
      07mzDYvh83WToij4vF7yCws3fL7AhkGR8S6MMe7XcGhXA2Lcy4Vz7xIS9Rx++BGcWTenL14j
      ntax66EHN4sFyNJ95QaOqkbsGTfdE8ukQkFW0ypqSmyMdg9T0tKA5J5gIfjJRb+W/VG2NW2n
      vbkeg+5TDrPEOONj84gfPqYoLC0s8N4yWza6yviC97M+XI7PQCbiZXx5heV5NwBSMkFh024O
      tDs5/dZ1Vian0Fa18OCDByhzmDeJBciskrU0UFtahFCswf3uDIMLbgaXfCSTMaZ6BrAGZB7s
      LCOrAt/cENd6xzEXNtJcrqK3fwK1pYxDh3djUgNikqXFBfRWB2mfh7jJQbkRxj0hKtVx+rxR
      1KZS7Mkp5n0pRI2No4daCSQzlAUXOH3hBrKhhIce3Yd/cYSTi/MYCxrY32AkkbUSWB2j++ok
      MTlFQ8dxiqR5rvRPkcwaOP74fqa6ruKOq9l56CDV+db73bsbCp29iEP79bz11igAelc5ZvdN
      bo3NUN3yEOHV64QiCeZValpdeZtEAIIKQbmdyCErIBjYtnMfloY4zdVlWFICzccPw3Q/IUlh
      fsHNgUefwaFNcenV1whhQBWZwJ/YjckKqDRYTFb0ZhNyzE86K6HoFJKpFFlNFG1BE/vr8hm4
      ucLh48fwzvaRSaWJJ1KgaEGtJz/fiiKBJb+aIwcOMH6rm3RaTTItIpqhomkPlaUSk7M+puMJ
      HnvmeaZuXkWSZSQZHHkOtLlVrnXBaHFQXFaMz++nrX0v6iUvq7MDvCvrNokAtAUY0v0Mjqsg
      uIihZNsdH8xk1LI0N0vCYsJaWIgtvwaXQcH63kVaE1XVNRgMGgKzIWY8y0wpcSKKA5XNQElJ
      PioB1Do9Os3aatR7Y3yNzkxdfTWr85O4Yy3oDUY0KjXqD8fzCGqMBj0qVQaVSkArJZmbm8Pt
      j+CSVZTVNRBwLzDrDlDmMt+jTtuciKkY8wsTLC/PMzFZhkkVYjkiYDYa8C6ssGyNkhQsaNQq
      JEHYLPsDqCgsLiC06kHtLKelugSNVoPRaESv02E0mzFbTGi0egxGI0UFeYS8HkSNhfqGSqKr
      HjKCkcJCJxoVGAwGjEYDKpWA3mwiEw2hGPOoqSzGZndgNBrRqUBvMKzdQ2/AYLJgs1owGTQE
      fH60ebU0lNkxGY0YjEb0BgMmiwOrxYzVZL59nQ6jyYhFKzIyNk0wBQ0NdcjxIAnBQmNtJQbt
      F7PUu9GrQrxHNhlhcnwOk9VIIiVQXlPM6twsoaSGgw8dothhYHl+DsFVw97Wuo0bCrFpUBT8
      S5OMza3iLKunsaoQ9X1IS9yqSfEbVgAbtNlfWoLBIHq9fssJYMPOAXJJ8evLe7vE55Lic+TY
      QuQEkGNLs2GHQB8m5pnkUnc/q54UhTW1HNq/B9t7OyHLGYbH52lpqr99doie6z7a99Zvjoe/
      jyQD81y40E22sJZnDu14//jswFXOD85y7OgzlLvg8qkTjKzEKGnax7P7yjj5h5MshWIUbjvI
      kw/uQPd5XsOyyMiNd7jcO4usL+Trf/0MLr2GZGCRN998G29UorT9MI/vKuU//vkfyRjyaNj7
      OM0WD2+f7yWjtvLQk09t3GVQSZLenwjrLC4aGgpJRm0ceXAXGjHG3PQsgVgWq9XI4twcyViU
      pKLFapKYm45QWuHAuziHOxDHZLWQiawyNbOIpDVhNmz8Wp+flXQ6/X5I9KdGUGFzFhFPBKgq
      K3v/sEprRGeQsOgL0KQDjIYFvvHc43h6bmDa1kh5RROH9rWxODZGSV3d50uKV0BtcrLv4GE0
      q7NQUYlTp0WlMVDX3M72GhfDk6s0VKkJZOt54etPUFPiYKjnOo2Hn2W7S2Ixqd6cL8FMKsbK
      0iKRZBJFdwQ5k0bROJno68X8wFpubXBlmoHBaSQZoqKEsjJJTGfD6Mre59ZvHLQGK07rx0sp
      2lz5GDxTABhcLmzxa/z85yOkvWGKnnieGo2Pa1f6qd6x+/MnxatUOJ02pm5dJlLQQJthLZlV
      rdUxdvlVLo9FaD94FNJBxnrOMTdznT3HnqW6vprTJ39NSu3k6NMtm1MAUZ8bwZqPlSVisSRa
      i5O62joEn5/k7ZCJSMiP2uSixGXGZrdhNtUws+hhdmGJikI7W2wx5J6h1po5+PhXOSwnOPG7
      05QYklw/3U3D/gcpths+v6VVJMa7r5PKb+DB6uL3V6+ymRS1e56kts3D66cGaX3qED/4X/8e
      bdrDH97uImBOcPj572Ba7aV7enkzCUCF7nZZE41WS9C9iN6kxaVRk417ePONWfSuSo5odKzo
      tRSXVDI918t8MkK9qxgp6MXjDeCqKt5yw5/PS3DqBi+92YU/EmE1qqXTFUWs3I+v67dcGppH
      qx3k2POPEhm+xtBCgMqdx3D4hzl3fZiR2dm7SoqXs2m6u68SFYa4hoHjX3sW3/AIZZUOLp+5
      QkRSKKjvRA4v8drbl4mlJNqOPEuZNMHZV/4dUTCy75FtG9cRlkuKX1/uNileURTePX+W3UeO
      YtR88YuLafcY171GDrVVfqalzZwAcgBbtyrExwTg8/k2xE7xkiRtuVr295J0Ov1+XvBW4mMC
      kGU5F2ezBQkGg7ejYI33uylfKB+Te67UyNZEpVKhUqm2XKWNO9o7RcrQ9dZvuTYdQqVz8sK3
      X8AWm+AXv32b7ce/imH6PDe9eTx6tBadrYoK1/18e0gszi6QV1qB8RPyeKVkmLBowGXd2CXI
      c3wyUipEb88AUUlLe+ce7Ko4g30DxAQrO9q333nCnAiMcX5E4kd///c82SDy+tVhbp59i5Cu
      nHxWOHNhmoYdDaiSIZJZhXTUy62bN5haChALrnCru5sZd4gvYkAlx1fovzXCrD/yiedmgvOM
      r4SJepdY9IS/gNbluF9kIz4SGisuQ5i3T99iZnyAsGhE9s5wfXzhzhYgE/BiLmnAoFZRU1fD
      f7y1QLVFRqNWo0gSkqJGrQbvVBc+sYGeS/+Go+0g2rifE398lZDWROid63z/x/+V4nscZr46
      v0rDnga8i36kYgtjXVeZ9YfQ2Co4sq+ennMX8CayVLYeYNvttmSlLLIM3uk+rvbPYCys59jB
      Om6euYgvkcBa3s6eRhs3rlwnprazr7OVqZ4u3Gkt+w8dITh2kZHFONs6H6C53HFvHzDH58JQ
      UEtjapLJ0SSF5QXUtlZSk00w3BNHthjvbAG0DhcJzywZSWZxfoGSqmpqqkupbmyjpaGGkqIK
      Wnc0oAcUOYMvq+XBAwdorjIwNxuhsLKRA4c6MN7zaYXCjNuDStKRDU4RTEmIiokjjz1JsznI
      TFhE66jh2WefIOOZIHW7dkk6FSORSCNKMoIgM9vTTxARUePi4aeexp4OMDM7SVHLER57aB+Z
      hR5650Jkw4sMTnkJhyI4C0uxGTVfiJXL8ekZv3qCn/78d6ymZKKhAClBi1rKIqai3LjyLnJe
      Ha3VRXe2AKa8ZvZX3eQf/r9/RFGM/PXfNZIdncAgaUBQYbSYUAEavRmjwcSeujz+5z/+Aw27
      jrJ7bym9Q0PEqhpov8e/DiXrx+fLIOkXSWREfIEwiiIRjwTxhCUK6yEiZgj7V0nKev50v4k0
      88sJOg8eZuzcNUTAaLGhVWvRagV0Oj2xaJCwOYuiNVPfVkVHrYMsOijaTTjgZnh4juIj2zf8
      bvGbicYDT9N4AHzz4+CsptXl4O2LI1iS4yh5TZQ5dSRSmY3rCPswSsLHctpKmVNPNh7En5GZ
      v36NiN5KRf126ooETv3xLMaiMtp2d+JQwnizJmzqJGnZhDqxSO+Ul0JXMZXby4l74hQUOQl4
      PNjybEwO9BHIGmlva2J5tJvlCDTv6kB0DzOxnKBxRwdlzo2dSrhZc4IT/gXOX7pGTDJx6OFH
      yExfoWtsrWhWbcfRzSGAjyOyuhzAVVqIBpClFKu+BEVFrlycz19gswrgk9ikAsjxWdmqAriz
      H0AWmeq7ysBcmO17j9BQ8unDhLMRDyNeifa60vVo58fIZDKIovjJJ+b4VGyE8Jd7wR3XZ6LL
      t3j9yip7O7cTcS8jfQZbkfFPc6Zngph3iks3R++2nR8jZ7jWl63an3e0ABq9GTE0z/hCDR27
      djD2zinUOw9gmO/Hby0nfPNVxuJWUmmFb3znb3jzl/8POr2LuLWOr+1e29c2HfMTCGvxzXbz
      6ptdxDDxjW8+xZkXf0VEsHHsq9+gucjyhTxsjhwf5Y4WwJjfxH/6wVfQhMf4l39/g3AwREqU
      SMejxJMZEvEUB5/+No80SLw7skooo+WFv/sR9vAEi+EkAGI6TjAS5OabrzEVzJD0jDPp9uMP
      SZRWVmDWrM/iYdfp3/P6iROcunidSFIkHvG/v97/MdJ+xuf863LfD5MKBllYXQUgm3bzxm9f
      4cSJk1zpm0KUs4T8Ef5SAHdyZZqF2KcY0mX9nHr7EtG/+HBfNmTc4zf4t3/9Kf9x8iqQ5cqJ
      F/mnf/pXuqd999x/IqUCXD37Nq+d7UYGgotD/OaXP+en//YSE57onS1AcmWU6zNJqoqLyIy6
      UecrzIyNo5lZxNhRhyRmWJodIz4fo/yYlZlUjKnRAfyiHpv+wzUmNeSXllFf1sLBejt2sxnh
      2D5mbpzjWl4dlQdq7/pBLfl17Nq5g4XhPsLxJMZ0GJ3OQTYRJh5Pobe4cFj0xII+ouEVgvF8
      ZDFDwO9H1prJd1hIp1OkYjGMDgdRvx9ZYyDP5UCjEkjHQ/jDCfQWBy6rnlgoRCyZxmjPw27U
      EAr4CHgCpK1r5cxlJKq2H6alyc6Nmz1kxRKi4QQmm4FYPEIiKWJ15mHWgt/nI7y0glhXQTYV
      wx+MYrS5sOhVZDJp4oksrnwnKiA0v4DdZWQxlKC52EY6HiYQTmB25qGXk/jDcazOArRSjEAk
      jT0vH4NKxO8PgNZMfp79C62Fo6SCXB1Y4Zm//j5WjQL+IWY17Xz/2wW8faqHpqpHMd9LB4oi
      UNrYSXK8b01sOgePfuVbZBb6GV313lkAOmcZ+bO3WPBr+NsffA276CXdO4Gt8zClFXlcuZRl
      1e1h+6GvsqvSxMVsnMVlP4995QUqbSJPOWTsDoUHLSrK89pRbvaw5I1SWFaFfj5DSfsj7Gov
      X5fnXJ3tZ3JpBVteMZ11RlamF7EYXYx0d+Fw5hNIrfBgcx7XBpZwGdOkDE68c0P0TQdAkWho
      38/K8EUkYyn1xat0T65SUFCKzW5HoxIIeeYZmfaQFM0cf2Q7Vy9cIa+iiNi0j6YqHWOzAbSS
      jNF0u56/IjJy411m5mwUV21Dq0mxtOjHYkzTPTqOTW9C9sep0gQYDwrowiGctRJjt7pwxxUE
      jYXmphJGe0ewlzfhuC2AuUCa1pZKBobcZF0KvT19CCYr+ZKCd3YUtdlJoVrD0kAPCdRoLKXU
      FoqMTPrIL67CnmfniwgBlDJJ/IEQqmyMcNTN6y/+G6ay7TxdFyOv9hh6swaXKUkyA+Z7EEOZ
      jAQIJ2VcBflUlEhMj68ddxaUElqZZGAlTfuekk+YAxjt7D740IeOlPHA0ffKX4h0PPwVrFU7
      cBpBkSWe/Orf0trajur2UtG220P7mrXpAHuOHHv/k1yHj7GeFFa3c3jnDlZGh/BFo7ePqiis
      aqStvoreoRFC7iiNe3dTSYBbcwKehTlkbQE2ow69SkLrLOfArp3IiQAFKyEiwQDJtIhRo+Dz
      RjGYjESnvUQRKK5poW1HHSO3bhFOZWhu78SYCrKcuV1VQtDQvOcoLU12unt6yWTe2+hCR3Vz
      G9UWAyPLHtxRPYf2tZGcHWBFFWV+LoK1sgiD0Ywgqyipb6O5/nafy3EmB/uYc3uJJERqy9SQ
      V8Oe5nKS4VWC9jI62hohOccVr0hllQ2j1YjdacZhDhMJrZJM16P/AhSQiYcY6L1FUWUVztJm
      njh2gPFTLzKUrCcaX0Wuc5BMa9Hdo2LU/qUJBhYyHHjoCLYPWZjw0gS9izEOHMdTNHkAACAA
      SURBVN6PWXdXZVE0VDZ9UAxJUKlpb9txh/PvLd65AaaWlgA9u0vqEQUBgQ9qXQoIOMqsdJ16
      mzE9aEs62F5RxVT/HIroQFbAoF+rUpBJxghHwqSxIKMAAoqUJhTOoNKsfWPvf64g4DDp6Dr/
      FoKgp7S1de24IjF68zwzMyYw59OmEf7kGgQBQdBSZonw2usnMUlZao5uo7zcwIwvgD3fgCKo
      0es/+IrS7gnKH/gme+tsLI30ElVZ0AeHOHFykJqWdtSxeU6cnKJuRwdltgz+QJB8Yz6peJhQ
      OIqis5JNJ5ha8VFT6WBqMk59Y8k9cQ4anSUcf7wElCz43+bn//KvKNp8vvlYB0u/+Cn/2K3Q
      ePC5D/ZkWGfKm/dR3gyp5SF++tolFhYWcKcN5Ef7GFpRGOu7QfOhZzauIyyXE7y+bNWc4Fz6
      V44tzYbNgN5qqXv3mvc2Ht9q/bphBfCZ61jmuCPvbY+k/yJmyF8ickOgHFuaTSMA3/Is09PT
      zC+5yX6GuXEmHSexYbyqGxGFbDLC3MwC6dtHUhEvw0ODLHoj6+8JViT8y3MMDo3gjSSRJZHZ
      8QEGBgZYWF27n5JNMDc3T0rcRAIY7b9FMBIhFk8if4Ze9a9MMLsSu3cN2+qICXquXuPKqQus
      AsgpTr78MvPuVbz+COtd2izhW6ar+xbuxSleP32NbMrH2Xeu4Pf7iSWzgMLcwDV+85tfsxTZ
      wHOAj2K05lFRVYVeo0WM+BmY6GPFk6R25x5MiRDF2xqR3DNELSUkpnsYXoyxvXM/a05IhfDK
      JFduDmIobuLI7moG373CQjBG6bZO2qosDNzowpM2sf/gHsKTN+id9rN93zEaS3KBfHdEY2bf
      sUexZN5a+9t3i7BjL4fbKjBb1z8sw5hfzhNPlxH1zpLs9yFlV7EX7aCltQGH04UUW2FwRcXu
      prUIhE0jgKhvgYE+GZM1n7oCG7KlhIebChic91FhjjG2nEBY8VJTnuSN7mkcFrh2Y4QjrXoQ
      E/SOrnDk8WfwdZ9hPFRKWnDw6JMHGe66xnBUoH/Ki1ErcWuoAI3PQ3HFNvKsmttushwfJeaZ
      4pXXzlD/wHMc2Fb8wX9Eoyy5l7hwboy4bOGrX3kam379elBAYWWql4HZFIcP70ObXUEjjnLm
      jQEM5QcoFaeoaj2A/9Ys6Wx28wjAVbaNps5OdEB0eRm7473EdjXmyibSN28gqEswqCVKt+3h
      4f11JKMJoqFpQECQJSRZISsqqFWg1ekRpAzJLFitOlr3HaOjzkksnUWQ84kHl+i+PsKxY7s2
      TyeuI5aiOr7zn+s+/h8V26lzDPPcVw5z5o+vksjK2PTrt/SaXJ2h363i4eMHUQsQ9sbYfuxp
      KrSr/ObkLWKmJCNnT7Iw3ke1Ze/G9QR/lN6LrzPjFzE6S9jb1oKkhTyDDncoRkmBi7mB62hr
      9lJqEZgbvEL/TJCq7Z1Uu2RSihOb4OfSu91YqnZyoDWft156hbQ1nx37DlNlh1tdV1iKqti5
      dx/icj/900F2HXmYyry72OThS8Q9S4lMhXnj9T8w7YmjUmt57IUfYvRc4cSFIXYef5499YXr
      uhlJeHmUP75+hmgWzEXNfOPZ3Vx85Q/Mxk08/8LXKLZoEID5sV7MFTs3jwDWlzQLc0HKqoo3
      zyrBJ5DLCc7xIfRUVBV/8mk5NjwbVgC5neLXl0wmgyAIW26n+A0rAEVRtmwi973gvf7can26
      VYa4OXL8WTasBfgoCzMzlNTUfOyB0mk/Pp+OsjLrxy8SYwzPBGlpqPhC2rhVCCxNcLFnjH0H
      j1Hi0uGeHaPr+iyHX3iKPClF19k3GZj107jvUQ61VaK+h6OuTHCOV157h4io5tATXyEvMc7b
      F3tQTMU88sSjm8cCRELv7UOgkE0nicZipLMSkpQg4AsTjcURZQVFFknEYiRSGRQ5iy8QQZFl
      kvHYWhjFfX6OzUA8KVFU5kBKiiCLJEQ9ZTYtSQAxhrXmAN//3jdJzg7waQph3A2C1srDX/02
      3/3qfgav9aPNq+Jr3/o+DzQ4GJ9b3DwW4AMk5kf7mfGGEKxVHGg1sDQ1jt8noStopdoSZGzG
      R1ajp7OtAYBEcI6LV0Yx2grZ8+BuzPf5CTY6FfVNxEa61v5QG6htqCc9N7v2tz6fptosg10X
      cNa2YrlHOcHvoTVamTj9Mn3zSY4883WcphSv/vbfCWgLePKJvZvHAryPmCYQiSNJWVbnl0kJ
      aqpbOnjo+OMYUktMjg4RS2eQswqisraKpDM5sZtUZDNRUulP+Pwcd4nMzXfewFC7nz2tVfe+
      pLxay77HXuBvnjvIaHcPojaf5771PR5ssDA8s4l2ivcvjXExFKKwvJKMqKA3GDGkNAiKxOxw
      N8vzMrbq3ZTrs8TcKQx6ParbY08pk0BWaRGySRIZyNtaOSHrTu+FV7nYN4ZeP8NDTxzGO9ZD
      z7U+DMEQT3ZU8eb1Zbb5TzBWUM3xB/ZjuodWYHnoXc71zaNW0miKdtJ/8Y+MraTIJhLUHmjc
      uJ7gjybFp5NxspKCRmdArWTJSKBRa9DqVKQTKWRBhdFoQFAkksk0qNQY9DokSUajFkilUsiC
      BpNBv66u+Y3CeibFJ+MR0lkZUGE0GREzSbKijCAImExGEvEECqDS6LCYTe+/iO4Fspglnkgg
      KypMFjOClCaRzIBag9lk2jwCyHF3bNWqEBt2CKRSqbac0+Ze8t4+wVttn+gNKwCtVotWe4+X
      ELYQiUQCnU635SzA1pJ7jhwfYcNagI9y48zLLETV5Fc0sW/XNvT30r2Y4zOgMHTuD5wZWkFv
      q+F7336Y7pMv07+UYM+xp9ndULyuk+BMZJW33zjBQkhh10OPs6/OyaWTLzPs0/LcN79CkTbJ
      hTdeZyyo4Ynnntk8AtA7qnj6+C4meq7h9kUptmuRFAG9Xo8gi2REEQUVBr0ORRZJp7OotXq0
      agFJlhBFGb1BvymSW75UKElW/Aa+++Mf4wTwXGGcnfzw+8WceO0SjbXPYV/HX6GiNnLw8a9j
      UYL8+vQALWodHsdBvrsvwGtnB2m1L6DUHuY/NZeiqO6qOO6XDEVBkWVESUJOx7jVNYQ/JlPR
      vAOHd5CeqIISDNJ+7FnkuRtMexNoTfk0bytg8Fo3OGt56MgOcrOK9eG9yFJBTDI3P8jYPy7S
      dOARju1oxeV9kf/5U5GGvY9hWWdPmN5sZeL8y7wz5GfvsaeIerqpb6vDnFeLVfwDy74Ac6On
      mBko5KlnHt88AvDM9jG54qZm224KLAqT8QSpWIq5JTcuo4P9D3dSFBjhimcRT8805NsxapOI
      GYXChl3saK6+34+wqYivzvDqiXeoO/IMP/gf/ztyNsmZ/3iRIWsj2ZpH+S/7HZx4/RyRnQ04
      19nx2PrQV6jePs2J80NUVCtEoxlwJZEVGzqrwKNHHscVH+RE1/DmEUBRzU4efC8pfnUWRaXF
      7jQiqUGWQnSdO4cmEqftoYfR1TjwSxasFjMqlQaTIbcWsN5Yimr51g9qEeMB3nzlRUIpmWDW
      xj5nIRdPneX3K3rS2kJ069z13vk+zl0YRFSJJLTluLbt4K1f/gvTGpHah/6GVu0cJ99+GcQs
      lZ2PbFxH2EfJZjJodDoE1jbrSMTjyIIGnU6Lt6+HVOM2irQGLEY9kpgmkUij0uox6rUoCmjW
      aa+yjco9ywlWFNKJGNFkGr3ZhtWoJREJEc/ImG12jDrNus67ZClDNBwlI4PFasegU5OMhUhk
      VTidNtQoxCIh0rIau822eQRwJ7KpFILBsHnM3T0glxS/wZBl+VN7glVaLUjSX9yhMcdaf8qy
      vOXCSzasALLZ7Jb7su4l2Wx2S4ZCbK2nzZHjI2xYC/BRkvEIWQk0OgNGve4zhTQrikImlSAt
      KpjNZtQfck1mUkkErR6t+s7vCknMkEik1ibWBv1n8G4qZNNZ1HrdJn0bKWRTCaLxNDqTBYtB
      TTQcISMpmG12DNp7u/igKGv3zygazCY9SFkikSiKWofVYt48Arh5/i1ESyHJNOw7dIg886d3
      aYnJMFcvX0YWFPIaHqS92ra2MqGkuHHmNMbWfXRUF31wgaKwvLJMcXEpKpUAiIx1X8WTBJVa
      Q+vuQ+R96rmkzGDXTeofOIhvapzSqnr0ms0jBSUd4fTrJ4gqaiJxA3/9jQ7eOHkVlSaNaGzg
      r54+wL1chc6GZzh5ZpCUzsI3nj3GzK1zXBv1I2cytDz0xOYRgKu0gcZdu1idHiEWiRCemWLK
      m6Vj717k4BLzi7P4s3YePNjGwkAXk16ZXfs6KbIZEQQV9pJ6Gotkpj60VUDGv4yhvhHJG0Ks
      LiK2vEQ4FcLvi9I/PEp+QQ0HHj5Inl4kEslSu2s/lfkW5EyKxeUgZSXFLCzMUWg1MjA+TjCh
      ZvfeTnSxBW6NLCDqnBzc1/r+/XQ6HSoB5kduMraSYkdnJ6bUMld7xsmr20FHQ8l96Nm7Q84k
      SOtLeOaJA3SdPEvGXMkL36oktDTM+V7fPb+/zlHLc39VxYULFwAIhpN0HnsSS2CMhUx68wjA
      vzjK+WAASdHTVCXTO7qAUa/mWu8w9Zoorm17KZgawZv0MrUQo7KpGYthzUooAsiBeS6ECzlY
      HyMuWrFoBJZWIxQX15NM9bMaFUnMjeJ21nGgswm13kjL9lY0ahWgoeNgB703rzIimencuZ0l
      t4eykiKWlhZwlDhRF2/nsDlI99gijRY/Rc37cKUmGJlcff8Z3MvzmFQZrg0vYjfIXOoepc3g
      Q1dQQXmB7T717Ocj4V/gnfNXqdixn3JLnF/97BcYC1s4AIxePcm74yFadh1E+wUHX1XWVnL6
      jZdIqR0ceXLb5hGAo7iWqu1tGLQ6ou4JiqtbaG8qIy1CYGaWAqeJpNFARm2lc/9OVmfHGFR0
      7GssJu6ZQl21l2Z/PxfGZZ4uLAGyLE2N4Z1cREqnqLX6yTc4ad5WhRoFMZtBUbi9P0CWWEJN
      x+GjLI3dwBfJri0rZmJE4iKgxmQycHt/bFRqDUa9jrU9g/70FyBmJQqqt9G5rZxMVsagqsIU
      WuX6zX6efvjAF9+xnxODo5ijjz6BGPHyTtrC937wd1x/+deML7dQ2vYw3+/IcOK1Nwg11JBn
      /OLaNTIwyqG/+i7m1R6uTm6ipHhXQRFmkwkNoC2uwrx0nYuXFqht7cDhdKAB9HY7apXCwuQw
      y1GB9vq1t6opv4r4tWuETCU0WFXEAVs2TuH2hzhYU4SSDDLlS2NyutALAihQ4dLxzunL7Dt+
      CJdeIOwep+uGD0dpHR31VkRPmDOX+3AWFiEIWQauvsO8LZ+O3R1k5ua5ev5tCovL2b+7AI8c
      QQs48wqwldZSuHqNS5fmqWjaQTE+BkfmKappu4+9+9lRqbVYrFoUk57mhUn+/ee/pKB+Nx3m
      NG/+8XUCSdh+6GEc9zj/JrU8xC9ev0wqlcKTNnBs5y7OnXyRlL6Q4492bFxP8EbKCU55F/Dr
      CymzrUV9hd1TZGx1FHyJnK5bNSc4J4AcwNYVwIYdAmm12txG2evIeznWW22j7A37C9pqLvt7
      jUqlQq1Wo1ZvrajY3K8ox5Zmw1qAj3LrwmvMBmQqmnazq6kc9YdiIWQpyYo7TmlZPgIQ9q0i
      mOzYTJ/C3Isxrl28zEo4TX5lMwc6GtF8irVrMbSAV11ByZ+pyp7jy8OmsQBqcylPPf802ugM
      i974n/yfLKfxekPv/x0PB4mlM5/ug8UEmoIWnn/+aSqFBaaDn+4yKerBm/i0rc9xv9g0FmAN
      Aa1GgyDE6Do3zo6j7Uyf68J1uJmlsRvMTvdiL2+jzhan7+IZrmYFmvcfwZFc4NbILIq+mOOP
      VXPp5V5SdhvHj+zFDHim+zm7OoagcbLPKjJ8/SJjS2FclS10FMq83TuOKpGkaMcDNOjcXLo1
      iyodoO54B9dOvcxyXEvz3mM0l20sb+5WYNMIwDN9i5u3uqnYdYyjeWaW5LWtLmR5rUhrSWMn
      u3bWcev6FVJKPh2Hj1MgBOlZXGFubISUWo+S9hFLV6G1l3P06Ha0agFS4Cqrp6WhiNXZEVaD
      GZLJJAIKs9MTtLkaaOx4gFZLjG6PiNcHjz7/PLrlbsYQsFjtmFCBJOZ2lf8SsmkEUFS7i4Mt
      dUwOT+IJuVBLQXpudLOy6CUfhdDyND0ZD1Fc5KszTI8OMpNJYq9twVKSj1flwK7XohXA6nCu
      /fhvEwusMDkZIx6KUlYkEc9ARWU1yooHWMsnVgkCAmoMmig3u25iTixgaOtEb7ZjzUTxeUMo
      la6cAL5kbFhH2EdJxOMYzGbkVIKUokadjeGLpDAaTNjzrITdbhKiioLiYjRSAq8vCFoThQUu
      yCbwrPpBa6KoyE46oWA269Y+WM7i9aySyIjozQ4K86zEAl7CKbBYjFgNOrIqLUaVRDwroFdl
      WfX4Uev1WJ0FiBEPwbhIXlExFv2X932zVXOCN40ActwdW1UAX95X0icgy7nt7NYTRVHeT4zf
      SmxYAeSS4teX93aK32oe9q31tDlyfIScAHJsaTbsEOhPUJJcPXOOQEbG5KrkwN52DLdjusRM
      jCV3jKrK4nW7nSxJnH7lF2QMBQimQo4d7sSk+yCILBMLc2t8hn0dO9ftnmvE6Lvlpm1XPd7p
      fq7f7MOd0lJX08zBIztYC2RWWJ2axVRTjeVe7j63SdgcAshGiMhOjhzvxKxVIZBmamgIf1rH
      tqYatFoNUjJA960RDPmVtFTnMzE8SBQz21saSXlmGFsMUN3UTqk+zkpMwR+IUObSMz41j6N8
      G9sq8v7klqUNu9ne3s7MUB+RWIhQVk1pkZnV5RBW29oSqiJnmei/RVjloH17PcnAKsFACH1+
      IfHlGQJpDS07dmDVKiSDK/SPzGDMr6SlvhDP7BKr/lW0edVsry5geXqY2VU/kqYMgKLadh61
      mugLGNm7rYxM1MtKNE0gKZCv06JBZGF8nOVAFFdhEVGfl7zqZqoKc8FJH2ZzDIF0BXS2uLh+
      4Qw3h2ZZnhsjrDipry5ByMRZWvbimxolIOuxWAyk/EvM+uJYrBbEiJeRpTANdRWM9vUhRpe4
      1DdPYXERyzMjpAUTZsPHS6wEVqbo7r7JfCiNRZ1mct4LZJibXCALgEJwopu+pSC+yW765iNM
      9V0nqDJjFKPMLvux2K3vv4HEbJp0KsXYcD/+aJiZGTfFlZXEV5YJBaaYCeppbqp737J9lIRn
      khuTIUqLXbjnFsgoaRYWg1TVFDA7tUpZeT7LK6t//uItzOYQgJRB7aji2PGjGJJrjier04Xd
      bmOtxI6Ao6qJhiIzk6OjSKZCtteXE1qeYdETQmuw4HI50Str9UNrm9spcFiobGij2CYwOTRB
      8iO3NFrz0GYT2AvLMOrUKLJMNp0mkcm+f04slKC0rokd+w5R4zJgcpayra4cm7OQlm21JL2z
      zHpioMDc/Arl9Y0UW3SkRQmzq5iSogLsJh1SKoG5sAyH1YTqL3htVFo9TS3NOM0fRLhanIUU
      FOWRn19EUb4TwxavgP3n2BwCkEUmbr3LW6fOIdrKqaupwj9xnXcuXicu67BaTWQTQSYmptFa
      XGhIMT89STSrpai8HIfs461T5zGW16LXWrAb1QishUBMzS5hynORCSwwMLYAgCAI5BeX077/
      EEWqKMtxLXZxkbOXepD1BtRqDTaLldLW7aSmB+kdnCAlylhsdjQqAUlMsTAzhS+hJs++9oMt
      cJkZGxwiq7dh0OqwWIyAgMlixphXTWLiAmcu96M2fVBCQdAasRrXrtcYrJj1az9wi92GWlDf
      /gwNFosBBA0Ws4F0ws/svI+Ub4Y5f/qL/Ja+lGxYT/AXnRMcWJwka6+iyLo5N1HK5QTnuCOu
      8vr73YQc94ANKwCNRrPl8lfvJRqNBq1Wi06nu99N+ULZsALI/fjXl/cS4rdapY3NMQnOkeNz
      smkEsDo7yNl3zjEyu4p8j6b1Cf885985y+hi4ENHFZYn+jh79gKzq9F7c+MvKVImRteZ13jp
      dydwx8X3jyf9c7z6+9/SNbqEAoSXR3n5pd8xuBAAFPouvs5vXnmL1dinzMu+GxSZ5dEufvWr
      XzO0GEHOJhm4dpGx5TCwWQSQddM3kaKjcycmJUnc52Z4fmWdb5JhYnCW2h1tzE+Ovn80MjfE
      aEjDrp1NLA3dYCUq3uEz7szk+BCZOy1sefroda+pe2F2gkgye4eT7z3R5Wnk4nYe3F3B5Ys3
      bh+VuHT2AnUd+/D2n2d6eYUzFwfZdaiTm6fPEJy4wIjSyNHOCi6f6yJ9j9cgk4FxTnZ5ePzx
      Ryi2aViZGyUeSbESWXtZbY4Bn9qKXnQzOKKisaWR2e53uDoXZqllL3tKZC52jyOrjBx8+GH8
      Q5dY9GeobWvFM96PJyyybfd+SvBwqXuCbDzFzme+/v+3d2bdcZxnfv91VXdX7/sKoNGNbuwA
      CXABCYhaLMmSTFmiPDOa+MxkMsnFZCbOp/A3yF0ukos5meQc5yTOOWPZ2mytFBcQXEACIHag
      ATSAXtD7vlcuSNqWLUuiRUrcfpd16rz1dlU/9b71/J8FcWeG+c0DbF2DTIz3oxZUdPiMrG5G
      cXs6fnvpSLbC4f5DWM0agsEDcgcJYku7lAsZnMMT5JcuEsnV0Zr9nDzs4PL0NaoqE5OTE+zc
      uEy6UCTVMPJXP3qeQjZHObXDR5euEEtWOfXyi6TXrrGfa9N3+BiluQtczW/QOD6JoZlF52iy
      PHOBpf00BkeIk0csXHjnBlWxhHvwBSaHXfc1BdPsP8SJZoWbs5v4A0O3jxZpq3309vhRl7dJ
      b+yh84UIdvkpOWfZE/Skwwtcr5tIx/coVJ9Buo/VofMbN1GY7FybXWD4+CQdvUcwC/PM3n53
      PBorgKDnqReep8drZO3GAt6hCaaee5GXTgTZXE9x6tXXOT3pYXEtTbFSZ3TqWbrNEq1Wm3Y1
      w0p4i/B+hRdffZ2pQTcNOcuVi4vUmg3i+9tUGtBulIlmZTTNHCqhwuJmElkGEWjKt5JI5HYL
      hQDVUp3+iefoNaap247xxo9ewiQ3qDVqyLKC/ME+kXiWttrCcy+/ypjXQA2oVito7D5OHhtn
      6vnv0WVW0Wi2adeKrIZ3OXniBCde/Asmhjpo1Kq0ign22k5ef/0MQSlBpCDjDI5z5kc/QFlM
      c78FnmatwOXPziO6D3Fs6E7zDgG53UCWbwUNikrht3pNo61A132Mv3phnECgE51K4n75MlYv
      /or//s//l0RNRG+24vOY+PjXH1D9gxX20VgBamkWlqLo9SKy3EIhyCT3dtjWSlhMsLa8hjYf
      w9bTj9i2YTFoqMWjyEY7QzYz21UleqHA8voGjWgKc68WZ5cHe08fGrUatQByo0Y6X8DjMjN/
      dY7jL58BBXS7rZyfu0HOZSK6n+PQVC+FpBWnSYNcN1KKrbKpt5CvtchlM9g6ezFboghyG1kp
      IamEz3m0yokNLi/t4/f7yWaroLEzNOhlO9MEpY7o0gIxTc+tkyUDmso2K2sKUnklQa0CNBKC
      IH6uz9n9Ir50jrW8jsPZfcJKAY+2QUPrwCAecP78OdK7Bzz18hixj37N2YtV1vIi/04osBjP
      kU+toQ8cwXSfdMX+qdfon4JaZp2bv16hYrKilrQUEtuEV9YIN010mQyIP/3pT396f6bwLSKo
      aNfyFMpN/APDOKxG1O0aFSR6QgEa+TSCNcCgz4JOp0ej0SDpdQi1Cm2NjWB3B0YJNtc3yeab
      +EdGCXnM5LJ5JIMVq1mPUiVh0YpkK3Dk2GEEWUCvVaM2WLGq2+RKDQKDIzgNEjqdDo1GAkEk
      H9tmN5lGkBwcGglRK+Yxe7rpdNmxWkxoNBIanR6tRoPJYEKlVNJutWi2ZOxuL1qhTkttIeT3
      ord5UFZSKDQW3E47BqMVt11LLlfC2zuE12REp9MiSerbc1B/7S1QpVL5rRbwdZFlqFXL1Go1
      RK2Z9SufoPMNMxjsIpvKEBqfxO+y0tVhJZkscnRqEqteTXJ3h5YpwKnjA6jF+2uoosaC29Ai
      lqlzbGoKoZwgUQaLRolSb3t4QyHuLTKFRISV7Rham4+hoAfhbtpM/qlR5RrrczfJNkWCA0PY
      DQ+uyPRNk+JlWeYgkcDhct9Fh8zvnj8ygFar9bU7sD/h0SGbzSJJElrtt9iv6AHgj74Bstks
      9fq34J/9hrRarceugsH9pFqtolQqHzsl+KHdAj3pEHNveRIN+gXEVy/x8bUwABpXkB8+N/G5
      koF3aNZy3FyNMXZo4CsvKMttZm/cYOzw+LfiqXjCE76MLzUAq2+YZ+pZ/sdHdf7xB0OIf0I1
      aFRTfPrZ1a9lALTbfPjJR4yMHEYU7p0TeH/tGjdWo6jMHiYnxjFI32zsWj5PU6tF/1VekUqM
      X707AyrQOYKcOjmK9IX3qUZsN4+jy/m5m57bXCDvGcV3l9+eC1en6RmbRP8A7lg2rp/jk4Vt
      vv/iGfweiRufvsP5m1EsvRP87SsDfPb2x2yXVPzlX55Gd4/nX8sl+ODX7xJJVrAPnOSNcQs/
      /+VHFMpVek78kBF9lPfPztEQ9Dz76utfbgBqrRG7zYxOX8duMbI9d5bfnJ+nqXVz5tWnufL+
      L9gpKjn59Dj56Ar/8t/+C1XLMV4bqvHz6V2U+QTeyTMc1mzz9tkVBJ2dN//23wAg1zL8n3/5
      30QLbYITL/FUd5Of/+uHNNoi7pFJKqtXePUff8L8Wz+j+3tvELJ9yT9ELhKJyXzvldOoaKGQ
      m+yF18k3JQI93TRzSRKpJG21CalZoq4yE+i0chCNkcmXsHX4cUh1Chixqmski032r8yQNJnp
      Dw5hU1XY3k1i7fDj1MsUinUSuQq9gQ4EWnQOTzLeb2dzbppkoY6cCpNvaegLdVMu5KjmDhBt
      HprNNq1qmWgsQr4MXT0h2s0a0cg62Rb09gdRlFOEIwnMXj9OvUi5XCKVv9KWwgAADl1JREFU
      qeJxaghv7SNZPAS7nDTqdeRWnchOmEJDRaAngE79YOia7p5RjokiYkummTtgq+7gH/7pB5z/
      1/dIyIcZnXoe4fr0fRHqRK2JZ06/iVYo8c4nKyh1fZx+8+8wkub9s2HCygRPv/43GFLLbGYy
      d6cEf/TO/+OgVCcZjbA8d5msboif/NN/YLjLjN4Z5N/+w7+nuj1HpVRE5zvCX782RSK6wrXz
      EV77jz/hhUCFTxcPAMhvTJNyneI//6e/IHZxmnMzl+g+9SY/fmmYbFZmakDLRzNLbKVbuA1f
      sS+tZ2lpXWiUAkqlitTeGrvpBkItzcLqNvtryxQFHZHVBYptFal4mEIhw2o4gVYrsnJjkVxy
      k41kDaoxFsM5tHo9BpMJrVhl9vJ1dvcjzFy4TiEf4ezFRUSN5rc+9mwiwurqErGCkkZ6mdnF
      LSLr15nfSLN+4zzhVBO1ssbuTpJyJsluqoCkqDC3tIncblAot9CUd1hPVpifuURkf5/rM5eJ
      phJcvXydllKiWc4RTxxwY+Yq2dsBQ9VMjMWNHWqNBu3v+FNOlsssXr1KOJpFb7Yg3UrGpllv
      Y7SaUSslOkwK0hU1VpsRxT1wM/8++WSE2dmblNoiykaOmekFho8eRpD0CMUYn04vcXTqCH29
      fi69/TPevhzG47TdnQF0dAToH5/kzA9fJujzUj7YZO7mMgf5CqJShSgICLeztlUqFaJCQCFI
      2OwyN69dZ2mnQKfjVlkOrc1LbX+F61cXaFodeK1GdjeXWAvv00RB79Onif7qv2IYeR79V73Z
      1FaEcpRyo0WjUadcLmPrCOD3ddCoFhEkC6HeAO7OTnoDflxWA4q2jNHhwe/3Y1W2qQNyW6Ze
      rdKSldgdNhyeDmzq1q2SJ74AA72dKAQB/8AhQl777x6iLKMQtQyOj6EsJJFsXgI9A3isakSD
      m6OHBzFp7vwGJc6OTgLdXQhyA0GQCPYP0NftotmqkMkLeLt89Pb6USsEOntH6PNZie4e4Ozo
      xNxuULwdeqE2OQj5PJTScRLp0hfemm8TWZb/yIWulATyqQzVepVIto3jfnlZZRkZaJUSXJnf
      pv/4U/R5zNSLUa4s7DLx9HN4LVpWlzZ4+kd/z5mTPlY2o1+tBCuUOlwuBzaLDn+wl0o6TgWJ
      YP8IvS4N+4kcjo4Awe4ObFYbdqcLjy+Ay+nEbrPhdHoZGRumGI9iH3yK430OXE4Xbv8wfnOT
      eFHFM88/RYfdyP7aIlu7USy9R/CbRWZvbnP6jZcwqf7YAD6nVyjUqFopLl26xm6qgq/Lw+bc
      DCuRFMH+YcR6FYPTQTmXw2q1USnn0Wg0LF67ylp4B01nEL9Dz8KlC+ync2gsProdbWYuXKFm
      8OIkw1okTkvQ0uHSUceM7U5ucKtCRbAz2NuJTlKiVKnYWVsila9gcXcitqvY7E4ERZ1koobF
      JHPt8kXCuxl8oSGMigpNgxNTK0sGNzYxzuZ2nIagwWE3I4gqzAYdtXyc5c19RKUGbyhAM5PC
      aDYSXlsmXxfp8ndj1P75cQW1Wu0buUEVChWujg6sRi2X3vlffHhhjpWVbQyhQRyVLd567zNU
      PYc55mryP//5Z8wvr7CZqBAK9qD5gud7t0h6M16vi1J0jQ/OnmN1eZHlSAm3sMcvzy2zuXSd
      SF6k36vhkw8/YGmvyOj4+IPjBi2ldpiemUc2eJiaHCe+eIm8oZexoIsvWi2/sRu0lmJhp85o
      n/erz72HFONxkgoFAZfrW73uV/G4ukEfGAO4W57oAPeWx9UAHkAn2tdDFMXHrpT3/eTO9udu
      guEeBR5aA3jcJPv7zZ2E+MfNAJ68Qp/wWPPIvEYblSwryxsojC76erpQKZrsbq5SllyE7AJz
      N6MMHh9B9zX8z9noJnmlC5/TAPUS69t7dAb60f2Jl2OlmEdWadFJj9fb87smt7vMxYUtUFk4
      9ewERpVI/mCTK1dXqQOSpYunTw6T21ni6vIe/UdO0ePS065mubG0Te/w2KOyAjSZvXgJhdEO
      6TA3NmPUsml2UkXsJonVawtILie12BqRzFdHukZiu2zML1Jvy6SjEeauz5D6w+q4v0f2IEam
      +LsTctE1drMPfkTtw02LpenrGEMhQj2dqG/HlUk6K4FQCJ/TwPZejEZui7c+WiAQ8KNStAGZ
      lWvTnD37IYnSo7ICNBLUNEGOhwIoAgbOX9xmfivK0l6SerPOxuU5jActHCe6aYsKMnurTF9b
      ROvsZ7hbxezsMkpLN6emxtAIgNKEWVuiWK6TymRwORzQrHLj4nnC8TLBsZMMOWU+/XSaitbD
      sEdifekTZuoiY1PPYK7kaWkEFq6cI5rIUFTZOf3sEbYWrrK6nyd4aAKPvM/5G2HM3aN87+iT
      sot3TbtJvFano1hEdFlR3TEAvZVgn4XNqxFGx49Q2jiL2ttHuVLHoZOopsKEy1bGQm7gUTEA
      WUZW3FnMFICagfGTGPpKDAU6MVQVDL34NGzOkdG2SYUjHH/xh9hUNc798i3SbQnS88QPjeE3
      3RrF7zSxm9ijXrfgMJWR223abRm5WWZucRnJBn1Pv0KnXklia4We0Uncyga7lSzaUpaKQaZU
      Fzn1/VdZW7pOLbHB9MI2Rr3I8vIW5u4Ggs6Gw6x70kH+z0Gh5PiJI2zFs1x852348Y8Jmm65
      cFulBEtxgReO2Mlekqk3ipSyNd59bw97M4a25yipSBJ1KvOIGIDajbr0AesRHSQ3ULqCX/rD
      JLWS9MEB6JTobC7GAsPYpSa/L6TqO7rIvPcp5hPPoEzsUysVKYkGTk50c3klhtGoJppIojZr
      aKFEr9egbMqIwu+0CVGjQ6e+5V0RlRIeXx9jIwHktoBO1WBYnWFxaZW+UAfSF8zzCX+adrNJ
      PFPAFwiQ3dqi0WpRzOfRGozshtdxBQfQCqDoG0AfS+IP+NhLreDo9JPJxogdpFFlCo9IUjwC
      LreN3Y11GoYOxvp8KEUBtUaDVpJQSxIGkwGlqETS6uhwWtkLr1Fq6xkY9BHbWCdbU+L1OlEJ
      t+KYdHoLWpMGj9OFTqvFZLMjltPECgpCwW58wSD57RXixTYdHjd6vQ61pEbSaNDrjWj1Jow6
      NXqdDpVKhd7qxSwU2NjeR22yY1LWCG/H8fYO4rXov+sb+GclxX+XKAQBqVXg0rV5nCNTjDpq
      /OKdawQHQ7Rrdbx+P5IIotaBSU4wu7jPiedfYai/l1AoRKDbR2+o5+FVgp9wb3nYO8XX0gky
      KhMe490p2Y/GFugJjz2SzcWf0wf0oTWAJ7FA95aHoRDC/eAR0QGe8E15XHfCTwzgCY81D+0W
      6Pcpxtf57Oo86VQdm8/PqckJTHca6rbrXJtf4+jYyJeMUGdlZY+BgZ5vZb4AzUqBrYM8vd2d
      yLLM7spVbm4mMHh6ODE2hPo+FI1tN+tkChXsVvO9H/wBoZrZ5/333idWaNNz9Fme79fz9tu/
      IZ6rMvLsGQYMB3zw8RUKLYnnTn9FUvzDgsHdy+lXrVw8m2Di2SGEVp2DaJS6oMVjN1AslgEo
      ZhKkCw0cHg9is0Q6naet1OB2GSkVcsT3IjRVBjqcFoqZBJliE7vbjVpRJ5/JU6q3cLg9aBR1
      otEEKqMdh0nNQTxOQ6HB7XKgEhXUShniyTxqgw2PXUculaZQqqAxO7CbNOTTB6QOUmRat0sl
      tlJsxlW88MoPkJt1RLnBQTRODQm3y06jlCNXKIJaj7JRoqU24TJLpLN5ytUGBr1EqVTF6nSj
      qFfRmIw0i0XQ6Wjk0+RLFRRqE06TklKlht36HT6s+4xSb+P7b/wNlPZ56+IOisFDTLzyJh5N
      gXc+XkNxso9X//rvqG7PsZJKPRoG8IekdpeZXU7QVjSpDE/cOthMM3PxGm0VbCeqdOqSxApq
      FPU8xdYgzWKKvYSCZCKM+akQl69vYbOq2InmCHS2WV/KYzC3yVQEdKUtttNlytUNjo96ubG6
      j93ZgdVmQyWKlFIx1tb3KJREXj4zwZULM9i7O8htJRkddrC0HMGgVlKXbLfmlouh9AZQiwKI
      GuLhedZjVdTUyVQCCPsrFA12DiI38Pn9pHMRjP1uLt1M4NY2WazIuIwakuU6cjxB/7OTpBYX
      EQ6NEb1yAZzdVNNbqMYG2DtI093xYGWj3UuUag2rM7/gs+Uc46deRKm3YW0dcO7iHKPHp7Db
      9WR2V1mINxg77n00vwHSsV3akgG7zYVWuh1kkI2yX1NjttixmzUIWj19AyMM9/bQqBZQmb0c
      PXKYkMdCORNF7x/l8NgRDK00FYWWvuFDjAz1I7UrRGJxDEYTHocdrc2N16qnkElSqNRBbpBI
      ZNEbTSiyGfKAs6ufQ2NH8BgV5GpV/D2jjAz1Y7yTKG+0I6cStNoyrVaTfKGMf+AQhwYClIt5
      lHonh8ZH6fL5OXxolE6HAWSZjuAQhwf68IV6GRkYRBLrt8JCZJlms4kMmOw+Do2N0+M20HwM
      Kkm2mg36Jl/j7998nsjNm5SqKaan5xl96kV63EaykVUWojWmTp3EYdA8SiuAAvF25S5XZw+r
      V1dI1sy4u+Vbx21+OsUVYokaXp0LdTXDudn3UesNHJs6TqK0D4AgCGjdfdQ+Oc/biy2cgcN4
      1G3aDUAhIKjUDPhcXNqIo9PZqFVLZNJpKm3d7YAeBYKiSTKZQ1CrEVAg3J6XIIpYdXouX/iU
      eYWEqTN0a+oqD07VJ7z7zgoGl5+RTgez07+hhsTw0eO0E9Fb4wq/GweFcKuynkJAVAAKBaKg
      xGFq8cHb70GuyrEjt85VAIIgolAoEAWBZj3D9m6DkKvFck7PYKfp23xQ95VsbJl3371IqS1j
      8o9TWrnAJ7MR1rbWcfWdwJy9zNxuk6XZaYZOvf7wKsHfVAfYDd9EsvbhtDy4Jcu/TR7XnOD/
      D4pmy9bx6MIUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      aG3Z0xAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='127'>
      iVBORw0KGgoAAAANSUhEUgAAAH8AAADACAYAAAAtIbyzAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAHZklEQVR4nO3df2zUdx3H8ec4Cldqt3K0a4tZV8gYw4at/JCCMKxx1kzcQAnbhM1hp2OF
      rBri1EnMjIFtEiXr0JXrLBoxyuIvCpVZ2AShc4CVntONUQiDGvsjXa9A07tb2+PrH4WtBTl0
      PXrf7v16/NX7ftL0+8nz+vn2n977GsdxHMSkEYm+AUkcxTdM8Q1TfMMU3zDFN0zxDVP8GEKh
      UKJv4apSfMMU3zDFN0zxDVN8wxTfMMU3TPENU3zDFN8wxTdM8Q1TfMMU3zDFN0zxDVN8wxTf
      MMU3TPENU3zDRib6BiBKpPmf7Nm9l1cPp/L5Z4rJ77/cdZyq8h9RcyyMJ/1WFq96hMLxniuu
      tex/lmd+9Tpnr83jC18r5fasvm+JBH7GL8NLKJ6TMqS7dCUn0ZprnLL1W52DTWGnrrLSqR+w
      GHbqK7/j/Hh/i9Pt9Dpnjv7WWfvENufUldZ6653KtVXOqW7H6T5V5aytrHd6Hcdxek842366
      x2n/H2+tq6srjht1n8Qf+1lFlD52L7OyvXguXovUU9v2ce6bl0kSHq69eSGfu+nv1L11hbW2
      Zpg+i5wkSMqZxXSaaQOC+w8wquh2fEO+SXdKfPxYTp+GSRP7xfIweUoWbwejsdcysuHwIRp7
      oKfxEIfJJiMSYH94NkXjL3mLmeWCZ34M3e8wIjl5wCWPZyQtzW2QEWPNk8+iO/7GD1evoCNl
      Bg9+YwGN+15mctEk/rFlDZW1HaTk3UPpqkIuvBcu9985nZ2dl729+5/6w+D2N8R+8fiCAa/d
      HX/UaM6FwwMuRaO9ZF2fEXsN8BU8xLqCh/oWWl6i6rq5LDy2nXWjv8QG/wTaXvwB1XWzebjA
      C8CYMWMu+fGhUIjU1NSrsLHEuHgv7j7209Lg2AmC716IcvRIC+k+T+y1AYLs3XOOgoIU3jnT
      QfbNN5GEh/HTbmVk8PQQbcSd3B3fO415GX9ma20rPUQ521DF74/fxswJV1jrp+vV7bRO+yRZ
      wOjrxtLccJweojTVv0avLy0Ru3KNxB/7gc2sKD/43uuDfV8XlPgpzveSf+8XOVX+FF/dEsaT
      Poulq5eTA0CstfO6Avz66GSWLD9/GtxyNwv++iSrV1x45nuHZo8udY3j6KPYLicUCv3XvwUu
      WPjtrUN4N4NX9eR9A167+9iXq0rxDVN8wxTfMMU3TPENU3zDFN8wxTdM8Q1TfMMU3zDFN0zx
      DVN8wxTfMMU3TPENU3zDFN8wxTdM8Q1TfMMU3zDFN0zxDVN8wxTfMMU3TPENU3zDFN8wxTdM
      8Q1TfMMU3zDFN0zxDVN8wxTfMMU3TPENU3zDEv/By1fQ9cYLPLu5lpOdUZJvmMMDJUuZMU4D
      luLB3b/5wb08vyOJRWs24Pdv5On7M9m7qZpGACIEXvg5/579OGX+51j3YDavVJxfiwbYuS+X
      lWV+ylbmsm9ngChA9C1qArksUnjA7fEbT+D9xF1MGZsEePDmFrFs+r80YClO3B3fN46W3TWc
      jEQBiEY66R0RoqklogFLceDuZ37OZ3l47iY2fetRWsNRRqXmctvEHoITTscevjREA5aGm4v3
      4u74eBhfuIrvFb53pW3XOnZcn6UBS+/D8BqwdIkgr9WP5MYcNGApDlwe/wxNJ9uJRIHoWRp+
      V87uzM8w14cGLMWBy499aPpTGevrWgmTTGbeIkofmUrfQa0BS4OlAUsxaMCSfGApvmGKb5ji
      G6b4him+YYpvmOIbpviGKb5him+Y4hum+IYpvmGKb5jiG6b4him+YYpvmOIbpviGKb5him+Y
      4hum+IYpvmGKb5jiG6b4him+YYpvmOIbpviGKb5him+Y4hum+IYpvmGKb5jiG6b4him+Ya7/
      7N2expep+MkOXm8NQ/INzHmghKUzxuEBzdgZJJf/5r/JbyqOMLXkaTb6/ZQ9sZiUP26kuhE0
      Y2fw3B2/rZETE+cxP9uLB0gaO4W7PpVFexDN2IkDd8fPmMncszVUn4wQBXo6jrDjQAofvQXN
      2IkDlz/zfRSuWsausm+y8lgE0vJY+mgJU71oxs77MLxm7ESbeLF8J6nLvs9z2V7OdRzhpS3l
      7LqnlCLN2Pm/Da8ZO2/s4vCku5nX75l/5/wPcaC+RTN24sDd8T+cS8qhPQTa+5750UgztX9p
      IN2Xphk7ceDuY99XyFeWbMO/4THK3+7Gk5xJ3qe/zPLzR7Vm7AyOZuzEoBk78oGl+IYpvmGK
      b5jiG6b4him+YYpvmOIbpviGKb5him+Y4hum+IYpvmGKb5jiG6b4him+YYpvmOIbpviGKb5h
      im+Y4hum+IYpvmGKb5jiG6b4him+YYpvmOIbpviGKb5him+Y4hum+IYpvmGKb5jiG6b4him+
      Ye7+4OXAZlaUH7zkcs7itawpytCApUFyd/z8Yvz+4n4XIgQ2V9A+M4MBA5a+nk64oYqNFdVM
      /O5Cct4dsFRKdvN21u8M8LHifDwXBiwtV3gYbsd+8BX2jbqDQh8asBQHwyh+lDdr6rhx/kf6
      ZuppwNKg/QekJFkJkOJ0DAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='84' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='84' name='Sheet 5' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
