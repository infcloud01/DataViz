<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0615.2100                               -->
<workbook original-version='10.3' source-build='10.3.1 (10300.17.0615.2100)' source-platform='win' version='10.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Module-4-Project-2' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset)' inline='true' name='federated.041mqz70yfjq5f1gxpljr1vfmm9s' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset' name='excel-direct.0jwmix50291wvu1gmw6bg18iykza'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/206404804/Dropbox (Personal)/Service Delivery/2016/Architecture/GitHub/servicedelivery-devops/Data Science/Tableau Certification/UC Davis Prep Course 4/_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0jwmix50291wvu1gmw6bg18iykza' name='Superstore dataset' table='[&apos;Superstore dataset$&apos;]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='string' name='Category' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='Customer Name' ordinal='3' />
            <column datatype='string' name='Manufacturer' ordinal='4' />
            <column datatype='date' name='Order Date' ordinal='5' />
            <column datatype='string' name='Order ID' ordinal='6' />
            <column datatype='integer' name='Postal Code' ordinal='7' />
            <column datatype='string' name='Product Name' ordinal='8' />
            <column datatype='string' name='Region' ordinal='9' />
            <column datatype='string' name='Segment' ordinal='10' />
            <column datatype='date' name='Ship Date' ordinal='11' />
            <column datatype='string' name='Ship Mode' ordinal='12' />
            <column datatype='string' name='State' ordinal='13' />
            <column datatype='string' name='Sub-Category' ordinal='14' />
            <column datatype='real' name='Discount' ordinal='15' />
            <column datatype='integer' name='Number of Records' ordinal='16' />
            <column datatype='integer' name='Profit' ordinal='17' />
            <column datatype='real' name='Profit Ratio' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='integer' name='Sales' ordinal='20' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Manufacturer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Manufacturer]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Manufacturer</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>11</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit Ratio]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Profit Ratio</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Superstore dataset]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:usr:Calculation_788411443695124482:qk]&quot;' value='Category Rank' />
        </aliases>
      </column>
      <column caption='Sales KPI' datatype='string' name='[Calculation_788411443689152512]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if sum([Sales]) &gt; 125000 then &quot;Above benchmark&quot; else &quot;Below Benchmark&quot; end' />
      </column>
      <column caption='profitability kpi' datatype='string' name='[Calculation_788411443691134977]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_788411443695124482] &gt; .33 then &quot;Good&quot; ELSEIF [Calculation_788411443695124482] &gt;.10 then &quot;OK&quot; ELSE &quot;Bad&quot; END' />
      </column>
      <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_788411443695124482]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit]) / SUM([Sales])' />
      </column>
      <column caption='Discount Ratio' datatype='real' default-format='p0.0%' name='[Calculation_788411443698520067]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Discount]) / SUM([Sales])' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' default-format='N' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='dead' datatype='real' default-format='p0.0%' name='[Profit Ratio]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_788411443691134977]' derivation='None' name='[none:Calculation_788411443691134977:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[rank:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_788411443695124482]' derivation='User' name='[rank:usr:Calculation_788411443695124482:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Profit Ratio]' derivation='Sum' name='[sum:Profit Ratio:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_788411443689152512]' derivation='User' name='[usr:Calculation_788411443689152512:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_788411443691134977]' derivation='User' name='[usr:Calculation_788411443691134977:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_788411443695124482]' derivation='User' name='[usr:Calculation_788411443695124482:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Category)' hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Sub-Category)' hidden='true' name='[Action (Sub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sub-Category]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date))' hidden='true' name='[Action (YEAR(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tyr:Order Date:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/206404804/Dropbox (Personal)/Service Delivery/2016/Architecture/GitHub/servicedelivery-devops/Data Science/Tableau Certification/UC Davis Prep Course 4/Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset).tde' schema='Extract' tablename='Extract' update-time='07/31/2017 06:58:06 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='9994' timestamp-start='2017-07-31 06:58:06.707' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>0</ordinal>
              <family>Superstore dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>1</ordinal>
              <family>Superstore dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>531</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aberdeen&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yuma&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>2</ordinal>
              <family>Superstore dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;United States&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>3</ordinal>
              <family>Superstore dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>793</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aaron Bergman&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zuschuss Donatelli&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>4</ordinal>
              <family>Superstore dataset</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.80000000000000004</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Manufacturer</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Manufacturer]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Manufacturer</remote-alias>
              <ordinal>5</ordinal>
              <family>Superstore dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>174</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;3D Systems&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zebra&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>6</ordinal>
              <family>Superstore dataset</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>7</ordinal>
              <family>Superstore dataset</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1238</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2011-01-04#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-12-31#</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='Median' datatype='date'>#2013-06-27#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>8</ordinal>
              <family>Superstore dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5009</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;CA-2011-100006&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;US-2014-169551&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>9</ordinal>
              <family>Superstore dataset</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>631</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>551572652.0</statistic>
                <statistic aggregation='Avg' datatype='real'>55190.379427656597</statistic>
                <statistic aggregation='Min' datatype='integer'>1040</statistic>
                <statistic aggregation='Max' datatype='integer'>99301</statistic>
                <statistic aggregation='Stdev' datatype='real'>32063.693350364487</statistic>
                <statistic aggregation='StdevP' datatype='real'>32062.089163078908</statistic>
                <statistic aggregation='Var' datatype='real'>1028080431.2662077</statistic>
                <statistic aggregation='VarP' datatype='real'>1027977561.501222</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>40715111695442.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>10</ordinal>
              <family>Superstore dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1841</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\&quot;While you Were Out\&quot; Message Book, One Form per Page&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zipper Ring Binder Pockets&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit Ratio</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit Ratio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit Ratio</remote-alias>
              <ordinal>11</ordinal>
              <family>Superstore dataset</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>161</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-2.75</statistic>
                <statistic aggregation='Max' datatype='real'>0.5</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>12</ordinal>
              <family>Superstore dataset</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>755</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>286347.0</statistic>
                <statistic aggregation='Avg' datatype='real'>28.65189113468081</statistic>
                <statistic aggregation='Min' datatype='integer'>-6600</statistic>
                <statistic aggregation='Max' datatype='integer'>8400</statistic>
                <statistic aggregation='Stdev' datatype='real'>234.25571201136745</statistic>
                <statistic aggregation='StdevP' datatype='real'>234.24399190069036</statistic>
                <statistic aggregation='Var' datatype='real'>54875.738609952721</statistic>
                <statistic aggregation='VarP' datatype='real'>54870.247741570696</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>556577639.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>13</ordinal>
              <family>Superstore dataset</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>37873.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.7895737442465478</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>14</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2251096911413999</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.2249983660786095</statistic>
                <statistic aggregation='Var' datatype='real'>4.9511131376113768</statistic>
                <statistic aggregation='VarP' datatype='real'>4.9506177290524809</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>192999.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>14</ordinal>
              <family>Superstore dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>15</ordinal>
              <family>Superstore dataset</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1148</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2297354.0</statistic>
                <statistic aggregation='Avg' datatype='real'>229.87332399439663</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>22638</statistic>
                <statistic aggregation='Stdev' datatype='real'>623.24894563615851</statistic>
                <statistic aggregation='StdevP' datatype='real'>623.2177637001472</statistic>
                <statistic aggregation='Var' datatype='real'>388439.24823658331</statistic>
                <statistic aggregation='VarP' datatype='real'>388400.38099141256</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4409773808.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>16</ordinal>
              <family>Superstore dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>17</ordinal>
              <family>Superstore dataset</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1334</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2011-01-08#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-01-06#</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>18</ordinal>
              <family>Superstore dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;First Class&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Standard Class&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>19</ordinal>
              <family>Superstore dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>20</ordinal>
              <family>Superstore dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tables&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9994</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.562271' group-percentage='0.0732601' measure-ordering='alphabetic' measure-percentage='0.364469' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_788411443691134977:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_788411443691134977:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Good&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_788411443689152512:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Above benchmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Below Benchmark&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Sub-Category:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:usr:Calculation_788411443695124482:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Profit Ratio:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Yearly Sales and Profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Profitability by Sub-Category' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Highlight Sub-Category' name='[Action3]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Profitability Rank and Sales KPI' />
      <command command='tsc:brush'>
        <param name='exclude' value='Profitability Rank and Sales KPI' />
        <param name='field-captions' value='AGG(Sales KPI),Sub-Category' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Profitability Rank and Sales KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset)' name='federated.041mqz70yfjq5f1gxpljr1vfmm9s' />
          </datasources>
          <datasource-dependencies datasource='federated.041mqz70yfjq5f1gxpljr1vfmm9s'>
            <column caption='Sales KPI' datatype='string' name='[Calculation_788411443689152512]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if sum([Sales]) &gt; 125000 then &quot;Above benchmark&quot; else &quot;Below Benchmark&quot; end' />
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_788411443695124482]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit]) / SUM([Sales])' />
            </column>
            <column caption='Discount Ratio' datatype='real' default-format='p0.0%' name='[Calculation_788411443698520067]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Discount]) / SUM([Sales])' />
            </column>
            <column datatype='real' default-format='N' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_788411443695124482]' derivation='User' name='[rank:usr:Calculation_788411443695124482:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_788411443689152512]' derivation='User' name='[usr:Calculation_788411443689152512:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_788411443695124482]' derivation='User' name='[usr:Calculation_788411443695124482:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_788411443698520067]' derivation='User' name='[usr:Calculation_788411443698520067:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443698520067:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Rank of Profititability:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:usr:Calculation_788411443695124482:qk:4]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sub-Category:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#a7acad'>Profit Ratio: &#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'>Discount Ratio: &#9;&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443698520067:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales KPI:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:usr:Calculation_788411443695124482:qk:4]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443698520067:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Rank of Profititability:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:usr:Calculation_788411443695124482:qk:4]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sub-Category:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#a7acad'>Profit Ratio: &#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'>Discount Ratio: &#9;&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443698520067:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales KPI:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443698520067:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443698520067:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='14'>Rank of Profititability:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:usr:Calculation_788411443695124482:qk:4]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sub-Category:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#a7acad'>Profit Ratio: &#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='12'>Discount Ratio: &#9;&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443698520067:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales KPI:&#9;&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:usr:Calculation_788411443695124482:qk:4] + [federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443698520067:qk])</rows>
        <cols>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Profitability by Sub-Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset)' name='federated.041mqz70yfjq5f1gxpljr1vfmm9s' />
          </datasources>
          <datasource-dependencies datasource='federated.041mqz70yfjq5f1gxpljr1vfmm9s'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_788411443695124482]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit]) / SUM([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_788411443695124482]' derivation='User' name='[usr:Calculation_788411443695124482:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[Action (Sub-Category)]'>
            <groupfilter function='level-members' level='[Sub-Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[Action (YEAR(Order Date))]'>
            <groupfilter function='level-members' level='[tyr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[Action (YEAR(Order Date))]</column>
            <column>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[Action (Sub-Category)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Category:nk]' />
              <shape column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='167' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]</rows>
        <cols>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sales Rank KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset)' name='federated.041mqz70yfjq5f1gxpljr1vfmm9s' />
          </datasources>
          <datasource-dependencies datasource='federated.041mqz70yfjq5f1gxpljr1vfmm9s'>
            <column caption='Sales KPI' datatype='string' name='[Calculation_788411443689152512]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if sum([Sales]) &gt; 125000 then &quot;Above benchmark&quot; else &quot;Below Benchmark&quot; end' />
            </column>
            <column caption='Discount Ratio' datatype='real' default-format='p0.0%' name='[Calculation_788411443698520067]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Discount]) / SUM([Sales])' />
            </column>
            <column datatype='real' default-format='N' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_788411443689152512]' derivation='User' name='[usr:Calculation_788411443689152512:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_788411443698520067]' derivation='User' name='[usr:Calculation_788411443698520067:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='15'>Rank of Sales: &lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:sum:Sales:qk:2]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sub-Category:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales KPI:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:sum:Sales:qk:2]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='15'>Rank of Sales: &lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:sum:Sales:qk:2]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sub-Category:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales KPI:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443698520067:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='15'>Rank of Sales: &lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:sum:Sales:qk:2]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sub-Category:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sales KPI:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.041mqz70yfjq5f1gxpljr1vfmm9s].[rank:sum:Sales:qk:2] + [federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443698520067:qk])</rows>
        <cols>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset)' name='federated.041mqz70yfjq5f1gxpljr1vfmm9s' />
          </datasources>
          <datasource-dependencies datasource='federated.041mqz70yfjq5f1gxpljr1vfmm9s'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='N' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Customer Name:nk]</rows>
        <cols>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset)' name='federated.041mqz70yfjq5f1gxpljr1vfmm9s' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.041mqz70yfjq5f1gxpljr1vfmm9s'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_788411443695124482]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit]) / SUM([Sales])' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_788411443695124482]' derivation='User' name='[usr:Calculation_788411443695124482:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]' max='0.5' min='-0.10000000000000001' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:City:nk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Customer Name:nk]' />
              <size column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Profit:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='14'>Customer Name:&#9;</run>
                <run bold='true' fontsize='14'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Customer Name:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>City:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:City:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Profit:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Profit:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Profit Ratio:&#9;</run>
                <run bold='true'>&lt;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[Latitude (generated)]</rows>
        <cols>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset)' name='federated.041mqz70yfjq5f1gxpljr1vfmm9s' />
          </datasources>
          <datasource-dependencies datasource='federated.041mqz70yfjq5f1gxpljr1vfmm9s'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' default-format='N' name='[Discount]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Category:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset)' name='federated.041mqz70yfjq5f1gxpljr1vfmm9s' />
          </datasources>
          <datasource-dependencies datasource='federated.041mqz70yfjq5f1gxpljr1vfmm9s'>
            <column datatype='real' default-format='N' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Segment:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset)' name='federated.041mqz70yfjq5f1gxpljr1vfmm9s' />
          </datasources>
          <datasource-dependencies datasource='federated.041mqz70yfjq5f1gxpljr1vfmm9s'>
            <column caption='Sales KPI' datatype='string' name='[Calculation_788411443689152512]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if sum([Sales]) &gt; 125000 then &quot;Above benchmark&quot; else &quot;Below Benchmark&quot; end' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_788411443689152512]' derivation='User' name='[usr:Calculation_788411443689152512:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]' value='132' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Category:nk] / [federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk])</rows>
        <cols>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset)' name='federated.041mqz70yfjq5f1gxpljr1vfmm9s' />
          </datasources>
          <datasource-dependencies datasource='federated.041mqz70yfjq5f1gxpljr1vfmm9s'>
            <column caption='profitability kpi' datatype='string' name='[Calculation_788411443691134977]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_788411443695124482] &gt; .33 then &quot;Good&quot; ELSEIF [Calculation_788411443695124482] &gt;.10 then &quot;OK&quot; ELSE &quot;Bad&quot; END' />
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_788411443695124482]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit]) / SUM([Sales])' />
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_788411443691134977]' derivation='User' name='[usr:Calculation_788411443691134977:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_788411443695124482]' derivation='User' name='[usr:Calculation_788411443695124482:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443691134977:nk]' />
              <lod column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Product Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.66966849565505981' />
                <format attr='mark-transparency' value='165' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]</rows>
        <cols>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Profit:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset)' name='federated.041mqz70yfjq5f1gxpljr1vfmm9s' />
          </datasources>
          <datasource-dependencies datasource='federated.041mqz70yfjq5f1gxpljr1vfmm9s'>
            <column caption='profitability kpi' datatype='string' name='[Calculation_788411443691134977]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_788411443695124482] &gt; .33 then &quot;Good&quot; ELSEIF [Calculation_788411443695124482] &gt;.10 then &quot;OK&quot; ELSE &quot;Bad&quot; END' />
            </column>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_788411443695124482]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit]) / SUM([Sales])' />
            </column>
            <column caption='Discount Ratio' datatype='real' default-format='p0.0%' name='[Calculation_788411443698520067]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Discount]) / SUM([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' default-format='N' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_788411443691134977]' derivation='User' name='[usr:Calculation_788411443691134977:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_788411443695124482]' derivation='User' name='[usr:Calculation_788411443695124482:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_788411443698520067]' derivation='User' name='[usr:Calculation_788411443698520067:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443698520067:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]' value='98' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[Multiple Values]' />
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443691134977:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Category:nk] / [federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk])</rows>
        <cols>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset)' name='federated.041mqz70yfjq5f1gxpljr1vfmm9s' />
          </datasources>
          <datasource-dependencies datasource='federated.041mqz70yfjq5f1gxpljr1vfmm9s'>
            <column caption='Discount Ratio' datatype='real' default-format='p0.0%' name='[Calculation_788411443698520067]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Discount]) / SUM([Sales])' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' default-format='N' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_788411443698520067]' derivation='User' name='[usr:Calculation_788411443698520067:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443698520067:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Customer Name:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Yearly Sales and Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore dataset (_198060205f23f90d686a40d6a99a8fc7_Full-Sales-Superstore-Dataset)' name='federated.041mqz70yfjq5f1gxpljr1vfmm9s' />
          </datasources>
          <datasource-dependencies datasource='federated.041mqz70yfjq5f1gxpljr1vfmm9s'>
            <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_788411443695124482]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit]) / SUM([Sales])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_788411443695124482]' derivation='User' name='[usr:Calculation_788411443695124482:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[Action (Category)]'>
            <groupfilter function='level-members' level='[Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[Action (Sub-Category)]'>
            <groupfilter function='level-members' level='[Sub-Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[yr:Order Date:ok]</column>
            <column>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[Action (Category)]</column>
            <column>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[Action (Sub-Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Profit:qk] + ([federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Sales:qk] + [federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]))</rows>
        <cols>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[tyr:Order Date:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='952' h='100000' id='13' is-fixed='true' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='9' param='horz' type='layout-flow' w='99600' x='0' y='0'>
                <zone h='100000' id='5' param='horz' type='layout-flow' w='99600' x='0' y='0'>
                  <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
                    <zone h='44875' id='1' name='Yearly Sales and Profit' w='80629' x='18971' y='0' />
                    <zone h='54000' id='6' name='Yearly Sales and Profit' pane-specification-id='1' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]' type='color' w='18971' x='0' y='0' />
                    <zone h='55125' id='7' name='Profitability by Sub-Category' w='40315' x='18971' y='44875' />
                    <zone h='12875' id='10' name='Profitability by Sub-Category' pane-specification-id='2' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Category:nk]' type='color' w='18971' x='0' y='54000' />
                    <zone h='55125' id='14' name='Profitability Rank and Sales KPI' w='40314' x='59286' y='44875' />
                    <zone h='33125' id='17' name='Profitability Rank and Sales KPI' pane-specification-id='1' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]' type='color' w='18971' x='0' y='66875' />
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Profitability Rank and Sales KPI'>
          <highlight>
            <color-one-way>
              <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Profitability by Sub-Category'>
          <zoom type='entire-view' />
          <highlight field='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Yearly Sales and Profit'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Yearly Sales and Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]</field>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Profitability by Sub-Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Category:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Category:nk]</field>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Sub-Category:nk]</field>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443691134977:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sales Rank KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Profitability Rank and Sales KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[sum:Profit:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443695124482:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443689152512:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443691134977:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[:Measure Names]</field>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Calculation_788411443691134977:nk]</field>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[none:Product Name:nk]</field>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443691134977:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443691134977:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.041mqz70yfjq5f1gxpljr1vfmm9s].[usr:Calculation_788411443691134977:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profitability Rank and Sales KPI' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAeR0lEQVR4nO2deWwc2Z3fP1XV98Fmd7O7eZ+ibmk00oxla2bsOTZeBzZsbxbeDZBsgvyT
      LBIgiRFjEcQJ7EWQ5J/kn2yMAImzwWKRzdrZRZB1HNu7hs/xyDMaa6TRwRHF+z6a3ez7qqqX
      PyRxxBG7u5oimxT7fQBBJPv96v1edX3r3b+nCCEEEkmLoh60AxLJQSIFIGlppAAkLY0UgARh
      VJifnSVTKG/9rZjPUNY/7B6aeom5mRkKFeMgXNw3bAftgOTguXf1xyw6Y4xoTmzhdlQEY9d/
      ghl5njNDXbgcKj//y+/i7z+FN5snVcyi6RmuTmX49OXTpFIZwh1h0ok4OLx47YLNvE7Q5yRf
      0lEUBa/bgSE0nI7D9cgpchRIUkgu8cOfXqVj6CSF9SQBe5GsnqWotJPNFwmHQsTnF/jN3/4b
      FOOzfPOP/wTFHsER62fUsc6bt6Z44cXL5MpQymQJuAVutUzecFJq68NfWMAXaKPr5GWGo76D
      Lu42ZBNIQjKRRHNoJBIZEssTTC5uYLfZ2YivE+oc5NUrL3Ks1893vvs97tz5gNDwKSJtPrRi
      BoevndPnLzHQ3UE+naBQNnDZFBLZCj6Pl+cunOPKpVO8P5VmIHK4Hn6QNYBkj6gUU/zip1fx
      dB3jY+ePbfts+va7FP0DnBqIHJB31dkSQKVSIZPJHLQ/EklT2RLAflYEiUSCUCi0b9eXSHbL
      VpdcUZR9y0RRlH29vkSyW2QnWNLSSAFIWhopAElLIwUgaWmkACQtjRSApKWRApC0NFIAkpZG
      CkDS0uyZANKJVT6YmEUIkxvvvMmd8VnkKjvJYWfPdie4fUHsyQWEKJAv2TjVFQEhMEwT0zQx
      jKO1k0hyNNgzAdgdDhQFFFNjcGSAiXtjPH/xIurDdUByLZDkMLJnAlidn2R5eQWH20tybZn2
      SDfaYw+/qsruhuTw0ZQNMXI5tOSwIl/LkpZGCkDS0kgBSFqamgKIz9zmW9/+c968/kGz/JFI
      mkpNAawvLNM5NEh8eaVJ7kgkzaWqAAy9TM+Zi4QcNj7xiUvN9EkiaQoVo1J9HsAoF5m+N85y
      OkOqYiMWOtNM3ySSfccw9eo1gKIK7v7qBsJpJxFPNNMviaRpVK0BNLub8y9eouR2E4v1NtMn
      iaRpVBWAqjlQykl+9u5tjh3bpOfTrzTTL4mkId6a/hnpYrpuupGOUUYjJ7Z+r7kWKNwzwNmi
      iW73PL2HEsk+8p07/5vZxHTddF8896VtAqjaB4jPj/Gzd2/jC3SgKXJlv+RoUlUAU7emufDy
      x3nvrXc4e/ZkM32SSJpGVQEMnBllcXyCU8+dYW0t3kyfJJKmUbUPEBsYJdDRjd3joZgvNNMn
      SQvzP3/1R/xw/Ad1052InuL33vhXT51fVQGUC5t867/8EYEzJ1BMH1/4zMtPnZlEUo+yUaFQ
      yddNV9KLe5Jf1SaQME26B/pRTegfqD8PYBoVUuksQgg2N9bIPnbioERyWKlaA6QTWfpGR7EF
      2mjzBupeKJ3YYHZtk3MjEe7PbaApq1x47hyq3AosOcRUFUAxu873vvNXhEdHGBg4RTRcWwTt
      kU4SmTwiv0mw/zhK4j6GKTCFgWEYVCqVPXdecngp371L5k+/XT+hohD+/a9t/WqapqXrm0Js
      f6YsjtSbprllV9H16gLoO3WJv9sW4Kfv3CIS7ah74dX5Se7dG8f+3HnWJt/CEYgwrCooig1N
      07Db7dY8lBwJKoUi5en6E1MoyrZnw2rwBPUjdlhsaaiqumVnUEMAAAv37vP8p97g9i/f4fRg
      Z80Lx/pG+Ot9IwD0dfdY80YiOWBqyq1zcIixa1c5feFis/yRSJpKzRogvTHP4nqGyEaC4W4Z
      1qRVubc2RsbCQrOTsdP4nP4meLR3VB8FWpvhxnSC5y9d5twxuRy6lflfN/6Euyu36qb72mf+
      HSeip5rg0d5RtQk0/t4Y51++wtzdu5TKcgRHcjSpKoCu4T5m7ozhdMP49FIzfZJImkbVJlCk
      f5RP9Y9idzpl8CDJkaWqACavv8Wb1+8zeOEMXdE+zo72N9MvyT6Q+cu/IvvDH9ZNZ+vqIvLl
      f9oEjw6eqgI4cfkVNE8bK9kCfp+3mT5J9gkjlaIyN28hZeusX6naulFVG2Y2iWFzcuO9+iMA
      EsmzSM3mfbg7RmJxkVBnrFn+SCRNpeZEWMfgWX5z6JzlBUqS5lCemyP1Z39uKW34H/1DVKdz
      nz16dqkpgMWJW9yeWMAZ6uO1y+ea5ZOkDmYqTeGda9YS/648m60WVZtAixO3uD42ydTkLE65
      klNyRKlaA/QcOwe6ji60VhoUkLQYNZtAmfgawZ5BOjuCzfKnpRBCMJucsZQ26ovhccgAZXtN
      TQH0nDpP4oNJ8oX2ZvnTUhimzr/4v1+2lPYrr3+Vi70v7rNHrUfNYdC5uzf51e0p5mZnm+WP
      RNJUatYAkf5hzlYUynbrM8FCCMbefxfhjnL6+IDsPkgONVUFsD57h5+8M0Z3bw96xfo8gBAl
      sLVzYqQPhEDwQBRNOI74QBGVCliYL1E0DWwPbntDd0SwdQ9FA5biMbuGsnvcxqL9499zIzlu
      989iXh+1ayDDx32sKoCpOzM8d+VFfvRn3+ULf/t3LF9cUVQUPc+16zd58dIFMA1M08QwjvZ4
      9Prv/2sqk5N10/k+91na/uZvAzR0Tx6/h6Zh/YVkGDrikZ3FCU2B2Oab1Wdrm4+m9bJty8u0
      mJsQu3qmHvfRqBUVYvj8ST6YmuPsxXNsxBN0hy1udSuXyFXKeH0hNEVBsT2ICmGz1WxtPfMo
      Ftt6iqJ8eC8aiLqtauqWna5plu1sNhvqQzurERcUlG3fl2KxcI9/z5ramI9beVn1UdnuYyNR
      IR7Z2YStxn6A3hEivSPWrvq4Y04/L7wgRyskzwZyr4ukpTna7ZJdcH3+He6u3K6brsMX5TOn
      PtcEjyT7iRTARxhbvcv/G/uLuulGIyekAI4AsgkkaWmkACQtzZFtAunr6xRu3LCU1vfGG5aH
      3yRHiyMrgPLsHMn/9t8tpfW9/vo+eyM5rMjXnqSlkQKQtDRSAJKW5tD3Acx8nqV/Ym3TSMc/
      +zKuk/JQb4l1Dr0AEAIzk7GWVj/aK04le49sAklaGikASUuz500gYZb41dvvYm/v5PzJkW3r
      5OP/6Rvoq2t1r+F7/TV8r726165JJE+w5wIwNxcJHPsYSmICQ4DtMQFUZueozNePTmw8d36v
      3ZJIdmTPm0CK00MxtUGxVLG8S0oiOSj2XgCeGO3qJtH+Y2hSAJJDzlYTSNd1crncnly0LdwF
      VEilUgDk83k0TaPY1Yluq79XNOd2w0Nbs1ikNDRoKd+MaVB6aFcCy3apdHprMZwXH4O++ltB
      o47OrfIBFGMxKhY2aWteL+pDO8M0LOUFIEps5Vc2Detly2ZRKw8OOcy73ZbsjGh0W9ki9qgl
      P/WCvmVXUhRrPirKtrx8it9SXhF7bJtdp6MbxVf/fe4R3g/vo15GEQ9jRAghGgiDLlhZmMMd
      7CTgdWIaOgtzcwQ7e0ivrxDpHUAv5vF4HoTySyaTBIMyvKLk8LElGUVR0DTN0r/S5hopXWNu
      ZgZV01idnUDzhbCZKVLpLJP3psiWrUchkEgOil2NAhVLBtFolMTiHAJIZfMUNu+TC/egYaBp
      Re7ffg8uXCbmt6MoiuXQGhJJM9mVAALBNq7deA9PsItUIkFXdyf3Z5aw251Ee2IYmo21tSQK
      CqqqoijKka8N4v/xDyjPztVN53vtVdo+99kmeCSxwq4EoLkDfPwTVx77S4jLsb5taV75VPRp
      /Hrm0NfW0BcX66YzHuu4SQ6eo/1alkjqIAUgaWmkACQtjRSApKWRApC0NFIAkpZGCkDS0kgB
      SFoaKQBJSyMFIGlppAAkLY0UgKSlkQKQtDRSAJKWRgpA0tJIAUhaGikASUsjBSBpaWoKwKgU
      mbx/n3S+1Cx/JJKmUlMA42//nMVUlh//5Gqz/JFImkpNAUT6uonPz9HR1bXt75VChvdv3aVY
      eRBIS5g6UzNzlLIJ7t6fxShlyBStBtmSSA6OqlEhipk40/MJDL2M/jC03iPmZubo7w0xs7DO
      yaEoG0tzTC3GEcU2TFMwvwK9fT4eBp0D2PZzqyPvxeGhqgBc/g66Y92cfekKixOz2z5TVBte
      vxexnsEo53nvzjj5sk7gxBD5pWUS8XXml9f5+IsXUYSJYRjour7vhTlIrD7Upmke+XvxLFFV
      AKVcnP/zrW/hO36MoZHzHHvss1C7h2vv3OX4mTNs5gxee/0NZufnCYXClCs6drPIzHoeVVHQ
      NBuapmG325tQnIPDauQ7VVWP/L14lqgqAKe3gy/9zhf58dsfoIjtUY/bY31c+UggrJHhYQC6
      H/YXIj177apEsvfU7ASvTC9QEILE+nqz/JFImkrVGsDUy/h6B3ljxMnappwHkBxNqtYAY2//
      jOm1ON//7nfRVWczfZJImkbVGqCQzbOUjrOZLlLIWTyoWiJ5xqgqgBd+/fO80ExPJJIDoGoT
      SAjBzO0xMnqZsbvjzfRJImkaVWuAciHBD77zF/jGRxk5Js/tlRxNqtYATk+Yz3z2VVyaDdOQ
      M5eSo0nNeYB8agPN247P426WPxJJU6m9GnToJO02Uy7ekhxZagrAF4xw8vgIy/P1D3+TSJ5F
      agogHV/i2rvXaY92NssfiaSp1DwlspzdpGSqpNNyIqyV+a9Xv8FU/H7ddP/gpX/MYGi4CR7t
      HTUFUCoUcXrclApyLVArs5pZYTY5UzddSX/2npOaAgh0DvCx4XYKmWyz/JFImkpNASQXpxjP
      KugVG4MDvc3ySSJpGjUFEB06QW5mlkqb3N0iOZrUHAWavfU+P7s3S3JupknuSCTNpcae4CS0
      BenLVHC0BZvpk0TSNKoKwO7y09XbgysYo6tLzgMcJsx8nsrikqW0juEhFE3bZ4+eXaoKYOn+
      Dd4aWyXsFcytZfi1Kx+uCDX1MmsbKSKRDjRVIZ/dJFMwCQfcJLNlOgJuysKO02YtUoKkMcqT
      U6z9m39rKW3vH34TxePZZ4+eXaoKYHFyka7+PryKycTUEvChAOan7lMyBZmKymhvO4mNFNnk
      KgvLfoxKmVI0QLizH5ACkBxuqgrg9JUrrG6kAHjplaFtnxk4GD7exeT9FKAR8Lsomt2MttkY
      n10mHk+wuJbm0oWz8DAwVqVSYfMb/xljdbWuU+7XX8Xz6qtPU66m00hgrMpHIu01it7A8nRd
      11GeMj9hWgtzqev6U5et2VQVgD8YwR+M7PiZxyn45Vs3GDh+mkRigzvv3cLVHqKz+zmioRKY
      BebX86Ao2B4LjKUvLlKZn6/rlDt18ZkLHtXMwFiGVnP0ehs2mw31KfNTVGtR9G022zP3vVm/
      k4/ROXCczoHjW7+/8savbf3sGxwAoP/ZWhIiaVHkARmSlkYKQNLSSAFIWhopAElLs6tOsERS
      j8L190h885v1EyoqPd/4g/13qAqHXgDCNNGXrE37ax0dqC7XPnsksYIolzESyfoJLQ4f7xeH
      XwCFAstf+T1LaaP/8qu4zp4BwCyVMFMpS3ZaJGJ5HF9ytDj0AtgtxVu3if/7/2Apbd//+GOQ
      C8ZaEtkJlrQ0UgCSlkYKQNLSSAFIWhopAElLc2RHgSRPUnjvBoWbN+ums4WCtH3+803w6OCR
      AmghShMTZL//g7rp7P39LSMA2QSStDRSAJKWZldNIGEa5Isl3G43qqKgV0pUDAWnXaVUMXA5
      bJioaKpcXlALIQSZkrXI2x67G5v2bG033A3fu/sd3p79Rd10A6Fh/t7lv//U+e1KAItT91jd
      zNLeM8pIp587N9+nVDHwBwNsbOYZ6Q3ji/Tjd0oB1MIwdX7323/HUtqvvP5VLva+uM8eHTxr
      2VXG1z+om05Tty9dKeslTAuBCWyqDdvDPdVlvbQ7AZSFnecunWFyfBMiDjzhHka9eSY37djt
      edbXkyzG8zz/3Ck0uchM0gS+9v1/zmxium66L577Er/1/N8CwBTm7voATrXCtas3cLS5SGZ1
      cvE5boyvMzzcT2cwhM/vpFQqIKxF05BIDoxd1QDdw6eIDRhomoYQgvOXXsQUYFPBPTiIogj6
      h8Qz2Qe4OvMmNxd/VTddzN/Fb5z/rSZ4JNlPtgRQqVTIZPbnKKRCoUAikUB/9ZOI7PbDNoR4
      ck9EfmAAI5F4EGxK1xG/8YUnrrmTXdrlJLexAYDh9z1p96iJ+BG7RDK5dTG1pBJUO+pm5jG9
      JB76qCgK+ssvIc6dretjcXBwy04g+MLol54o206GXtO/ZWe4XJbLlsxmoVAAoDw48ITdTj7q
      Pv+2sl2OvcSo/2RdH+0VBxuP7n+gzaKPylZeAMfbTuEa/cixvDvkFfSEtvn4ye7XSYfTde2G
      vMc+vI/CQBFNOANV13Vstp0rm0cF2Cs7IQSGYexo96ioO9kZhoGqqlWvuZc+7oddvbIpioK6
      Q4CrWna7vf+maaLtsL/iMN7/pswD7HTjH6EoD5zZSYXV7MqlEmYN2VazUxQF0zQwdzCutSNs
      Nz4+jR1CoBs7d6Cq2T0KSVjeITShoihVy6coCoZh7BjasbaPJkYVH2vlZZrGjqM1e3//BZub
      mxQKBXZ6xT+y077+9a9/vWrOe0S1woncMm/98jb3ltbo7+56os9QzS6xNMX0Wg6P04HTYX/C
      pprd2J1bzM9MkSgKYuF2a3Zmhfdv32Lu7g2K/l5C3ifz25HCGm+9fYf7C0t0dnbh0FRLditz
      k9wbn2RqdYOB7ifD0u/49qyUuPrONXwuOxPzq3RFO56w2TE/YXB77Bazt26Q93YT9jmsla24
      wc/vLrGyskxfV8xaXsDdO+8zPzVBsqQSDQWs2Rklbt6+xezdW1Taegl6bE/Y7Uh+jT/93tvY
      KRIIR7FXuf8HthZICIFp96HanRzvDqE2MFzq8bexPjOFTeicOjFi2c7nVNDVKD6Xo37iLVQ0
      s0LX0AkczgZul80Nmp1jPSFsDQwGeL0edDVHV9DbgI8CRQiE5uD08WMN2KnYyjnae4bxOBuY
      ZNNcdNiLeHyB+mkfo83twOHux+Vx10+85aKGWinQ0TOA29HA/Xe2c7KvHaG6cNiq12QHthRC
      VApMza7Q0eFHN9SGggOsrW9QMgzSaQtRBx4jvZkkkUqxmck14imFskpHdw8RXwNfgDDQnC46
      Y104NOuFy+dzLG8kSKfS9RM/RLO76G53MjG7SCLVyECGIJ9YJZ7KkMw1cMSpMMgVVLo7uxrI
      C1KpDJnECrduXidZMKwZmSapjTWS6QypfNl6ZpUMhYrGZnyJm2OTVZMdmABUh4djQz1Mz61g
      o1KzTf9R+geHGenuYGB4tKE8OzqimOUC7cEGjnxSVLpiQZYWFimULX5pAKqbsN/O4vIaRgOF
      8/nbCbrA7m6zbCOEYPD0RYZibTu2d6ujEOrsJZ8v0hVs4K2suegIOllLWIu6sZWbouBv8+NQ
      DVJ5i2HUVY1orItsoUKs3dlAZhoOpxuX20Mpt1n98tavuA+Us8yvrjE9t2hpGvsR6eQ6hYrJ
      xkaioew8/gCdkQihgN+6kTCYv3eTjY04c5sNvIGMHFev3yWzuU5Rt1g2o0y+bNDd1Y3fb70J
      NH7rGjfv3OPmxCLdkfb6BlsISvYgr78wQirbQA2g50kuTbO2XD/U/ePEOmOYioPnL3+SwbDF
      +E3CJG/YGervxqE0oG5nO31hG+62MB+7dLFqsoMVgLuDT104zsDw6BOdxFqkk0lMNOam7pFI
      5y3bTc4sMTLUzcTUjHUfFZX2cIRUpkCkrYE3kOaiK+ylUBY126DbUO1oQifSM8BgT6x++occ
      P3uJWJsTjw2W4428lRUo5/lgeoWAr4Gy2Zw4HA40ZwMvEmBhaZ2hkRGC/gaObBKCdDqNYZrs
      OAxUjcwCP7qxiFnOUamxIuFABSBySyQJk0ssUdKtr5sIx7rYXF8kGO0l4LMeCS7oVfjhj35B
      pVQiV7J2yko6k8UX6qS/twuX0sDaDmHQHooSi8Ws32RFwWlXuH3zJlPzK5azUlSNnsFjvPzS
      S3SGrTedQGCYJm5/O06rTuolZqZnKNhCNDLRL0yTSMjP2J3brGxY79+g2jl5fAQhVJyOBmI3
      uQJcOTeCxx+q2Qc7MAGY5Rz35tM49QSaK4C9gY7i+to6hurAqBTRLJ5eApDI6rz80gvYnU68
      Fkd02vx+8vkClVKxseBZRolMroLTYW+og6/ZnAQDXnTd+jFIj6g1BLkzgs1UBqfTiWr1abY5
      GeyLoRuCbNZ6bVMuFdGcHrweDw57A4MJZonppQ3CtjQTa4UG7Ezml1fxeT01T6o7wE6wl5PD
      Xdy7P8nCwgKGxT6AMA08/nYuXjjPc2fP1jd4jKH+bhaX4vT39Vg3MnXiqRxhZ4n3xpcsnwWG
      3Ydq5sikN9Eb6AQnE+s4vEES8fpnqT09KieODZHJZNAbqIFxBOjt8DI0ZH0I2un2UC7kEI2u
      DladdId9rOSdDEYa6KjbfYz0hh9MDNbI8mD7AKZOmz+I2++z3L6bmxgjZypMTs7i81pv/sSX
      51lNZlFVFdNoZDTHzlBvJ2mlndM9DTQvSilmV1MkEgkqVjvBQEdnHy6Rp6t3wHpeu8Zkeuxd
      pmYWWEo30AkuJZjbKOPzWO835LMp5hdX8LcFcDUy54BJsVTG7XZi6A18b8U4y1kbm+uLlGp0
      Ag5UAIo7wq9/+hX6oyHLNkJRqRQKFPNpFlfjlu06uvroCvvQnF60RnpTQmduaZ2AmiVesllv
      Yrg6+GsvP8/A0Ageyw1sWFmcYWJ6iem5Wes+7hqVnuMX6I+0E/JanxwUmhe3kmdtw3oTyDRM
      +gYGySTj5IoWR9OESTa9yWoyRygUtj6YAOAK024v4PIFa9od2EywWSkwu/Cgo7e8Frf8xhsc
      PQ3AiVHr1e8jpicmSAkXm9kgHSErs5gCU6hEgj428iX6+63XOIX1SaaTLnz6AoFgGJ/TWv8h
      1t2P4mpHUfd/+2M6k8HUDew+P64GDjXP5gq0twew26z3iXyBIPfG71Iq6KQqNqLtvvpGQjA/
      M0mpVCGdzeJwe7FbyVIIRD6Bs2MARzmOblRfmn9gAlDtboaGHpw//Oj//aYjGkPkDIaHB60Z
      GGXujs9z9tQpimuTzKdKtEWttUOLhoqbEm2hLjwO62+u1cU5Juc3MFxuerqilu0aRpikk+vk
      ig12to0C4+PTuJwa2YpCX9fOR+k+YWboDPT2UzA1PF6Lw6dGkbTp5eKwYN3WjtviKJAAlhem
      GV93MBBto/swjgIdBF39w2jFFEtrFpdQqDZEIcnYvXvcnlwl5LPeTAi2uVmemWNsapJcyXrb
      tbNngOHjx3m+gTVOu0JR6e0fJuBxYAgVt9V2eXYdI9hPtlSpOcP6UQy9ApodYeioVkfTFBt+
      l8JGHoqJRctD16KcIuccZKhdpVQs1lxl0FKBsZLxNWLHzhENWnwDKRrnLr74YK26dqLmcNoT
      eGP4nXcQNtsTKxFrsZlY5dr7swx1BgmFrPeNdofJ4nqa8/1e7iykuDBgYRbZGyPmWEZEozg9
      1gcFHE4305PXCHX2W1+uYXNy+tRpy3k8Qhhllhan8fhDuJUcFUNUHWZvKQHMzszgj3SjqQrh
      gIU26EN22txRl9wq05smp4O2hoZBXS4vfrt4sJp031EJ+2zcmsvg9GkYZqD+Nlabk4GBwV3l
      FvT7yRcK+BoZzdkFqjvCSx8PoWoapmGg1XgBtZQA2rweCqUSlUbGvHeLJ8IbL5wiUzFwNjB6
      Ua7ovPjxl0iuL++jc48QrCbShL02tFBs3/dwm4qNkdHjeCz1ZHePoihbu8TUKrvFHtEyfYCJ
      yUkisSidnd1ks/uz93mL1Cw35gtsZDOcHB1uaJbbrgpmp6fYbGRx2lNgV6Gs68zNzjW0anU3
      tLV5mLz3AauJfb7/DdAyAkgmN1hfX2UtvkEina1v8DRoTvKJJbKZDNNzC+iG9Qcrmy/Q2TuA
      RgMrT3eJEILB4RF0xcWFU8NNieJRyadYXN3Y93ys0jJNoLOnT1MqPxhFcLgaWI24G3ydXHn+
      ye2MVuiIRJmYncXjD++xUx/B1Hn7rTfxd/SQKukEPI3skts9qmZDbWQt0D5zeDzZZ9weH+59
      fu6fFqNSZjOdIZdO4LQ3ttS4YVQbl6+8zPraGqVcilS+vK8iWFldxR8I4osM4HMdnsfu8Hgi
      IR1fYmphA2EYxNob2LW2SxTVRrSzm2hn977nNT8/T7TNgQgM4LL7sB2SY2mbEhdI0hi51AYb
      OYP+7n2cCW4yqWScXOFBv8bbFiTga8Ywb32kACQtzf8HcTet5hEl2rcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profitability by Sub-Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Rank KPI' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='84' name='Sheet 3' width='192'>
      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
      sAU2yMf7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='84' name='Sheet 4' width='184'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Yearly Sales and Profit' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAaj0lEQVR4nO3d2XMc16Hf8e/pZfYNM8BgBwkQICmK1GZZvpJsx1ZcN07dJOWH5CmveU3+
      iPwbSaUq78lNqnLrXsWxr69LvlqubUkUJS4gSJDYt8Hsa3efk4ceDCCKoCgBGIDo8ymyZjDd
      0+fMzPn16b2FUkqhaQFlnHYFNO00WXtPPM+j0WicZl00re/E3iKQlBLXdU+8wFKpRCaTOfFy
      NO159HoAwzAIhUInX6Bl9aUcTXseeh1ACzQdAC3QdAC0QNMB0AJNB0ALNB0ALdB0ALRA0wHQ
      Ak0HQAs0HQAt0HQAtEDTAdACTQdACzQdAC3QdAC0QDtyADrNKg8Xl/FQrD5epN52aVR2WdnY
      wXE7OI5HrVY7jrpq2rGzvn2UZ1Aed+8uMH5hmurqQyoiys79BQyvQci2WXEbWG2PlhVlLpE4
      pipr2vE5WgCkQ61aZeHul0QiWWZem2FtvoIIJRhKxdiqlZm/u8Zb7/0cKSVSSjzPw3GcY6q+
      ph2NONplURQP737JdrHK1PQ0Cw8WyY1MYdY32GlILs1OYaswW7u7XL1yCQHs7u6SzWaP7QNo
      2lEcMQDfnQ6AdpborUBaoB1tHUDTXjC9BR4lUe2KDoB2viklUfUd5O5DZOkxcvcRcmceWXyE
      apV1ALTzQSkFrTKy+AhZWsLbuY/cuo0sLICSiMQwxuAcRmqc0Gv/HpGZxBi4cDorwRlWcVdX
      MDMxZGUHY+RdhFrG3agSuv4eqraEu/IFRMaguQD2CGY2h7t0B3PqXczsaD+rrJ0hynNQzSKq
      soYsLuIVHviNfmcepIuI5TCSoxiDlzGHr2EMTCMSw2DaCNP+xvT63wPIFrLRxojHwTBAKZBN
      ZFtixP2dZSI+iZmroMwBZOM+CBO8Fphh/z3auafcNqq2haxt+osvu4t+Qy8uAiDCaYzUKMbQ
      Feyrf4WR+08Y8TyEYmDYCCGeq5y+B0C1d1DVdWRpBSN/EWNgFFl8AG4FWdzFGLkK9QW8msQc
      tDFyLyMrSyg1hDk0idxdwswM97va2glQSoHbRNULyOo6svAAWVjwH+vboDxEKI6RuYAxOIt9
      7d9gDM4hogOIcBphHr35ntp+ANWpg5DIagEjPYkwBarTRG7fwxicRlZ3EOEsiA5ICxFPoMrr
      iNQkwvpmV6adXUop6NRRrTKysobcuefPzbfnUa0SynMQ4SRGdhojN4uRu4SRmfIbeiSDMMwT
      q9sLsyNMKQmI5+7atP5T0gOn4Tf08gpyu9vQdx+imrsop4WI5TCHrmAMXMTIXUKkJzASebDj
      p/LbvhBbgZTn0Prtf0YYFubkW2D4PYCwo/4Ipg2G/1HE3nMhEFZ3uGH46w+AsCKw90X3vnDR
      /b/32lOGP+09B54HJZhKKVAeuB1UYwdZeIBXXERuzyMrK6j6DjhNRHocMzeLMTCNNfsLRGoU
      IzXmf/9nyAsRANw23tpn4Lb8ZUOvezCd2wRAuR2Qnv+adMBzUAeGIyXKa3ff0/JXvBFgdS/T
      LkxEN0BY4e5rAsxQ96kJe8ub5t5wY3+rghnqBUfYkd4096YlDMsPrQD2QsnXA/y18oUBhoXo
      lv+1gO8F+MA0xYFpYvvDhWH3ZhRYIf8zGGbvM33N18Lbfa48vPUvMNIT4Dl4BxZbZHkFVV4B
      6C22mPmr2C//CiM5ikiNH8vyeT+8OItAbgsU+w3siJSS4HZDIT3wOvvlgL+n8FuG771fee1u
      qBQ4zadM3+2GUoGz935/LupPygGve3MSr+W/92CZe+8BP8Ao8Fz/fYDqltkbrgDpoGR3mm7b
      r6/y9mcehtUL1V7o/KB3QyMEqrLuP00MYWRnMLKX/OXzgQsY2RlEbPCF7/lejJjCsXedQhhg
      R7/5+rGWcjyePo86ZL516Pzsidc9xw8m/iZHlOwGtRu6TgPnq/+FNf1TzAvvdANyFr+do3lh
      AhBkT294hzTG522jxv5PL8LJp45iDl97zom9uJ4ZgHajiRWN0Gm2iMSiZ3LuqB2Nt/xrpJtH
      GEXk1j3MqZ/hbd3GyFzGmryO3PwId7uAOflD5NpHiMQMwqwiC8sYF/4VZurFPtPv0N2qbqfK
      //yv/42//Yff8f7vPu5nnbQ+Ua0tlEoibBtz6qcY+dfAqWK9/CuQVRTd9Q8zBG4J1W6iPBfl
      2djX/yWqtHTaH+HIDu0BpPQYGhul7bhMz8z1s05an6j6Bqr8GNkOYWaiiPgFhNhCrt9GSQGd
      OiJ5EdPaQVbKGKkJVHMTohG89VsQvXzaH+HIDg1AdbfGxNwsMhYl9awT2pWi2WoRjUaoVauE
      YwmE16HlKGLRECDwPA/b1ntvzxoj9wrGwDWU64ByMeJJhBiGwn1E/jW8jduYwzOojos1NYNq
      rIMKI2IxZGkLMzd02h/hyA4NQLO8yd/9za/Jzl1icuIyE6NP/7Ct6jbv/+Mt/sWbs9xerRKy
      w5jtIi1PMDw+gu2alDoOL81eOLEPoR2BYSFCB5uBgZG7AoA1+QYA5pB/X2eRnOiNZQ5O962K
      J+mZ+wEqG4/4+48/48pr73D14vA3VoKVdLl75z5NzyEfiTIwN8vq/DzCMBhKxdmsFnl4e5l3
      f/mXJCz/ZtzFYlHfKFs7M565FWjpzm1e/+f/mi9//xuuXvzlN4YrKUG2WH68wsgr1/jThx+T
      zg5j1ja5tbXNxUtTvPHmEI8WHnDj2hyWYWCapl4c0s6MZ/YAhcfz/OGLu8zdeIuXLo4cuhlU
      KYUQIKXqbbNW6sk97EJfFkU7c57ZA9SK61TaBk6z+azReo3eMMSB146hdpp2wg7dD9AorvPp
      /Q1mZmaYntQnoGjn06EBuPenm1x5+122Hi1imSd3QoKmnaZDAzA0OcrirVsI4XDz7mI/66Rp
      ffPCHA6taSdBX2JBCzQdAC3QdAC0QNMB0AJNB0ALNB0ALdB0ALRA0wHQAk0HQAs0HQAt0HQA
      tEDTAdACTQdAC7QjXhpR8uDOV2xtF7gwd4X7DxbJDI5iNTYpNCSX5i5gyxA7lSrXrswcT401
      7Rgd8XBohdOss/h4DVsIhi7PsnrPvypEPh1js1pi8c4q7/zlL0jY+qoQ2tlztAAoj0//6Y9k
      hkdJWx6PKy6mAqNTxsNkYHgI2xGUOh4vzV3QJ8VrZ84RF4EE07OXaLuSZG6I6WiBWDqHcJrU
      O4pUIgIYZJ3OsVRW046bPiNMCzS9FUgLNB0ALdB0ALRA0wHQAk0HQAs0HQCNVrPF/EoJT0nW
      C7XeXSk912VhuUDD8VjfKlKoO3iuw/zSDi3vlCt9THQAgk5JPl/YJhMP0Wy0mN8o926oevfh
      BnY0TKteZ63scPfxNrfubxBPRM7NDRN1AIJOupRrLb56uE6NMMOJ/TvJl+stHi9vcW+rxvBA
      inhIUGu0WVjaYnn32VcMf1HoAASdaTORiyKEoFGpcvvRNl8slVjeKjOZTyEVZGJRFh6vUvdM
      JoeSKMA4J9e/13uCtW9SLuu7HUZzsdOuyZEopVAKFN3HJ/6WUuk7xWtPISxGsiaNlkM4ZGIa
      +wsKSil/HaHbkLr/9od1/+iO1Wt4AG3HQylFx/GQStF2/DXpVsfFcSWelLiexPMkHddDSn8c
      z5M4nkRKRcf1euO43dfbjgcK2o6LJxVOd5y9/0qB60mkUkgpkYreNE8lAMpzeLDVZDRhcHu9
      zquX8oRMwdr6Dg+2W7zx0gj37q8zOjGM3amz0RS8PJEG9u9G07e6fscOUh36x9O1Om7v+d4P
      BuC4fiPxn/uNA/YakT9+x/VQsjuO5+F1n7c7Xq8BdrqN7snp+I3If92V++XuNTzXk3z45TJT
      +TRDmZjf0DoeUkpcTyGVwvU8XE/hSYknFa7rN9y9cvem53p+uWHbQggIWSaGIQjbfvOLhCxs
      y8A0BJZpYpqC8IFxDENgd/8OWSaWaWCagqhlk7JMwrYJAiIHxrVNA8sysC0TgV+maQgsy8AQ
      /mPIsk5nEWin2Ga54ZExFZdGkzyum7w6keDmwiavzo5QrzWQts2dxS1QgkwE/uazDfIJi2sX
      h77WOPwf27c3Zzj4QwI43v4P33micXRHwXH3G1DHcb/WyA42xL1put7XG9N+w5UHyt2fpvfk
      ON1phmyzt0XFNAws05/b2t0fCsCyjN5c+OD4tmU+MY44MM7e8/3p7DUiAMvcL+tguSHLwDAM
      XE/y5/k1Lo1luTiSxjKN3vv3G5rhN1hD9KYXsv06hW3/pirhkIVtGpjm2Vzd7HsP0KlX+WKt
      g+e53LgxxpeL24hUDoCYofjtJ/e5dm2KzaVdrl0a4sHjCtGIx0dfPCZkKu483sYyzd49yCIH
      7nFrHfiiQwcah32gcYRDVq8BJaKhXo9id+cQQHeO0n1u7Zd1cJyDZR1sTKEnG1m34ZqmeOo4
      Bz3Zu4lvPKHXsJ8c6cmpHUdP+e9+dg0h+t/r9tOJ9AC3P/+EQv3gKZEVXrrsnxK5s7NDJJ7i
      wWqRkaTNV6sVbswOU2s6NMpVNqsOk7koD4stxgbTiEaVnbbg0niGqGmQTUXP/Y+i9c8JBEBx
      f/4+Q+m4f0rk3TXe/sV7pCN+l/i0rUCdToe2Z5CM6nVyrb9OYMFM0GpUWN7cIhxNcuP6FdZW
      1p65PhgKhXTj107FibS6y5evUG1JMukYKJOs0zqJYjTtyE4kAOFYkvCBfSiW9WLvUNHOr7O5
      bUrT+kQHQAs0HQAt0HQAtEDT2x61Q0mlju2wZ092D0b72n//Ne/AQWp7r+3996REoroHtSlc
      5R9q4in/UBSvO44ju8Olf+iKK2XvdX88CQo63v5whT4aVHuC43mUWk3WqxV+ff8ew4kkmUgU
      qSTu3vFUntdtbH5jdaR/zJOnZG8aew10r7EJBEL4R4f6h5MI/KNB/NeN7qM/nh86IYS/iCIE
      ltE9iK37aBoGpjAwu8/3h5u9x4hlY5sGAoFt+jtiQ6aJ6E4HdA8QWEop6p0O5XaLQr3OSqXE
      WqVModFACEiGInhSIgTEQzZ0G5EAbNPsNUYO/G0b/nFTtuk3q9CB8cSBBm6Ig419r6H7Df9g
      CAR0xz25w150AM65vTl1w+lQajVZq1RYrZTYqFapdzoYQjAYjzOWTPP21DT5RIKYHSJm27Q9
      l5BpnZuzv55GB+AckUrheB61TptCo85yqcR6tcJ2vUbd6RAPhRlPphhNpXl9bIJ0OEo6Eukt
      HjwpZBislnbJp7PslgsUHMXVoUFMYLtSIBTL4baKNAiTCxmEQhHsFywsOgAvINVdQXSkpNio
      s16tsl6tsFYtU2w2absuuViMiXSGq/lhfpaYJRWOkIpEvlM5UkkMJC0JmXiKdnmbkqPI2RDB
      Y9dROC0HV7VRXpQxO9w7jPxFoQNwxu2dgthyHdYqZTZrVdarVTaqFXYadUKmyXgqzWgyxTtT
      FxmKJ8jG4r3l86OwTJuY5fcOntehKQ1SKIQwSYXD7EoYTcRZrbcoNaqUOw6v5IeOXG4/6QCc
      MUopCo16d9GlzmqlzHq1TKXVJhuLMZ5KM55K8/rYOKOJFLFQ6Nsn+j21Og0eFsvYLUWMDi1P
      YkmHcsdjdadEyWgzMZwlIw06hkdTnFxdToq+KsQpajkOm/UaW7UqW7Uqy+Uym7UKlmEyFI8z
      mkwxmkwxkR5gKB7vbRnRJwMdH90D9IEnJZV2i516na16jeVyic1alXKrSdwOkU8kGU2m+On0
      DOOpNDE7hGkY53rry1mhA3CMlFJ0PI9is8F2vcZapdJdZq90t6eHGYrFmUxn+NHkFPl4Atu0
      sA1Dz9VPiV4E+p683rb1FivdOfpWrUax2cA2DRKhCGMpfxFmPJUmGY4QtW09Vz9jdA/wLVR3
      V3+t3Wan0WC1UmKn7q+ktl0X0zDIxWJMpge4MjhEPpEkFT5827p2tugAHCCVouO6VNot1qoV
      1qsVduo1tut12q5LPBTqzdF/ODFFNhojEQ7rufoLLJAB2NuR1HZdCs06q5UKG90GX223caXH
      UDzBeCrNy8OjjCSS5GJxwlYgv65z7dz/onuNveF0WKtUWKuUWatWKDTqFJsNkuEII8kkw4kk
      VwZnGU4kGYhG9UppQJy7ALjSY7fRYL1aYaVcYqNWZadep9bpMJ5KkU8kmR7I8u6FaUaSSSKW
      fdpV1k7RqQTAcTuUOh5D0Qir5V0SsTTpkIXnOSwWi4xmchQqJUYyWRzXIf6UvZ1KKRqOw2at
      ymatymqlxGatxk69TtS2yMeT5BMJ3hyfZDSZYjCe0DuRtG84lc2gIhKi0GozHLbYcQX1dovr
      +TzVZh0lBGvFLTwzisJiOJlkMGLz+8UFHCkxhGC9UmGrXqPeaZOJxhiM+XtNx1IpRhIpYiEb
      U+ht69q3+149gNducuvLz5mYe5PyylesF6pce/MdshHJHz/6GC+UIheDQsvk4nCSdH6KqL3f
      GAdiCcrtDm2lyERiuE4bgKht86hc5WJ+guXCNtBhYXuN+kCeD5ce4UrJqyNjXB4c4icXZxhK
      JAib1teuX69p38X37gHKhWUca4jdzVVmLqR4tGoyO+YwvxUh5m1QabiU6y0SEZNQYpC5i2NI
      KSkWi3RMxUK5yqWBLBvVCtFwnOFYmFqjwrYL+XiKpHCRwuBBschUbphms0bYNMknksf9HWgB
      9r0CIN0Ojx/ewQmN4VZWCduKcP4KgzGH27eXME2PqzdeYWtlmXK1jKtMXrvxMnB+9gRr58P3
      WgRSSmJHMtiWIn95jp1yi9EBi0bbYnZ6BM+OEzZgaGSU/OAAdVcvomhnkz4WSAs0PWvWAk0H
      QAu0ZwbAbZb4zft/x8O1Qr/qo2l99cwAzH/yMRfe/Am3P/3j89zxU9NeOIcGQHoOQzPTfPK3
      f01mYqafddK0vjk0AJ7borDbJD8ygi30/F87nw4NgGlHaVdqXP3BG6hWrZ910rS+OXRHmHQb
      3Ltzh6jTZnrqcj/rpGl9c2gPYIVS/LP33mT14QrLyyv9rJOm9c0ztwKVd8pEU1FKxVK/6qNp
      fXVoAErr97m5ssPchQlicX0EpnY+HRqAhc/v8+pP3uWLj//ED996rZ910rS+OTQAUy/PsXrn
      Lpdfuc7G2kY/66RpfXPoVqD81BzpwXGsaJR2s9nPOmla3xwaALdT4X/8l/9O4vpLyJbJr/7q
      5/2sl6b1xaEBEEaY195+m/BInmw61886aVrfHLoO0GnW6HgOd2/d4u7CUj/rpGl9c2gAHn95
      i8++uEM8n2cgHe9nnTStbw4NwJUf/Zg3Xxrjz3/4gNVCtZ910rS+OTQAwrAwPMm//Q//kfb2
      cj/rpGl988xDIS7/8Efc+f37zNx4HX2NNe08euZlUbYeLTL9xjtcyqdRoEOgnTvPOCOsw+rG
      Op99+AF/vrXQzzppWt8c2gPMf/IBjdQIsU6dv3j9aj/rpGl9c/h+gI7D6qOHPJq/xW8/vKlP
      itfOpSNfGW57ZZFHGwWuXH+dVMTg8f3bOKEs2bDDdtNkajCGiGSIdK8Ora8Mp50lR75Bxna5
      xktXrxEPm+AUqcoM0WaB5YoA5bGuOoyOJ1DKL0ophZTyyBXXtONwxAAohrJpFhdukRx+mYs5
      F9MOY0mT8fwwO5tbFEsFCpU6P3jlGkopHQDtTDlyD9BuNGh2DC6kYLcRR9RuUwnlmBpI4TmS
      dMtkp2VhdG9iYRgGlr7bonZG6KtDa4GmL46rBZoOgBZoOgBaoOkAaIGmA6AFmg6AFmg6AFqg
      6QBogaYDoAWaDoAWaDoAWqDpAGiBpgOgBZoOgBZoOgBaoOkAaIGmA6AFmg6AFmg6AFqg6QBo
      gaYDoAWaDoAWaEe+QE95e5WFtTKv3riGZSgezX+FE8qRjThsNwymBuOIaIaorS+urp09R+wB
      JKtbZa5MxFjaqIFToq6yGK0CK1tVWrVd1neKKM85ntpq2jE78iKQYZjYYRvpeqA8DCuEaRlM
      TI4RDYUplXa5fXf+OOqqacfuiAEwyCYsPr+zxcRIiN1GDKPxiJoXI5tJkskOMjaYIRJLHE9t
      Ne2Y6UsjaoHWC4DjOFSrJ387VKUUQnxzhXjvytF7F9F9kud5mKZ56HSfNVxKiRDiqeUeddon
      We+jln2adTvJaX/b8O/ye/e9BzjMXjUOq7Trus+8qvRhwXqeaT/rvac57eMo+yh1O+p3flKf
      +3nKhuf73GcmAN/m274Q7fgF4Tt/YQKgaSfhzN6p4sGdm2wUWly6PMHi/UVyk7NEWtu0IsNM
      Zgz+fHeZH7/1+mlX89zw3Ca3Pr1F24oxlQ3xYGWLy9dusPboAeOXruKWV1laLTAxd43xwdRp
      V/fYnNlDIS7OXiU/mKFerXL9zbeRjRJTFy9iGRBNDTI2mD7tKp4rhhnh6rU5MqkEtTa88/Z1
      dncazFyYQCjJ8MQ046NDROwzO8/8Xs5sABbu3SU7OkbMMtnd3sBVFq1mi2arSafTodlq0Wp3
      9O1bj4l0G9x7sM7E+AjKa7O1vo0ZDdNsNmm2Wiw9XMCMD5CKh0+7qsfqzAYgGg2zsbJCamQK
      1W4xc2mKrZ0SOE0qpSIoxeZO+bSreY4IwpZieW2TmUsz1DohLg5HKdfqNKoVQpEIu1sbVBrt
      067osdIrwVqgndkeQNP6QQdACzQdAC3QdAC0M0N5TT67eYfy1hJLm8+3gaO+u8rvP76JUorb
      n37I+//vH6i1vd7w2u4aj9eK33xjY4e//t//5+zuCNOCR5gRqhv3+b8Lkp//7F1+95vfMP3y
      axQWb+HGx8jaDepejFeuz/LFP31I3UhTe/ABu7m/wOsUuL1Y45c/yvP3//gpQ7aDFQmzdP8m
      g7PvsLbwGcnRWWR1EyuZ51quDblZ3QNoZ4ngjRtziOQom199wIPNEo8eP2BxcY2P/vAhd776
      ksnpGahtsFiNILfuER2Z5vVXXgYUQpiYpolsl7m/Ume9GuEHb75Cefk2f/xqieXlJb78coHZ
      maleiboH0M6USGqIl2ZTTKcneFy9yfBQHme3QHYyx0g2QjpmY5BnzL5LIzLN5fEoVszEDOWY
      Hbf53c0N3vvxD3i0VCMhytx5uM3lV98gOv8VueFhxnNZQqaAcAZ36yO9H0ALNr0IpAXa/wdA
      M89dQr0ovwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
