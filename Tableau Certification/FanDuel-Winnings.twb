<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='win' version='10.2' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='FanDuelProfitAnalysis' path='/workbooks' revision='1.8' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='fanduel entry history 20170428' inline='true' name='federated.0egd989001ylkl13isggo0eulvll' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='fanduel entry history Master' name='textscan.0fevgs218ckgn116av4ck0rcglom'>
            <connection class='textscan' directory='C:/Users/206404804/Dropbox (Personal)/Data Science/Datasources' filename='fanduel entry history Master.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0fevgs218ckgn116av4ck0rcglom' name='fanduel entry history Master.csv' table='[fanduel entry history Master#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entry Id' ordinal='0' />
            <column datatype='string' name='Sport' ordinal='1' />
            <column datatype='date' name='Date' ordinal='2' />
            <column datatype='string' name='Title' ordinal='3' />
            <column datatype='string' name='SalaryCap' ordinal='4' />
            <column datatype='real' name='Score' ordinal='5' />
            <column datatype='real' name='Opp Score' ordinal='6' />
            <column datatype='integer' name='Position' ordinal='7' />
            <column datatype='integer' name='Entries' ordinal='8' />
            <column datatype='string' name='Opponent' ordinal='9' />
            <column datatype='integer' name='Entry ($)' ordinal='10' />
            <column datatype='real' name='Winnings ($)' ordinal='11' />
            <column datatype='string' name='Link' ordinal='12' />
            <column datatype='string' name='F14' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Entry Id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entry Id]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>Entry Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SalaryCap</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SalaryCap]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>SalaryCap</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Score]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>Score</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Opp Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Opp Score]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>Opp Score</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entries</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Entries]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>Entries</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Opponent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Opponent]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>Opponent</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entry ($)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Entry ($)]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>Entry ($)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Winnings ($)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Winnings ($)]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>Winnings ($)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Link]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>Link</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F14</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F14]</local-name>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias>F14</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fanduel entry history Master.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit' datatype='real' name='[Calculation_1248341522968702976]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Winnings ($)] - [Entry ($)]' />
      </column>
      <column caption='AVG Profit' datatype='real' name='[Calculation_1248341522984853505]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Calculation_1248341522968702976])' />
      </column>
      <column caption='ROC' datatype='real' datatype-customized='true' name='[Calculation_1248341522989998082]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_1248341522968702976] / [Entry ($)]' />
      </column>
      <column datatype='integer' name='[Entry ($)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Opp Score]' role='measure' type='quantitative' />
      <column caption='Opponent1' datatype='string' name='[Opponent]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='integer' name='[Profit (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[Calculation_1248341522968702976]' peg='0' size='1' />
      </column>
      <column caption='Salary Cap' datatype='string' name='[SalaryCap]' role='dimension' type='nominal' />
      <column datatype='real' name='[Score]' role='measure' type='quantitative' />
      <column caption='Game Type' datatype='string' name='[Title]' role='dimension' type='nominal' />
      <column datatype='real' name='[Winnings ($)]' role='measure' type='quantitative' />
      <column-instance column='[Score]' derivation='Attribute' name='[attr:Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1248341522968702976]' derivation='Sum' name='[sum:Calculation_1248341522968702976:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Entry ($)]' derivation='Sum' name='[sum:Entry ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Opp Score]' derivation='Sum' name='[sum:Opp Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Winnings ($)]' derivation='Sum' name='[sum:Winnings ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1248341522984853505]' derivation='User' name='[usr:Calculation_1248341522984853505:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Title)' hidden='true' name='[Action (Title)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Title]' />
        </groupfilter>
      </group>
      <group caption='Action (Title1)' hidden='true' name='[Action (Title1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Title]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:/Users/206404804/Dropbox (Personal)/Data Science/Tableau Certification/Udemy Cert Prep Course/fanduel entry history 20170428.tde' schema='Extract' tablename='Extract' update-time='05/17/2017 06:22:22 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_1248341522968702976]' formula='[Winnings ($)] - [Entry ($)]' />
            <calculation column='[Calculation_1248341522989998082]' formula='[Calculation_1248341522968702976] / [Entry ($)]' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[Profit (bin)]' formula='SYS_NUMBIN([Calculation_1248341522968702976],1)' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='205' timestamp-start='2017-05-17 18:22:22.178' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_1248341522968702976</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_1248341522968702976]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1248341522968702976</remote-alias>
              <ordinal>0</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-30.080000000000069</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.1467317073170735</statistic>
                <statistic aggregation='Min' datatype='real'>-10.0</statistic>
                <statistic aggregation='Max' datatype='real'>4.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.0048442683688132</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.9999484264617517</statistic>
                <statistic aggregation='Var' datatype='real'>4.019400540411282</statistic>
                <statistic aggregation='VarP' datatype='real'>3.9997937085068367</statistic>
                <statistic aggregation='Count' datatype='integer'>205</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>824.37139999999908</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1248341522989998082</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_1248341522989998082]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1248341522989998082</remote-alias>
              <ordinal>1</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3.1200000000000259</statistic>
                <statistic aggregation='Avg' datatype='real'>0.019500000000000163</statistic>
                <statistic aggregation='Min' datatype='real'>-1.0</statistic>
                <statistic aggregation='Max' datatype='real'>3.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.96742724361995991</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.96439929489812459</statistic>
                <statistic aggregation='Var' datatype='real'>0.93591547169811318</statistic>
                <statistic aggregation='VarP' datatype='real'>0.93006599999999995</statistic>
                <statistic aggregation='Count' datatype='integer'>160</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>148.87139999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>2</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>25</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2017-04-16#</statistic>
                <statistic aggregation='Max' datatype='date'>#2017-05-15#</statistic>
                <statistic aggregation='Count' datatype='integer'>205</statistic>
                <statistic aggregation='Median' datatype='date'>#2017-04-30#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entries</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Entries]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entries</remote-alias>
              <ordinal>3</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>847751.0</statistic>
                <statistic aggregation='Avg' datatype='real'>4415.369791666667</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>122445</statistic>
                <statistic aggregation='Stdev' datatype='real'>15508.278466971602</statistic>
                <statistic aggregation='StdevP' datatype='real'>15467.839601617905</statistic>
                <statistic aggregation='Var' datatype='real'>240506701.00913504</statistic>
                <statistic aggregation='VarP' datatype='real'>239254061.94137913</statistic>
                <statistic aggregation='Count' datatype='integer'>192</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>49679914049.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entry ($)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Entry ($)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entry ($)</remote-alias>
              <ordinal>4</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>295.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.4390243902439024</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>10</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.6427019302828925</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.6386904421698365</statistic>
                <statistic aggregation='Var' datatype='real'>2.6984696317551409</statistic>
                <statistic aggregation='VarP' datatype='real'>2.6853063652587745</statistic>
                <statistic aggregation='Count' datatype='integer'>205</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>975.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entry Id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entry Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entry Id</remote-alias>
              <ordinal>5</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>205</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;S1200489427&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;S1219284797&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>205</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;S1210247530&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F14</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F14]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F14</remote-alias>
              <ordinal>6</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;endedunmatched&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;voided&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>16</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Link</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Link]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Link</remote-alias>
              <ordinal>7</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>205</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;https://www.fanduel.com/entry/AAHFMAWJB&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;https://www.fanduel.com/entry/FGCRXFUZE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>205</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>8</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>205.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>205</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>205.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Opp Score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Opp Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Opp Score</remote-alias>
              <ordinal>9</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>266.10000000000002</statistic>
                <statistic aggregation='Avg' datatype='real'>4.3622950819672131</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>266.10000000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>34.070613750143622</statistic>
                <statistic aggregation='StdevP' datatype='real'>33.790192407403076</statistic>
                <statistic aggregation='Var' datatype='real'>1160.8067213114755</statistic>
                <statistic aggregation='VarP' datatype='real'>1141.7771029293203</statistic>
                <statistic aggregation='Count' datatype='integer'>61</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>70809.210000000006</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Opponent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Opponent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Opponent</remote-alias>
              <ordinal>10</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10 player league&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tournament&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>205</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Position</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Position]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Position</remote-alias>
              <ordinal>11</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>61</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>308258.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1503.6975609756098</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>52879</statistic>
                <statistic aggregation='Stdev' datatype='real'>6320.9523781551925</statistic>
                <statistic aggregation='StdevP' datatype='real'>6305.5165739714139</statistic>
                <statistic aggregation='Var' datatype='real'>39954438.966905788</statistic>
                <statistic aggregation='VarP' datatype='real'>39759539.264628194</statistic>
                <statistic aggregation='Count' datatype='integer'>205</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8614232352.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SalaryCap</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SalaryCap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SalaryCap</remote-alias>
              <ordinal>12</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;$35k&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;$60k&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>205</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Score</remote-alias>
              <ordinal>13</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>50066.699999999968</statistic>
                <statistic aggregation='Avg' datatype='real'>264.90317460317442</statistic>
                <statistic aggregation='Min' datatype='real'>92.900000000000006</statistic>
                <statistic aggregation='Max' datatype='real'>300.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>29.113736804460942</statistic>
                <statistic aggregation='StdevP' datatype='real'>29.03661418738314</statistic>
                <statistic aggregation='Var' datatype='real'>847.60967071942355</statistic>
                <statistic aggregation='VarP' datatype='real'>843.12496346693979</statistic>
                <statistic aggregation='Count' datatype='integer'>189</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>13422178.389999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sport</remote-alias>
              <ordinal>14</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;mlb&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;wnba&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>205</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Title</remote-alias>
              <ordinal>15</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>69</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;$1 NBA Head-To-Head (Beginners Only)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WNBA Tip-Off Challenge&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>205</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Winnings ($)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Winnings ($)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Winnings ($)</remote-alias>
              <ordinal>16</ordinal>
              <family>fanduel entry history Master.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>264.92000000000007</statistic>
                <statistic aggregation='Avg' datatype='real'>1.2922926829268295</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>9.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.9674523469314826</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.9626478163241798</statistic>
                <statistic aggregation='Var' datatype='real'>3.8708687374461994</statistic>
                <statistic aggregation='VarP' datatype='real'>3.8519864509220718</statistic>
                <statistic aggregation='Count' datatype='integer'>205</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1132.0114000000005</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit (bin)</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Profit (bin)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit (bin)</remote-alias>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-72.0</statistic>
                <statistic aggregation='Avg' datatype='real'>-0.35121951219512193</statistic>
                <statistic aggregation='Min' datatype='integer'>-10</statistic>
                <statistic aggregation='Max' datatype='integer'>4</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.9411844412398132</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.936444057018105</statistic>
                <statistic aggregation='Var' datatype='real'>3.7681970349115255</statistic>
                <statistic aggregation='VarP' datatype='real'>3.7498155859607376</statistic>
                <statistic aggregation='Count' datatype='integer'>205</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>794.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.481675' measure-ordering='alphabetic' measure-percentage='0.518325' rowDisplayCount='79' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Title:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;$3K Tue NBA BIG $2 Quintuple Up- 5X (Top 300 Win)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10-Player Contest ($0)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;50/50 Contest ($1 - Top 50\% Win) (Main)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NBA BPN League (NBA Game 4)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;$15K Mon NBA Dribbler (Single Entry_ Mon-Tue)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;$5 NBA Head-To-Head (Experienced Players Excluded)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NBA Beginner Double Up ($1)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NBA BPN League (NBA Game 16)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NBA Head-to-head (Late Night)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;$10K Tue NBA Dribbler (Single Entry)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NBA $2 Double Up ( Experienced Players Excluded)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NBA BPN League (NBA Game 21)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WNBA Tip-Off Challenge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;$250 NBA Mini Dribbler (Single Entry)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LAST CHANCE: NBA Fantasy Playoffs presented by Bud Light \#30&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NBA BPN League (NBA Game 8)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;$2 NBA Head-To-Head (Beginners Only)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;20-Player Contest ($0)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NBA BPN League (NBA Game 5)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;$2K Sun NBA Block \#2 (Single Entry)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;$60k&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NBA $2 Double Up (Beginners Only)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NBA BPN League (NBA Game 22)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;$250 NBA Mini Swat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NBA BPN League (NBA Game 12)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NBA Fantasy Playoffs presented by Bud Light \#28&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;$10 NBA Head-To-Head (Experienced Players Excluded)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;$20K Mon NBA Swat (3 Entries Max_ Mon-Tue)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;$5 NBA Head-To-Head (Beginners Only)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NBA BPN League (NBA Game 18)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NBA Mini Swat (Beginners Only)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;$2K NBA Mini Swat (Experienced Players Excluded)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NBA BPN League (NBA Game 10)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NBA Fantasy Playoffs presented by Bud Light \#26&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;$1 NBA Head-To-Head (Experienced Players Excluded)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;$50K Sun NBA Shot \#2 ($50K Guaranteed)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NBA BPN League (NBA Game 25)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;$1 NBA Head-To-Head (Beginners Only)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MLB $1 50/50 Contest (Experienced Players Excluded) (Main)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NBA BPN League (NBA Game 9)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NBA $1 Double Up (Beginners Only)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NBA 2 player league (Main)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NBA Draft Challenge - Commissioner For A Day&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;$18K Fri NBA Dribbler (Single Entry)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NBA Beginner Double Up ($2)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NBA BPN League (NBA Game 11)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NBA Fantasy Playoffs presented by Bud Light \#27&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;10-Player Contest ($1 - Top 3 Win)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NBA BPN League (NBA Game 14)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NBA Fantasy Playoffs presented by Bud Light \#29&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5-Player Contest ($0)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NBA $2 50/50 Contest (Beginners Only) (Main)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NBA BPN League (NBA Game 6)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;$5K Sun NBA Dribbler \#2 (Single Entry)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NBA $1 Double Up (Experienced Players Excluded)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NBA BPN League (NBA Game 3)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;$100 NBA Beginner&apos;s Only Free Play&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;$2 NBA Head-To-Head (Experienced Players Excluded)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NBA BPN League (NBA Game 2)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NBA Salary Cap 60k Fri May 5th (Main)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;$13K Fri NBA Block (Single Entry)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;$200 NBA Double Up ($2)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NBA BPN League (NBA Game 1)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NBA Fantasy Playoffs presented by Bud Light&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Buzzer Beater $5_000 NBA Free Play&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NBA $1 50/50 Contest (Beginners Only) (Main)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NBA BPN League (NBA Game 7)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;$10K Sun NBA Dribbler (Single Entry)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NBA $1 50/50 Contest (Experienced Players Excluded) (Main)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NBA BPN League (NBA Game 20)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NBA tournament&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Entry ($):qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[attr:Score:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Score:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Opp Score:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='quantitative' column='[Entry ($)]' filter-group='2' included-values='in-range'>
        <min>1</min>
      </filter>
      <filter class='categorical' column='[Opponent]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Opponent]' />
          <groupfilter function='member' level='[Opponent]' member='&quot;Cancelled&quot;' />
        </groupfilter>
      </filter>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Winnings and Profits' type='sheet' worksheet='FanDuel Winnings' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Winnings and Profits' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Profits By Game Type (old)'>
      <table>
        <view>
          <datasources>
            <datasource caption='fanduel entry history 20170428' name='federated.0egd989001ylkl13isggo0eulvll' />
          </datasources>
          <datasource-dependencies datasource='federated.0egd989001ylkl13isggo0eulvll'>
            <column caption='Profit' datatype='real' name='[Calculation_1248341522968702976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winnings ($)] - [Entry ($)]' />
            </column>
            <column caption='AVG Profit' datatype='real' name='[Calculation_1248341522984853505]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_1248341522968702976])' />
            </column>
            <column datatype='integer' name='[Entry ($)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Game Type' datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='real' name='[Winnings ($)]' role='measure' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1248341522968702976]' derivation='Sum' name='[sum:Calculation_1248341522968702976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Entry ($)]' derivation='Sum' name='[sum:Entry ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1248341522984853505]' derivation='User' name='[usr:Calculation_1248341522984853505:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Entry ($):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]&quot;</bucket>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]' direction='DESC' using='[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]' />
          <slices>
            <column>[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0egd989001ylkl13isggo0eulvll].[:Measure Names] * [federated.0egd989001ylkl13isggo0eulvll].[Multiple Values])</rows>
        <cols>[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Entry Vs Winning'>
      <table>
        <view>
          <datasources>
            <datasource caption='fanduel entry history 20170428' name='federated.0egd989001ylkl13isggo0eulvll' />
          </datasources>
          <datasource-dependencies datasource='federated.0egd989001ylkl13isggo0eulvll'>
            <column caption='Profit' datatype='real' name='[Calculation_1248341522968702976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winnings ($)] - [Entry ($)]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Entry ($)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Winnings ($)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1248341522968702976]' derivation='Sum' name='[sum:Calculation_1248341522968702976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Entry ($)]' derivation='Sum' name='[sum:Entry ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Winnings ($)]' derivation='Sum' name='[sum:Winnings ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Entry ($):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Entry ($):qk]&quot;</bucket>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]&quot;</bucket>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0egd989001ylkl13isggo0eulvll].[Multiple Values]</rows>
        <cols>([federated.0egd989001ylkl13isggo0eulvll].[tdy:Date:ok] / [federated.0egd989001ylkl13isggo0eulvll].[:Measure Names])</cols>
      </table>
    </worksheet>
    <worksheet name='FanDuel Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='fanduel entry history 20170428' name='federated.0egd989001ylkl13isggo0eulvll' />
          </datasources>
          <datasource-dependencies datasource='federated.0egd989001ylkl13isggo0eulvll'>
            <column caption='Profit' datatype='real' name='[Calculation_1248341522968702976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winnings ($)] - [Entry ($)]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Entry ($)]' role='measure' type='quantitative' />
            <column caption='Game Type' datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='real' name='[Winnings ($)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1248341522968702976]' derivation='Sum' name='[sum:Calculation_1248341522968702976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Entry ($)]' derivation='Sum' name='[sum:Entry ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Winnings ($)]' derivation='Sum' name='[sum:Winnings ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Entry ($):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]&quot;</bucket>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Entry ($):qk]&quot;</bucket>
              <bucket>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0egd989001ylkl13isggo0eulvll].[Action (Title)]'>
            <groupfilter function='level-members' level='[Title]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0egd989001ylkl13isggo0eulvll].[Action (Title1)]'>
            <groupfilter function='level-members' level='[Title]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]</column>
            <column>[federated.0egd989001ylkl13isggo0eulvll].[Action (Title)]</column>
            <column>[federated.0egd989001ylkl13isggo0eulvll].[Action (Title1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0egd989001ylkl13isggo0eulvll].[sum:Entry ($):qk]' value='C1033%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0egd989001ylkl13isggo0eulvll].[Multiple Values]' value='#f3faf9' />
            <format attr='background-color' field='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' value='#f3faf9' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0egd989001ylkl13isggo0eulvll].[Multiple Values]</rows>
        <cols>([federated.0egd989001ylkl13isggo0eulvll].[tyr:Date:ok] / [federated.0egd989001ylkl13isggo0eulvll].[:Measure Names])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0egd989001ylkl13isggo0eulvll].[tyr:Date:ok]</field>
                    <field>[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0egd989001ylkl13isggo0eulvll].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0egd989001ylkl13isggo0eulvll].[tyr:Date:ok]</field>
                  <field>[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]</field>
                  <field>[federated.0egd989001ylkl13isggo0eulvll].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>#2017-01-01 00:00:00#</value>
                <value>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]&quot;</value>
                <value>100.24999999999993</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0egd989001ylkl13isggo0eulvll].[tyr:Date:ok]</field>
                    <field>[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0egd989001ylkl13isggo0eulvll].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0egd989001ylkl13isggo0eulvll].[tyr:Date:ok]</field>
                  <field>[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]</field>
                  <field>[federated.0egd989001ylkl13isggo0eulvll].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>#2017-01-01 00:00:00#</value>
                <value>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]&quot;</value>
                <value>241.25000000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0egd989001ylkl13isggo0eulvll].[tyr:Date:ok]</field>
                    <field>[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0egd989001ylkl13isggo0eulvll].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0egd989001ylkl13isggo0eulvll].[tyr:Date:ok]</field>
                  <field>[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]</field>
                  <field>[federated.0egd989001ylkl13isggo0eulvll].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>#2017-01-01 00:00:00#</value>
                <value>&quot;[federated.0egd989001ylkl13isggo0eulvll].[sum:Entry ($):qk]&quot;</value>
                <value>141.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
    </worksheet>
    <worksheet name='FanDuel Winnings'>
      <table>
        <view>
          <datasources>
            <datasource caption='fanduel entry history 20170428' name='federated.0egd989001ylkl13isggo0eulvll' />
          </datasources>
          <datasource-dependencies datasource='federated.0egd989001ylkl13isggo0eulvll'>
            <column caption='Game Type' datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='real' name='[Winnings ($)]' role='measure' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Winnings ($)]' derivation='Sum' name='[sum:Winnings ($):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]' direction='DESC' using='[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]' max='31.5' num-steps='3' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d2e9d2</color>
                <color>#b5e2b5</color>
                <color>#99db99</color>
                <color>#7fd47f</color>
                <color>#66cd66</color>
                <color>#4fc64f</color>
                <color>#39bf39</color>
                <color>#24b824</color>
                <color>#11b111</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' id='refline1' value='off' />
            <format attr='fill-above' id='refline1' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]</rows>
        <cols>[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='FanDuel Winnings 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='fanduel entry history 20170428' name='federated.0egd989001ylkl13isggo0eulvll' />
          </datasources>
          <datasource-dependencies datasource='federated.0egd989001ylkl13isggo0eulvll'>
            <column caption='Profit' datatype='real' name='[Calculation_1248341522968702976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winnings ($)] - [Entry ($)]' />
            </column>
            <column caption='AVG Profit' datatype='real' name='[Calculation_1248341522984853505]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_1248341522968702976])' />
            </column>
            <column datatype='integer' name='[Entry ($)]' role='measure' type='quantitative' />
            <column caption='Opponent1' datatype='string' name='[Opponent]' role='dimension' type='nominal' />
            <column caption='Game Type' datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='real' name='[Winnings ($)]' role='measure' type='quantitative' />
            <column-instance column='[Opponent]' derivation='None' name='[none:Opponent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Winnings ($)]' derivation='Sum' name='[sum:Winnings ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1248341522984853505]' derivation='User' name='[usr:Calculation_1248341522984853505:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0egd989001ylkl13isggo0eulvll].[none:Opponent:nk]' direction='DESC' using='[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]' />
          <filter class='categorical' column='[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]'>
            <groupfilter function='level-members' level='[none:Title:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]' direction='DESC' using='[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]' />
          <slices>
            <column>[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]</rows>
        <cols>([federated.0egd989001ylkl13isggo0eulvll].[none:Opponent:nk] / [federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Profit By Game Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='fanduel entry history 20170428' name='federated.0egd989001ylkl13isggo0eulvll' />
          </datasources>
          <datasource-dependencies datasource='federated.0egd989001ylkl13isggo0eulvll'>
            <column caption='Profit' datatype='real' name='[Calculation_1248341522968702976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winnings ($)] - [Entry ($)]' />
            </column>
            <column caption='AVG Profit' datatype='real' name='[Calculation_1248341522984853505]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_1248341522968702976])' />
            </column>
            <column datatype='integer' name='[Entry ($)]' role='measure' type='quantitative' />
            <column caption='Game Type' datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='real' name='[Winnings ($)]' role='measure' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1248341522968702976]' derivation='Sum' name='[sum:Calculation_1248341522968702976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1248341522984853505]' derivation='User' name='[usr:Calculation_1248341522984853505:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Title:nk]' member='&quot;$1 NBA Head-To-Head (Beginners Only)&quot;' />
              <groupfilter function='member' level='[none:Title:nk]' member='&quot;$1 NBA Head-To-Head (Experienced Players Excluded)&quot;' />
              <groupfilter function='member' level='[none:Title:nk]' member='&quot;10-Player Contest ($1 - Top 3 Win)&quot;' />
              <groupfilter function='member' level='[none:Title:nk]' member='&quot;50/50 Contest ($1 - Top 50\% Win) (Main)&quot;' />
              <groupfilter function='member' level='[none:Title:nk]' member='&quot;NBA $1 50/50 Contest (Beginners Only) (Main)&quot;' />
              <groupfilter function='member' level='[none:Title:nk]' member='&quot;NBA $1 50/50 Contest (Experienced Players Excluded) (Main)&quot;' />
              <groupfilter function='member' level='[none:Title:nk]' member='&quot;NBA $1 Double Up (Beginners Only)&quot;' />
              <groupfilter function='member' level='[none:Title:nk]' member='&quot;NBA $1 Double Up (Experienced Players Excluded)&quot;' />
              <groupfilter function='member' level='[none:Title:nk]' member='&quot;NBA Beginner Double Up ($1)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]</rows>
        <cols>[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Profit Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='fanduel entry history 20170428' name='federated.0egd989001ylkl13isggo0eulvll' />
          </datasources>
          <datasource-dependencies datasource='federated.0egd989001ylkl13isggo0eulvll'>
            <column caption='Profit' datatype='real' name='[Calculation_1248341522968702976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winnings ($)] - [Entry ($)]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Entry ($)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Winnings ($)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1248341522968702976]' derivation='Sum' name='[sum:Calculation_1248341522968702976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]</rows>
        <cols>[federated.0egd989001ylkl13isggo0eulvll].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Profit Histogram'>
      <table>
        <view>
          <datasources>
            <datasource caption='fanduel entry history 20170428' name='federated.0egd989001ylkl13isggo0eulvll' />
          </datasources>
          <datasource-dependencies datasource='federated.0egd989001ylkl13isggo0eulvll'>
            <column caption='Profit' datatype='real' name='[Calculation_1248341522968702976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winnings ($)] - [Entry ($)]' />
            </column>
            <column caption='AVG Profit' datatype='real' name='[Calculation_1248341522984853505]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_1248341522968702976])' />
            </column>
            <column datatype='integer' name='[Entry ($)]' role='measure' type='quantitative' />
            <column aggregation='None' datatype='integer' name='[Profit (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[Calculation_1248341522968702976]' peg='0' size='1' />
            </column>
            <column datatype='real' name='[Winnings ($)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1248341522968702976]' derivation='Count' name='[cnt:Calculation_1248341522968702976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit (bin)]' derivation='None' name='[none:Profit (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1248341522984853505]' derivation='User' name='[usr:Calculation_1248341522984853505:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0egd989001ylkl13isggo0eulvll].[cnt:Calculation_1248341522968702976:qk]</rows>
        <cols>[federated.0egd989001ylkl13isggo0eulvll].[none:Profit (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0egd989001ylkl13isggo0eulvll].[Profit (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Profit Whisker Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='fanduel entry history 20170428' name='federated.0egd989001ylkl13isggo0eulvll' />
          </datasources>
          <datasource-dependencies datasource='federated.0egd989001ylkl13isggo0eulvll'>
            <column caption='Profit' datatype='real' name='[Calculation_1248341522968702976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winnings ($)] - [Entry ($)]' />
            </column>
            <column datatype='integer' name='[Entry ($)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Winnings ($)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1248341522968702976]' derivation='Sum' name='[sum:Calculation_1248341522968702976:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_ltgreen' />
            <format attr='opacity' id='refline0' value='144' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]' boxplot-mark-exclusion='true' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Return on Capital'>
      <table>
        <view>
          <datasources>
            <datasource caption='fanduel entry history 20170428' name='federated.0egd989001ylkl13isggo0eulvll' />
          </datasources>
          <datasource-dependencies datasource='federated.0egd989001ylkl13isggo0eulvll'>
            <column caption='Profit' datatype='real' name='[Calculation_1248341522968702976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winnings ($)] - [Entry ($)]' />
            </column>
            <column caption='ROC' datatype='real' datatype-customized='true' name='[Calculation_1248341522989998082]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_1248341522968702976] / [Entry ($)]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Entry ($)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Winnings ($)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1248341522989998082]' derivation='Sum' name='[sum:Calculation_1248341522989998082:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522989998082:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522989998082:qk]</rows>
        <cols>[federated.0egd989001ylkl13isggo0eulvll].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Score Vs. Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='fanduel entry history 20170428' name='federated.0egd989001ylkl13isggo0eulvll' />
          </datasources>
          <datasource-dependencies datasource='federated.0egd989001ylkl13isggo0eulvll'>
            <column caption='Profit' datatype='real' name='[Calculation_1248341522968702976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winnings ($)] - [Entry ($)]' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Entry ($)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Score]' role='measure' type='quantitative' />
            <column datatype='real' name='[Winnings ($)]' role='measure' type='quantitative' />
            <column-instance column='[Score]' derivation='Attribute' name='[attr:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1248341522968702976]' derivation='Sum' name='[sum:Calculation_1248341522968702976:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Score]' derivation='Sum' name='[sum:Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0egd989001ylkl13isggo0eulvll].[sum:Score:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' />
              <lod column='[federated.0egd989001ylkl13isggo0eulvll].[attr:Score:qk]' />
            </encodings>
          </pane>
          <pane id='1' y-axis-name='[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' />
              <lod column='[federated.0egd989001ylkl13isggo0eulvll].[attr:Score:qk]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[federated.0egd989001ylkl13isggo0eulvll].[sum:Score:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' />
              <lod column='[federated.0egd989001ylkl13isggo0eulvll].[attr:Score:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522968702976:qk] + [federated.0egd989001ylkl13isggo0eulvll].[sum:Score:qk])</rows>
        <cols>[federated.0egd989001ylkl13isggo0eulvll].[tdy:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='fanduel entry history 20170428' name='federated.0egd989001ylkl13isggo0eulvll' />
          </datasources>
          <datasource-dependencies datasource='federated.0egd989001ylkl13isggo0eulvll'>
            <column caption='Profit' datatype='real' name='[Calculation_1248341522968702976]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winnings ($)] - [Entry ($)]' />
            </column>
            <column caption='AVG Profit' datatype='real' name='[Calculation_1248341522984853505]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Calculation_1248341522968702976])' />
            </column>
            <column datatype='integer' name='[Entry ($)]' role='measure' type='quantitative' />
            <column caption='Game Type' datatype='string' name='[Title]' role='dimension' type='nominal' />
            <column datatype='real' name='[Winnings ($)]' role='measure' type='quantitative' />
            <column-instance column='[Title]' derivation='None' name='[none:Title:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1248341522984853505]' derivation='User' name='[usr:Calculation_1248341522984853505:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Title:nk]' />
              <groupfilter function='member' level='[none:Title:nk]' member='&quot;$10 NBA Head-To-Head (Experienced Players Excluded)&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='286' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]' value='336' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]' />
              <color column='[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]' />
              <text column='[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.3293370008468628' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Winnings and Profits'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='7' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' param='vert' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='647' h='80875' id='4' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='38418' id='5' name='FanDuel Profit' w='100000' x='0' y='42457' />
                <zone forceUpdate='true' h='7519' id='9' type='text' w='100000' x='0' y='0'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='24'>Winnings and Profits</run>
                  </formatted-text>
                </zone>
                <zone h='34938' id='10' name='FanDuel Winnings' w='100000' x='0' y='7519' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Winnings and Profits'>
      <viewpoints>
        <viewpoint name='FanDuel Profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='FanDuel Winnings'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='FanDuel Winnings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]</field>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='FanDuel Winnings 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[none:Opponent:nk]</field>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[sum:Winnings ($):qk]</field>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]</field>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='FanDuel Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]</field>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[tyr:Date:ok]</field>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Profit By Game Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Profit Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Entry Vs Winning'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Profit Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Return on Capital'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0egd989001ylkl13isggo0eulvll].[tdy:Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522989998082:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0egd989001ylkl13isggo0eulvll].[sum:Calculation_1248341522989998082:qk]</field>
                  <field>[federated.0egd989001ylkl13isggo0eulvll].[tdy:Date:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>10.9</value>
                <value>#2017-04-24 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Score Vs. Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Profit Whisker Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Average Profits By Game Type (old)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[:Measure Names]</field>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]</field>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[tyr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[none:Title:nk]</field>
            <field>[federated.0egd989001ylkl13isggo0eulvll].[usr:Calculation_1248341522984853505:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Profits By Game Type (old)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Entry Vs Winning' width='192'>
      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
      8NfvBk8e/2/56o8jBUFqQwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='FanDuel Profit' width='192'>
      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
      VlMAYrX/BVxLFanzQl4YAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='FanDuel Winnings' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FanDuel Winnings 1' width='192'>
      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
      jv9/A90vgUCkhRP6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Profit By Game Type' width='192'>
      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
      pRECEFxp/n+ZGTYe2tCSWQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2dd3hc13mn3zsFU4FBHQx6LwQBFpGiKIoyJVuyJMeSLduxLMV23JNdJ082
      ySbrzbN54mTzxNlNnji7qbajJOtItixbsmX1RpliJwhWEL0PMJgZAIPpfe7dPyjJokQQbYAB
      MOf9C8Dce+6HM+d3T/u+70iKoigIBFmKKtMGCASZZM0EIDoWwWZgzQSQSqXWqmiBIG2IIZAg
      qxECEGQ1QgCCrEYIQJDVCAEIsppVCEDBZR9hYMxBPDRPV1cXrvlQ+iwTCNYBzYrvTCVQmQqR
      Ju1MJbTU79iFRSM6FMHmQlq5K4SC0z6GrM/HKIcYGJ/EUlJDY7UVRVFIpVKoVEIQgo3NinsA
      OR5icHQCozmAzZqHhIRer0OtVv+ycM3KOxiBYD1YRQ9wY5LJpBCAYMMjxiiCrEYIQJDVCAEI
      shohAEFWIwQgyGqEAARZjRCAIKsRAhBkNUIAgqxGCECQ1QgBCLIaIQBBVrOqgJhEPEY0lkBR
      ZCKRCCIV0MZEURSikTApGZLxKD5/8GreJjmFz+vF6/OTTCXx+/2k5Oz6ElcVEDMyPMT8XIji
      MjN+b4jckjqaqovTaJ4gHSSiPo789IdU3PUbjB99mmQ8RM1tv8au0hRdZ89w6XIfN+9qYWx6
      lsptt3Bod2OmTV43Vi4AdQ7l1mJUegtyMsLum/YwODREKlXwTkCMyA63MZA0JvbubsOeSKFT
      S0zNhWnRSyRUem7ds52ktpB40senPn4vR04PkUjUZNrkdWPFAlDiQTovXKHEVo45R+FsVycF
      pQ0iIGYDEgvPceTN07itGsrjSUoKjXgcDnJVpbgHBti95zZmLh/hR089T+2O29BqtZk2ed1Y
      cUCMoigk4nEUJLQ5GpKJJFptDpJ09XMRELNxUOQU4XAEVGr0WjXRRAqjPoeUIiEpMiqNBuQU
      kWgMvcGA6u0vMQsQEWFZiiwrhKJxco26TJuSUcQyaJby9NFefutvX8Tu9mXalIwiBJClBMNx
      fKFoVg13rocQQBaiKApDUx4kSSKRkjNtTkYRAshCnJ4gE24fHfVWhiY9mTYnowgBZBmKonDs
      sp1dDTZ2NdoYmhICEGQRCnCy286BjipqbfkMT3lIydk7DBLrlFmGYybAjDfMrkYboUgcbzBG
      IBwn36zPtGkZQfQAWcaxyxPcvrManVZNYZ4BtVrCMRvItFkZQwggi0imZE5emeRgRzWSJCFJ
      Eu11VoYd85k2LWMIAWQRdrefUDRO67s8duvK8hm0z2XQqswiBJAlKIrC4XMj3NZejUr1y82v
      psoi7G4fySzdDxACyBKi8SRneh3s3155zd+tBSZC0QTeYDRDlmWWlQtATjLQfRm724Nvcog3
      T3Xi9ATTaJognQxOelCpJJorC6/5e75ZT55Jl7Xf3cqXQVUaamvrcIdC+HwBNFoNRoP+nUAY
      ERCzsThyYYx9rWXIcgpZTl3zWU2phf6JWVoqCzJkXeZYuQAUhWQyQTKZJL+ill3qFP1Do+zu
      aPpl4cIdekMQisbpGZ/lvz5063WDXVprirk45MqqQJi3WdUQyO6YxOeZRyVJDI+52batIY2m
      CdJF3/gsZkMODRWF1/28rqyAfvscsURynS3LPKuICdbS0tbxzq8dHfnpsEewBhy7bOdgR9WC
      n5cWmFCrJDz+CGVFuetoWeYRq0BbHG8wSt/4LDe3Vix4jdmQQ0GugTFn9gXHCAFscS4OOSnI
      1VNWZF7wGkmSaKkqYmw6+3aEhQC2MIqicPTiBAd3XHV9uBENFYUMZGFsgBDAFmbOH2Hc5eOm
      prJFr60vy8cxGyCRTC167VZCCGALc35wmiprHtYC06LXFuQa0KhVuDyhdbBs4yAEsEVRFIUT
      3ZPcsbv2Gt+fhTDqtZTkG5mc8a+DdRsHIYAtyow3zPRsgB0NpUu+p7GikMsjrjW0auMhBLBF
      OT84TX15wbIivRoqChl3ZddSqBDAFkSWFV7pHOEDO5eX5LahvIDRaS/RWPbsCAsBbEHGXV58
      wSjb60qWdZ/FpKMwz4BjLntCJIUAtiBneh2011sxG3KWdZ8uR0OVNY9hR/bsBwgBbDFkWeHY
      5QkOtFctuvl1PerLCxib9q6BZRuTlQtASTE1OoLbGyQamKPzzFn80ewZO25Uxl1eUimZ9nrr
      iu5vriyiP4tihFfhsC9hNlsIxEKMz8+xY2cbI2MT5DbXoSgKiqIgZ3HCpXQzduUMx88P0LDz
      NvZ31NF19GUuXhmgeudBXH1dGMpb+cQ9Bzl+2c6eljL0WvWK6r+yJBfnXJBoPEGORr34DZuc
      lQtAUmEw6AiEkoD01maL8k4U2NsiEKSHaDiMrNJy+dI5bmmv5aaDHyaZUmMtSVFc/Elmxs5y
      bmCa508O8KWP7F5x3Rt1WgrzDIw45mmpKkrzf7HxWMUheXH6B/sIxGRam2o5f76b5vZdqFRX
      R1Uqleqa45IEq6O+fS95JXbODftJJpMoEQ9xcxkl+ToGLg0QiSbBHyElK1jM+hXXvVqtprrU
      wui0l7balQ2jNhPihJhNQtTn5vTFEfYd2Idv1o3FrEdWmzDp1fRd6sJU3sLzJwYw6DT8+r27
      VvWsZ471MeKY53c/fWuarN+4iFWgTYLeYuXQB/Zj0Kiw2WwYzPmYDFqQVLTuvBlrvpFTPZPc
      vmP1JzzWlxcykiUrQUIAW4TukRkKzAbqylYfmtpSVcSMN0Q4mkiDZRsbIYAtwFXPzwkO7UrP
      +b5qtURFSR4jWZAzVAhgCxCKJrgw5OLW7ZUr2vx6L2qVisbyAgantv5+gBDAFuD84DSlhSZK
      CxeO+10udeUFDE/Nb/mlbCGATY4sK7x5YZzb2hdOe7ISWqqKGHbMI8tCAIINjCcQYXDSw75t
      C6c9WQmVJXnM+sJE4lvbvUUIYJPT1T9NbVk+JfmLx/0uB41aRZ0tn77x2bSWu9EQAtjEyLLC
      qSt2PrSnPu1lS5JEfXkBA5NbeyIsBLCJcc0HmZoLsKtx6XG/y6GttoQRx9aeCAsBbGJOXZmk
      tbqYXKNuTcqvteVjd/uJJ7ZuriAhgE1KMiVz7LI97as/76bKmkcklsAXiq3ZMzJNWgSQiPjp
      7e3F44+kozjBEhhzevGHY2yvWzuPTUmSqLHlM5iBeUBv11Ee/8GPmJwLgZLg6CvP8uTTL+Jx
      j/HY9/8f/VPpyV6RFgF4JqfIK69cdgzqZmfeOcyPfvA4T714FIDh80f5t8eeYMzh4Pvf/Wf+
      4ycvkFqj4fPpnkl2N9rWvM5bq4sy4hJRUddIsVGNLxyDZIxZfxxdIsSRcwN84uGHGe3uTMtz
      0uKvrDUbGevvIWKrpa6iOGuOSDIXlWKUUqgMRhKJBBd7+slRGfFNX6Fm74Mo8xcIR+PoNat3
      T3g3iWSKM71TfOVXdpNIrK3DWpU1j9e7Rtf8Oe8lnlCwFecy6/ERyzcha/Tk4sERNBAMBUmk
      lLTYlBYBpBQFFaBSqa8JxNjq8QDzTifV2zu4MjBFJNJEVWUVsiGPcfcM0cBZJHUSg06LZgmp
      CZfDiNOPSlLRXF2MVru2ddxYUcQPX7tCInU1feJ64ZoYpN8Z5mCTCXcQqgo0OEIVPHhgOy+9
      /CoHPvxAWo50umFAzLzThbHUitc1g9VmZTlfYzYExMTDPgaGxrHVNKKWY+SZ9QwMjlLT2IJv
      ehRVri2t/jlv8y/PnUOnVfO5e3amvez3kpJlvvSXP+ebXzxEXdnWO0RvwRYaj3r44Xf/BWNr
      E0WF1XzUtvXD45ZLjtFC+44db/1mJJmSaW5tRa1SYaxpXJNnRmIJTvdO8YcPH0hLeVc6j9DV
      M8rNH3yAbZX5nHjtWexBAx/cU8HPXztJx/77aK4sZHTamzEB+EMxnn6zl/3bK6855T4dLDgJ
      VmTYvnsnOZKEyWRI60O3ItF4kr9+4gR/9cMTazr3uTzixqTXUlOanjPZquvq0CgSao0K4n4u
      DdjRG3RcGHDyhS99Ge/kFXJyNDx/coBQBgJkFEXhTO8UPz3ax4unBtNe/oI9gGvcja2+kT3b
      mjEua/CTXaRSMl0D0/zkFz0Mv7VacqbXwb5t5WnxzX8vJ6/Y2d9WSY42PQkHYoqeO/e3cNnu
      prG4nLLqZrabPLw+rqLJ5SQm61FLEu75MLF4EtM6zgMUReHcgJMnDnfzq3e08XrXKONOLzW2
      9B3IuKAA8gp1vPj4zzD1dlNR2cwd+3csdGlW8nYGtmeO9RGNp/j47a38aUcVg5Me/vqJE8wH
      OrhnX0NaRRCKxrk45OIvvtaetjKDM3Yujvq54/Y2HHNRDuyspmvEz9ce3sGrL77OB+6+l1uj
      MXrHZ1kDPd+QIxfG+feXLvD7Dx2go95KnknH3/7kNP/7N+9Cm6acRTecBHvsvbx6qpfyuhYO
      7t0uJsFAOJbgF+fHePb4AAW5eu4/0Mze1vJ3vhBFURib9vKXPzjOoV01fOaD7Us6oGIpnLoy
      yYtnhviTXz+UtjKXgqIofP3bL/AbD+xhZ6NtXZ750pkhfnT4Cr//0K1sry1BkiSSKZm/eOwo
      ZYW5fOWju9PycrnhRtjsxBS2hkZmHY5VP2iz4w/FeOpIL7/zf1/iTO8UX3/wZv7sy3dya3vV
      NW8jSZKoLcvnz758J6d7pvjus13E0uRT/8b5UW5tq1zXxg9X/6f2eitjzuVlivBMj3Ghd/St
      3xT6L3UyaHdfTaXZdZHEdYJtZFnhpTNDPHWkl288chvtddZ3GrpGreLrD+7j5BU7Z/vT0ybV
      3/zmN7+50IfJeJxcaxkd25qXPeaUZfmdJFnrTXh+iscff4IhV5i2phrcQ+d54tnXMRUWc/hn
      T9J5ZZTW9jYW25+KJZKc6pnk7546w4krdlprivnCvbu4e289tiLzgg1RkiTMhhzu3FWL0xPk
      O892UbdKn/1RxzzPnhjga/fvSdv4fznIssJrZ0f40J66pb15k36Onx2gVHEwqamjVOXk2VfP
      4Zn34p5xUW810O2IUf2uybwvFOWvnzhJJJbgvz1yG+XFee8r1pCjYW9rOX/z5ClqbfmrXma+
      YQtNJny8/NwLnL8yxGba0/XOOdh/98Pka686cV280k+uQUt8foSSbXdxS1MBs4GFPRyDkTiv
      dA7zje+8znMnBrj/tmb+5AuHuHtvPfm5etTqpQlbr9PwsYMtfOrQNv7mR6c43TO5ov9HUa7O
      NzoaStd1M+rdVFotzPoj+JfsGCeRSCmoAZVaIhH2kVfWiCYVIhJLosvRIr+rVc0HInzrsWPk
      GnP42v17FvRwlSSJypI8Pn/PDv7pZ53MB1bnf7bgIN09cpnD54Zpbr+Jg3vbVvWQ9UZvzOXc
      xU5iiRSBQACbtQSLsYTB0X5S8XkCmjiHdl3biBVFwReKcfjcKK+dHcFWZOZzH95Be511VW9c
      SZI4tKuWXKOO7/y8izl/hHv3NS5rGKMocLJnkt96cN+arCwtBVuhCUOOhllfGMtSjl3SmKkr
      VnFpxszdWhezqUpMsVdQl9bRUWnkF+eHufu+ewDw+CP85ePHqLFZ+Or9e5aUlPe2jmp6xmZ5
      9Pnz/M6nblnxpHjBSfDZF58jWVVN35lLHLr7LmqrbJtnEqzIjA72k2urRZWMUJifS0/3Fcob
      24h7JolqLFTbriZ+fbvhv9I5zCudw9SUWnjwA9toqylJ+1h7wD7Ht398ijt21fDJQ21oltiT
      DE56+PaTJ/m737lvyb3PWvC3Pz5FfXkBD9zWkrYyZ31h/tcPjtNeZ+XhD7Uv62UTjiX4H987
      zF1767nvlsYVvRwWFIB/zondedUN1phXtLkEsAiKopBMyQQjcV44NcQvzo9RY7PwyUPbaK0u
      XtO3rHMuyLceP0ZJvpE7d9fSvEgGZllW+KdnzlJZksdXPnrTmtm1FJ47OUDP6Ax/+Mhtqy4r
      kUzxs2P9/OL8GAc7qnhohatlg5MevvX4Uf7os7fTWFG47PsX3gcosrG9aH2WvNabw+dGeeZ4
      P6FIgl2NNv7oswepK1+fbX5bkZnfe2g/v/t3L3NxyIUu58ZvvJSsEI4mKCvKXRf7bsS26mJe
      PjNMSpZRr3KBY9YX5snDV6i2WVbc+AGaKgt58PZW/vGnnfzPr9yJSb889/C0vKLlRJjunhG2
      dbSj3eAxZvFEipc7h3F5QvzpF++gtSa9viVLocpq4U+/dAcl+SZsi6xiyLLC6d5Jmiszn6vf
      WmAimUzh8oQoL16dIHVaDYV5en7rwZtXPdT8yC1NdI/M8MRr3Xx5mb1kWprr8OAIdfXlDAxN
      pKO4NUOWFf71hfPkaNR87w/up6U6M41KJUl01Jcu2vgBVCqJW7dXUWQxroNlN8ZsyMFaYE5L
      gMzQlIfCPCO1aXBrUKtVfPX+mzjT51j2Slt6egCNFrPZglqefScQJh6PE4lcf4kqnWPspTqe
      SZLET48O0Dcxyx98+mZUSoJQaGXOXct55tt4p4d44fWTmGxNfOyu/Zw79irjbh8lNQ1MXDwP
      eVZ+9RMfvW4PqshB/uNff0ROQSmffPBXcA50cuKSHX1+MZrANLO+GA987vPka9a+butsefSO
      TrOz7pdDxpU881T3GG01RYRCoUWfeT3e+0y9Gr543w7++ZlOrHnaJe+5pEUApRY9J0+epn7b
      rg0bEPPGuVGOdk/xzS/eserueyVMxyLc94kv0H/pBGazmaL8PEamPeSpAzQdfIi86BXQGDEb
      368AZX6EtkO/hiF4CY3ORGFRCVJqhDyTFnPpXu4t9jEQ1FFVtfYhqdvrS3n6zT5yc1deh8mk
      TP+kj9/+RAtmc/riJW5pMzE05eWx1/v57589uKRVtrQMgfJLazhw4AC2gsx30+9FURQuDrt4
      7NXL/N5Dt2ak8QPkmUx0nX4Df1yFx+PBPeenqbmR2aDC9JU3GZ7yYtAt8CY1lzPV/QZjTh+x
      kI9ZtxtbXRPBQAifY5A3ztmpLF6fDbL6sgJmvWEC4ZVninDNB5EkqCp9/07vapAkiU8daiMU
      jfPMsf4l3bNxXtFrhN3t5x+ePsNXPnpTRg99K61tZ5/GQl5JOUoiyu13fZjxSRd79tUSnnci
      6yzo1Qu4VmiKuPfDB0BfgEGTovmmg5gnp8i37keTDOKNSZQZ1meDLM+kw2TQ4pgN0FK9snxE
      F4acVBTnLXvFZinodRq+/uA+/vjRw7TXldCySADNBl+zWR0ef4RvPX6M+w80s7+tImO7qABI
      KsqrajDrteTm5qLRmWhoqEevVVFoLafYcoMxqyRRVFpBkcWI0ZSLVqujpq4ei0mHyVJEhXX5
      698rRatRU1dWwNDUyifCF4Zc3NRclkarrqWyJJfP3r2Dv3/6DKFI/IbXblkBBMIx/uqJE+zb
      VsGv3Nqc2ca/xWivK6F71LWieyOxBONOL7ua1iadI1wdCn1oTx3VpRb+7cULN0zxviUFEE+k
      +N5z5yjMNfDIXenzxxdcpb68gKHJleUM7ZuYxWTIoTB3bcNsJUniNx7YS/eImxPd9gVt3XIC
      SMkyj796Cfd8iN/+5D50a5w2JBuxFpiQVDDjDS/73kvDbnY2lKYtoutG5Jl0/OcHb+bR58/h
      9ISue82WE8DPj/XTNTDNNx45iD5HNP61wKTPodpqod++/JSJ3SMudjWtn4vNjoZS7tvfxD/+
      rPO6SX63jADmAxG+//JFXjg1xB8+fBv5uUtw2RWsmNoV5Ax1zQeZC0RW5LS2Gh68vRWVJPHE
      693v+2xLCCASS/DYK5d56kgvH9nfSHWpJdMmbXlaq4vpGZtZ1j3dIzPUlOZj1K1vUI9Wo+Y/
      fXwvb14a58KQ85rPNrUAFEWhb3yWP370DWZ9YT5/zw7u3F2XabOygtaaYqbngkSXEe98ecTF
      za3lGVmUsBWa+fw9O/nes+euyWK+aQfJgXCMJ9+4QmevgwcOtnDXnvqMxMpmK/ocDdYCEyOO
      edpqSxa9Pp5M0TUwzcdvb10H667PwY5qukfcPPr8OX7/oQOoVNLm6wFSKZnTPZN84zuv4wvG
      +POvfpCP7G/6ZeNPhnnpmaf413/7IYEUxObHefRfHuWFI+c4+dozfPfR7zMT3LoHPqwXGrWK
      Wls+fRNLO0Rv3OmlwKynIkOuKHDVs/Zz9+xgei7Iy53DV/+WMWtWwIw3xD/8rJN/f+kij9zV
      zn/59H6K3+UmHA36mPEnqasuRdLmoJXA0TPMnZ/7Err4HCFVLp+5cwcjrvQcrpDtdNRbGZz0
      LGk/4PyAk7baknVZ/rwRuUYdX73/Jn7yix4mXL70CEBOJQkEgmt2llQ8meLVzmH+6LuHMeq0
      fOtrH+K2jmpU79ndjYZ8OJ1O9EXVVOjDOH0xjAV6hi8PEIimiAd99Iw6sZiy6yCPtaKxopC+
      iVkWa/9vOyTubFi73d/lsK2mhI8dbOHbPz6VnjnA3Gg/o1EVDdW1FGnTt8MXiSV45lg/fROz
      eINRfvfT+2843swvrcZSnODSuU4KW/ZTrMyj1O/HeukE5XfciT42S++kn+Y0JZbNdsqLc4nF
      k7jnQ9iKFnZrDkUTDE7OsaPx4Dpad2M+sr+JM71TqxOAkorT29uLUWdADs8TjsbJN+Wk7YSY
      vvEZnjjcze5GG3/+pUPocjRLOhWkbdfN7/otRdvuW67+qLey22IllUywdc89XD8Urh6hNGCf
      oShvYc/Q7hEnzVWFaFXSup80cyN21FtvnBt0qcxOj2OfnkFvsbGtoRJIT1aIRDJFV/80zVVF
      FOaJFO0bkSde78YbjPKbH9t73c8VReHvn+6kyGLgkbs61tm6G6O8dbLRqimyVdHesYvW+op0
      FPcOWo2a/dsrRePfwDRWFjI46SEly9f9PJmS6ZuY5ebW8nW27CpyzE/f8NU44XjYy9E3jxGI
      JnGN93O+dzQ9cwBJUqFdUToIme//0//BUrOb+z5yByF7N0++eIqqlpvQePoYckb5zBc/R2GG
      0gEKFmdbTTHTcwHiiRQG3fvbgMsTIhxLrLv7w9t0Hj9B72yU1oZKzp84SlFtI8ffPEY0FsGS
      CmduGdTjnGDYPkpK1qHWapBkcI3NcP8Xv0BO3IO2sJJH7mhlZG7jjBkF78ekz6HYYlwwU8TZ
      fsc76c3Xk8GLJzl25BW6Rr14Z1zEkzIt7e30njvL5NQUecVltFTkZU4AOXojZrWO9v23EHWP
      4Zr3YsjXcfYXxwnLOQTnnBy9bMdmEbu7G52GigK6R9/vFyTLCpdGXOzblt6h8VJo2nkr+27e
      zz137KXcZmVmeoJINEEkkmTPwUMkXH280OvNnCuEOb8Ys0UmGY9i+9B9FOWAqnUfsmGEkqp6
      pMg8rkCKCtPK4k4F60d7nZWzfQ4URbnmTR+JJbC7/GzLQPIxgBxjHg0NeTQ0/PLAws/WNl/9
      oekzQKZ9gSQVFbXXnqZY1/iWgboS6sVy/aagqbKIp9/sI55IoXtXDEaffQ6TYek5ejLBpnKF
      EGxMyotzmQ9EmPFdGyF2acjJ7nUMflkJQgCCVaNRq2ipLr5mIpxIpugZn2VPc2aWP5eKEIAg
      LbTVFF8TIeaaDzEzH6K2bGOPY4UABGmhsaKQK6MzJFNXN8R6x2ZoqyvBbNjYjodCAIK0UGPL
      xxeKvZOI6tygk456a4atWhwhAEFaKMwzkGvMwTEXJBSJM+700l638QWwaUMiBRuP5qoiLg27
      AAWVSqJ8A5xqsxhCAIK0sa26mGPddiQJdjXaMnqg31JZuYVykoHuy0y45/BMj3L8+DGm5q6f
      fUuQHdSXF+CcC3Ls0sSSAuU3AivqAZLxGAlZora2DncoxEwgwYEDtzIwMEwqvyFtATGCzUWJ
      RU88mSIaT9JUkb+hgl8WYkUCiIZ8+OJqLFqJeDyOKhVnzjODrDJu2BNiBGuPSq0m36wnmZIp
      zjdviozcKxoCmQusVBTnMe2eJuwPUFHXyOxMgKa3osEE2YksK/hDMaKx5JolSEg3aQmJvB4b
      +aBswdox5wujUkkUrHH683Sx8afpgg1NcN7JyOQMyAlOHzuColK/0/jtQz0EoinOHj/Mm2cu
      LZo+JRMIAQhWgYJzxsfESD8DF06hybdy4tgJAKJ+J68882OG3VFmwwq7tzcuUlZmEAIQrIjQ
      zDjPHT5NY3MLGpVEKAl1NQ0YNElA5tXnnkefZ8Y1N0tkdoof//xV5A3YBQgBCFaEqaSGj965
      j1NvPM/JkyfQGiw88+P/QFtQxfj4BLfceQ9NtdXk6xRSaNHpdGzERSExCRZkNaIHEGQ1QgCC
      rEYIQJDVCAEIshohAEFWIwQgyGqEAARZzcoFoKSYHBnG7Q0Q9jg4cboTpyeYRtMEgrVn5Rth
      iox/bh5/KglzbqIFVmqsVtTS1eJSqRQqlehgBBubFbVQr9vOkN2NXn81ca2lvIycWIC+wbF0
      2iYQrDkr7wFScbovXcIfl6mvrmByapqapjZK3jq2VLhCCDYDwhdIkNWIQbogqxECEGQ1QgCC
      rEYIQJDVCAEIshohAEFWIwQgyGqEAARZjRCAIKsRAhBkNUIAgqxGCECQ1axCAApzTjtjU27k
      ZJSBgSGScvoMEwjWg5ULIJUgLumJuKfpGRoiP9/I4MhkGk0TCNaeFfkre912ZqNa8tQxcssr
      CfnmKCkpZX5++J2jkcQRSYLNwIrjAeR4kKMnOjHnFVFuzWVkwkFt804qis2AiAcQbA5EQIwg
      qxGrQIKsRghAkNUIAQiyGiEAQVYjBCDIatZ0mSaZTF7377IsLzlrXKavfXuRbCmnnmfa1rW6
      djl1sNnqa82WQW+EoihLqiBY3nLqWpS7nC8007auVbnLbdTAkoWVyTpQFCUzAlgOy6mkTJe7
      mWxdq3KXI5bllrsmZW50AQgEa8mGmQQrySinTpwmvoAcXZOjdPeNkIyHOXv6JMN215LKnZ8c
      4dKwnesVm0rEuHLxFC5vnLGBbk6fOo7LF1tSuedOHScYu/4cZ9YxxpnTpxhzuBh6+McAAASI
      SURBVOk6dYKuS/3IS3jNyPEAJ06dJ7nAtaP9lzlx/DSumWnOnjlD98D4kmwNeux0XR65/ofJ
      KBfPd3G68xIJOcX5Y6/iDi2hUEWhr+sEruD168DrnuLM6VMMTTjpudDJxd4hlvKqlaNzHD/T
      ff36UlIMXLnAsaNncEyPcfr0aQbHnUswFjzOYboH3u+suWF8FUI+D/kFJpwzfvyT/fjCMvX1
      FUw5Z2nf0UFpZR2hkRHCnin8cTVFqiV0h4qCKxhHq8SIe6boHHSQl1+MLuFBMttorq2gvrYS
      b1JBlmWkq7csXmzci8Gcx9S0F3VoillfhKr6Whxj4zR17KKorJqkrKBEZ8it3Y0uMEYsBYZF
      atszM0eBRce8P8BkXw9RRUNVeSFOT4jdu9qpaWhBZhSzpZimBglPeElVi3smhF6tEI3Pc+5E
      L4biEiyaCBG1hbbGara1NDE6OYvPNYkhN5dEavEy5WQUcgvxOiaJSkGmZ33U1NQyNjlNU+t2
      ikrKqE+mCCtJpuZ8FFYWoaAgcePvzTE1R2GehnA8QG9nN4rehK1Qz1xYYcf2Zhqat6EMjoKs
      LO3Leos5bwKVHMfvd9FzcQST1YYuPr9xeoDJ8TFmPT4cDjs5pgKqCvV4Q3Eat29Hr1GTTMSJ
      x+OgNVBRWcW827FomXIyimNijMnRUWaDccobmlHiEVS6XJpqK1AUmVjsarnBqExLfSlzc4sf
      8jE1OorbH8YxNYqiNdBQVYo/GKS8rol8k47piVHkHAslpSWE590EIwk0S6jpKfs4njk3docT
      o8WK1awhEE6ybcd21MDI4ACF5ZWkAnO4/UkqbMWLlqmkYkzY7cw5J5icDVJa2YBajiKrDGxr
      rIZUhIHRaSqrynFOu3BOO3DNzCxart81xsTUHBPT08hSDi2NFQS8fooqmyjOMzA/PUEAI6VF
      hRSWlqMO+Ygs0g0qisKUY4J5t50xxxx5xZVYdBBJSGxra0alyAwODFJWU0vYH6S+uZmg17N4
      HSRDjI9PMO2wM+OPUlnbiJIII+nyNs4cIBgMYDabCQR8DPX0YSmvpaLYglqnQ6NSMW0fZmY+
      REVNAzGvE3WuldLC3BuWKadiRGMSxhyZmUk7fZ4oO1pa0EpJjEYjqUSEgf5BUhoTteX5jE95
      aG5pRLtI7xIMBjCZzISDQUaH+8nJLaG2ugxFltDptMxOT+CY8WKtqEWKzCGZSrAWmJdRB3P0
      XRqitL4Rq8WI1mhEDYwP9eILp7DZSnA6XZgLrNRX2W5cB8k4kYSCIUeNLzBNzwUnrTe1Y9Ao
      GIxGlESU/oFBFLWBpuZGiAVIaXPRL9JbhQJBDLlmQoEAzokhYhoLrfXlxGUNRp0G74yDielZ
      Cm1VmKUInqiKukobN5rHKopCKBTCbDYRCLjoPjdGTVsrBaYcdEYjkpxiZLCPUAwamuqYGB2j
      oq6JPIP2xnUQjxBRtOilFDPzDiZGvLTsbENLauMIQCDIBBtmCCQQZAIhAEFWIwQgyGqEAARZ
      jRCAIKsRAhBkNUIAgqxGCECQ1QgBCLKa/w8l0HIaVeoxxgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit Histogram' width='192'>
      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
      EINNUiAx0P4XpccSU5h08ogAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit Whisker Plot' width='120'>
      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
      iAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Return on Capital' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Score Vs. Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Winnings and Profits' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
