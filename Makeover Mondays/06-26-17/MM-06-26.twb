<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0515.2100                               -->
<workbook original-version='10.3' source-build='10.3.0 (10300.17.0515.2100)' source-platform='win' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Data (German Car Production and Exports by Month)' inline='true' name='federated.0r0wd4a197nxxh19osn491q58ren' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='German Car Production and Exports by Month' name='excel-direct.0svo2oc1djut2z1d8msoh0vz1zkx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/~206404804/Dropbox (Personal)/Data Science/Makeover Mondays/06-26-17/German Car Production and Exports by Month.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0svo2oc1djut2z1d8msoh0vz1zkx' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:D445:no:A1:D445:0' header='yes' outcome='6'>
            <column datatype='string' name='Car Type' ordinal='0' />
            <column datatype='string' name='Export or Production' ordinal='1' />
            <column datatype='date' name='Date' ordinal='2' />
            <column datatype='integer' name='Number of cars' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Car Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Car Type]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Car Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Export or Production</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Export or Production]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Export or Production</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of cars</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of cars]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Number of cars</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D445:no:A1:D445:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.517888' measure-ordering='alphabetic' measure-percentage='0.482112' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (German Car Production and Exports by Month)' name='federated.0r0wd4a197nxxh19osn491q58ren' />
          </datasources>
          <datasource-dependencies datasource='federated.0r0wd4a197nxxh19osn491q58ren'>
            <column datatype='string' name='[Car Type]' role='dimension' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Export or Production]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of cars]' role='measure' type='quantitative' />
            <column-instance column='[Car Type]' derivation='None' name='[none:Car Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Export or Production]' derivation='None' name='[none:Export or Production:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of cars]' derivation='Sum' name='[sum:Number of cars:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0r0wd4a197nxxh19osn491q58ren].[sum:Number of cars:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0r0wd4a197nxxh19osn491q58ren].[none:Car Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0r0wd4a197nxxh19osn491q58ren].[yr:Date:ok] * [federated.0r0wd4a197nxxh19osn491q58ren].[sum:Number of cars:qk])</rows>
        <cols>[federated.0r0wd4a197nxxh19osn491q58ren].[none:Export or Production:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0r0wd4a197nxxh19osn491q58ren].[none:Car Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0r0wd4a197nxxh19osn491q58ren].[none:Car Type:nk]</field>
            <field>[federated.0r0wd4a197nxxh19osn491q58ren].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d93cjV3qmn0IhB5IACOacyU7qVtZIoziSbM+Mdrye9a59HI53z+4/tsez
      Xttj787Ys56xRq2sVnerA7ubORMMAAkQIIhYYX9ADi2J3SBZJOs5pxuoi0LhAvy+qrrhva+g
      qqqKjs45xXDSFdDROUn0BNA51+gJoHOu0RNA55hRWHh0jxtf3ySeebojpQ/2uHnjKw6SqZqv
      B4KB7zyG8emqoKNzWCQePFrhrffeIh4KIFtF4ok0W4EgPQOjHASWkKzNOM0y8XCYX//7R3zw
      J39Oh8fCw8kpukfGSIS2US2NiOEp4qZmrt9b5lKbBburgY01P0NjY2wtz/Lx7Uk++IN3sZkM
      KKKVlbkZYjvLzB40c63LRsfYqJ4AOsdPdGeDr2/eYWLYx//85U3evegk2fIS1z/6ZwTJR0Z9
      hCER5vl3fobX24yn0c7Mzc+QvT189NG/Efbv8Cd/8RckwjD74A7PXuji4zsHDDlTNHb08E+/
      /Ad8nWO4bCbu3LvDULOFGX+Upp4r+Dx7hBva2Vl5xNrOlp4AOseNAY/XjYpEcOeAqxd6Cce3
      mJu8w4Wxq4QWHmCwemlp89HV4qG1wczmTpS27k4+vv2Att5hWpracNnMSLYGXn3jHXrtUQSX
      iE/Y5fbDRcYmJlhfWsVgdmJT0zxa2adnYJS5ufv4LvQRe7BMs9dDW5sdQR8H0Dlp9jYWUNyD
      eGzH/9mFBEin08RiseOvwREhSRJGo36B0/l2NHMFuPv1lwxefhaH2YjB8PSdU6FQCI/HU4ea
      6ZxlNNMNahEkrv/+Q5Y39wplSjrO7m6QRzOLKJpIU52zhmbuEeKpMHaTi2AgxkBn9swd357l
      b//lPt5mJ70DAzhMxf3XZydZi0gM9XQwt77JSxeH+N3nd3nvrVdP6BvoHDWqqqKoKqoKipJ9
      rigqkqwgKwqyohbKZVlBUhQkOfs8IytkJJmMpBT2l2RVOwmgAtP3JnnhxxOFMrPLxwuvvMxg
      uxtbRU0TyTQmkxmDasBiyODfDmK2O1BVFVmWURSFTOYpR1p0aqKq5AJRLQtEWVGRFaVsW1FU
      JEVBlrOPUi4AM3IuOHOBK8vZR0lWCv8ysowkFd+rKCoq5QmQ/QwFNVcvULPBJJRWOPcoCAjZ
      B0BAEDR0BXDZPTS1x2jzuQplKnD3xsdERyZ449VmDGJxf3drO2Joh0AkhtfrZnl9l+YmB4Ig
      YDRm2xEmk6n6g84wGUkmnZGzQVESnHI+APNnRal4RiwNuHwAF/Yt7FNxlq0R/NnH7Fk6H6SP
      IxuEAgi5OM0F5pMgCAKiKH73jo9BEwmws7XO/dl1nr/az/SjNbpfGwXAZG9ipK8LjMZc1hZx
      ulxkMNHjcaMKKj5vJ6L4pD/j2eDfby+xsBHOBqGaD8bHk41BofDbCpU/8iERhPwxTs/foWYC
      xGNRJMGE0yISiSVpbHRxEI1gtjsR5DTxtEyjy1UVlE+KIsuMjo0Siqa4dKGzUH6wNcuDtSA9
      PhVJAWNJk91qd9FuL14tTMbzdbavRSojA9kgzF/mdb6dGgmQYWtjm3AshtNqIpNOsdvgJRqL
      IQhGxEwUVTDSM3wBt9NSl0q0dPYyefsmir2JZKp43+5oGeQnb3sI7EQxPflVTkfnsdToBjXR
      2GjD19aFwWRlYqyXnUCU3oFBnGYDRqOBWCKNKNa3B1WtarlAYneF+UCS/Z1VUnJdP05HB6iV
      APIBd+9Os7O7g5k0X92aoXegldnJuyRUEUWSMaiQkesbkaoik0wmkGSlUOboGKfdGKFz9GpV
      L5COTj2oDivRwdvvvVPY7B3OPra3tOZKBo+kIn2Dgyxt7KDmrgLx4CIz62EcvkG6vY7qri0d
      nTqgmZHg7qEJXrjcy8ZGBABbUxs7K9N8/sl1Prt5F0n5jgPo6DwBmkiAdCrJytwUd6a3GR3O
      XmkEk50333kHlxniB/GqHqd4dJcHj+ZIJQ5Y2wygqhKLS6snUHud04wmEmDx0R1ml9b48vrv
      mF4JFsoziSiK6CAdjyJXdGivrm/R3mRmdT3Iyuoisb1dppfWjrnmOqcdTTQtUwf7hCJx3vv5
      XzPc31Yot/mG+cm7bQhmO5aKblDBaMRutRCMxvE2OVhYDuDzuY+55jqnHU0kgLu1kzFTI9JB
      mFi8jQZHcXzB5nDVfI/Xaeb+4iZjg4MohgY2t6I012lc4vSSnaKg8/0p6AHO2g8XDodxu8/X
      FWHqk1+yuTR10tU4VZxZRdjBwQEOh+Okq6GjcTSjCLv12XX6r7xIo92CsQ6jzLoiTOf7oIle
      IIDGBju3v/yUte1IoUxORFhbW+Hzr+9VKcJi4W3u3XtAZH+f7Z0QqDL+ja1jrrXOaUczCRAM
      LJJJKayuhAplid1lfvGPvyWwvUpCKt9/NxhmcHwUUybDzPwsB9EQdx/NHXOtdU47mugFAnA1
      ebl3f4ZXL71QKDM5vfzhT39CX4sTe0VNrTYTD299TXNrD81NNhZXtmn2eXVFmM6h0EwCyCmB
      5g4vFnNJh7/BxO1PfsNm/whvvPpK2ZRoSZYRRDMOh41GcxvrGxFaXdZzrQg7a+S1vaVKtUol
      W17vKxdklgoZSclpf+UypZtUULpltcEZWdFGAixP3+fWw0VGRztYWdhipKMRAKPJQmODA0mS
      q6ZCdPaN0NlX3G72tKJztChKiYa3JCClnHY3r/0tDba8rjddFrS5fXJa4GwwygWpZl7Qnu2f
      EWoq3PJqtuxGSSVzkyYr500+Tu1WIwEkZh88JCna6W62M78SYOLiKItTU7haezHEg+ylDIyP
      j2Ay1Gd6Zmt3P1fGtpj37/LMy8Wem8TuChuRJG4pSKZCEaZTTTItEU9mikFUdvYrOTvKxdUR
      8mfRKkG6JBfOqPnjqKpa0JzndcHFiMw/PCYmKoLy+8kvhcK+31vhdsiQrJEABnqHhlleXmNr
      J8blkTYmHyzQOTjC3tYqydgBKhCKxGl116ef3eZwcRBPMjA4RJPTWqyctYEf/vAtIhuL1CnX
      zjS/vbXI0ma4rKy+AVnEkBUAH7KG2qPGOVVlfXWdnv4BRGTSaQnRKJKRJBTFwOjEODaL8amU
      +LVQEGltbcVuK963i2YLs/dus7Of0hPge6AoKqLBUPbPYBBq/xOE3JlVeGox/Gmm+gogp4ns
      7RFJzTPc7WNxdYcLF4ZYmp3G29bPXnATwdGMx2Wtcbgnp8XbyPTUI0YuOWl0ZI9taujgpz95
      H0E0UmcFpo4OUFMRZuPaC8WuyCtNPgBGL1zOFnhddBxBRSxWC6TW8O8mGOjMrgr35YMVXG1D
      9LU20Oz16lcBnbqjqfOqwWxFVLJaY1tzH26zxNrCDPPLfn1tUJ0jQRMJMHP3Kxb8u0iyAZcr
      O6VZEM1cvHQROZ1ka8NPpSIyurPJnXsPOYhFmV9eQ1XSPHg0e/yV1znVaCIBuvqHaLSbSCtG
      mj0lSyOqCgYxd5dWcQXY2NljoL0R/8YugcAGe6Fd1gO7x1hrnbOAJgbCPv3XXzIfNdLmbSAS
      PaDdbQfA4u7lp3/YimA011wYS0BAVaHZ7WRheZuW5sZjrrnOaUcTCfD+f/nvj33NbKnd29Tu
      bWB+Y4/RgT5kIYPRfIDDpk990DkchQQ4bZPHrA3NXGhoBsCIkc62rMFUKpX1jJUkqfD8vNCU
      2SQa1VfGOAwFQYwkSSSTyROryIZ/g47O+nWw7u/v43LV1hPr6OQpXAGMRiNOp/PEKrI5fZNv
      Hrp47oUfMNTlzRbm1pqXZAXTIQ3v0un0iX4fndOBJtoAAOPXnqMtIWKzFld2iAfm+Oz+Opuh
      CH/6Jz/DWtIQ3gusM7caZGion+hBkp52L/NLfoYH+46/8jqaIj9rVM39p1Jur5R9nn3UTAI8
      nPqGWNiKvUOmM2eQYbTY2YnEuTDYXTUKHNqNMjwxhjmZYG19Gbcd5lf8DA30ArkfQRty53NL
      /vfPThrNBR9UTW9WS+frK0qVp1d+bn/lNOq81VImIxfcbwo+YYqKrGbtk/I+YaUON4qSrYNm
      EmBi5BK//vAuf/xscfFdVZHxtrYxMDSMsSIBGt0uVqYmsblaaXaXL4yl5OaSy3Vewfq0klv3
      hlILrUIQUnJWLPXzKvHpygahXDLNOq8LyAVtfj5/6RRsucIrTFXLPMHyQZo/K5fOxyudYZ2f
      Cl3qZPO0CICYO6NqIgFUVeXevRkuj/u4+2CNN1/oB8BgbcSuLPJoZoGXnr9WdhVIp1NkVBNd
      3kZEk5Ot7X1cDnPBM8pgMJw7o+wHSwHWg9FcIOYM65SikVylMqr89WzY5YMsnywI2anPZcH4
      1JGYn5X6lIepA5qIkOk7XxKKp0jvCvSMFzUGmf0tPr1xi66eIZ5/7lpZZdt7hmjvKW43NXiP
      r8IaZd4fZj0YPdR7BEHAKApwTh14alokPbwzSdJgpbvZzsJqgImLYywsLjE2eoHd9Tk2Iime
      uXIFS+V9yRMyfu0V0qkkc/4QZlPxmCZrAy889yyhvZPrntU529S4CBkZuziOw2oitJ/mhSt9
      bIUlutqbUWWFhCIy3NlMZP+grhWJRGO0tLbisJoLZZlUnO7RZ7k83Pattps6Ok9KjQSQmZ9f
      Y2h4CIOSIRI5wGQpXigy6RTxRByxzq6MisHK5StXaPEUb4EsTjdTNz5kfutAN8nTORJqeITJ
      pBL73H84TXdvF1sRmc4GAf/6Joura3R3thDHjsdprnG4J6ez1c3NGzfYCO4DICUPiMtm3v2j
      D/ijd17lnFsA6xwRNRRhFi5fe7awOTGWnWF59dpzhbKGo1h0WQA5HmDRH6G/w418EOB//90v
      iVs6GOrr4p03XtOvAjp1RwMdUUUMFidNjuyVxeLt4y/+6q+Z6HLja+vQl0TRORI0EVYPbn7C
      wwU/+5EYkpofvBJIh9cxtI6yvzZFomJMa2n6Pp9++jn+tXU++vJr5GSU//Ob3x973XVON5pI
      gIHhMdwNDpzeLsYHihZJjvZRxOAM5pZBbBW3P5LRxouXR4gepGiyG1jdCOD26mMBOodDEwNh
      n3/4/9hMmrBbTGwE9mjoza5EIYhWfvij92u+R0jHuT+7R4uvA4fTw9JqCG+Tboihczg0Y5Bx
      WBRZIpmWsFrMgIosqwgChekP59Eg45efPGJ547t00dV/boHy+Tffb9BF/XbvcjX/avmxqksf
      81m1315jp8r3qCUvqRX1K99foGQ26Gm1SEom4jXLT+N3eVouNe3Txz75P3T+j1+2BCIUXq+5
      iGzudQGhGEw1j1GyLUBxRpv67fuWPCmrS8VrtRa5LV/KsbhPLSqP/Tg0cwVYnF+gf3Cgbsv0
      nccrgM7h0UQbACC4cJev7z+sUoQpikIyncFuq+9SjDpng/w0bqXksXT59tLp14XyvJ5A0Yg/
      AEB7fz/WhBmhZFpibOMhv7u1Sih2wJ/96c+xldR2beY+61GZoZ52Ztc2eenSEL/77C7vv/3a
      CdT+fJJXWdUMQLk88BQ1H3jly7VX/qsM2rxAJi9+Kdcj5IQtpZoGVUVVijqHfFvlcWgmARaX
      Z/Cvpum4YGWwqwkAs9ONatzmpSu9VQNhybSE0WhEUEWsooR/K4jV4TzXFkkZSSaZlstFJwVR
      Sl4PkD/7lfoBlBtfKLlALQ2+siAt2Q+yt/95v4CCyAUK4psqE4EC+baKUHK/Xz/hS55vO5xm
      EmB06AKL/kmeudJXKFPlDOl0CqPVXjVg0eRrhd0gO5EDvF43y+vZbtDzbJH029vLLG6ES4Kv
      aGhR8Jco6STJluXFLtnyp2uDCQgG4VRJCzSRAIos82BqmddfHuTOvWXeenkIAKPDx0BrA6G9
      aNVlrKGxEdVow9PUAKi0NHchnvMZcxlJyaq2oCTidb6NmiPBsWiYvf0DZCnFTiiMoqocxPaz
      NjrpJPFEfRecmpu8SSga5ctbM3iai2v5JHeWuH7zLht+P3JFBlhsTlqaPRiNRoxGE3a7FYvF
      go7OYaipCNsJhAnvR7CbTShyhoN0N6HAOsODE8SjW+zuC4yP9NatEqPPvMTa6joGlxe3qzjN
      2uxo4rlnrhAI7tXts3R0SqlxBTDhdJpobuvGYLIyOtJNKmWgs82HALS0d2I1HsVdXrZxVjoq
      kY6HkSxevE6D7g+gcyTUEMQccO/eLMGdIBZDhq9uzdLgUJmZnmZ6fpmluWnm5mfZO6jzupuq
      QjKZQJKLTgCO9gl67Un6Jp7DqonWis5Zo4YgxsHb771d2OzJtkdp+2GxrH+4/hXpHRhgyR9E
      UbMNt3QsRCQp0zZ0iUb7+erN0Tk+NHNe7ewfpanJwqPNCCPdHpCT/OYf/449g4+B3m7ee/t1
      XRGmU3c0oQdIxg9YWZjlwXyIkeGs47u5sYM/+8u/ZqS9AbfXV+USqcgS8UQSRZFJpzOgqqRS
      6ROovc5pRhMJsDr/kMXVdW58+iFzqzuF8uTuKqb2CyQDiyQrFGGLMw95NDnJ+uoGn926TSax
      x28+/PSYa65z2tFEAhzs7bId2uftD/4LlwdbCuXOjgk8mU18A5fK5gEBqGY7l0f7OEim8bpM
      LK8HaW5tQUfnMGiiDeDrGuCKowWkBMlUBpy5mZ8GE1dferXme4xSgq8ng/T3DqCKYk4RZj/G
      WuucBTSjB6g351EP8NFHH7O0olskHYZCApy0IkxV1bqJYSCrCDtvDjFKeBk1qY+aHwbNXAFu
      ffoRvVdexO2wYqzs8nkCzuMVQOfwaKIRDNDU5OLujc9Z244UyuTEHqsry3zy5Z2qyXA6OvVA
      E41ggK3NWZIJNyvLu/R3ZNdeTOyu8Lf/+BVjI50kpas4SgaElx5+w2ZcYKirlcmlNV6/Osav
      fn+Tn/3ROyf0DXROAlVVy0Q6ecFPRsoqyCRJKdonVewnyRqSRLq9LUx+Ms1rz7xUKDM5vPz0
      P/4xfc32qm5QDEaMZFAUEY9DZHUjiLel5Vwrwo4bVaVMSVZQm8kVwScXvblKtbpSmepMLVOx
      VR5PKtg2yYXgze9fcLXJSyBzC1QIFc42tZbB0EwCpBIqvg5v+f2/aOb2x/+Cv3eEN159pWwq
      hNXhwLgfZD+ewuv1sLQSwus+34qwRCpDLJFBKvHrkhQVRS63RypocqXsmbHo61Vqq1RuRlcp
      n8wHain5AMzzpP5e36czxGAw1MViSRMJsPDwDjcn5xkeaWd1aYuxruyK1EaTCbvNRjojVf2A
      rZ29eNq6MRtNqIJKZ3tvXXuRTiP/dnOBpc29MlXYUQQfkPX4OgOKs5oJsLO5RtJgp7XRytpW
      iN6eLsK7QRo9zaRjIbbCSfp6OxHrFHBdg6P8hyYPgVCUtu6uQnlyd5XtWJpGOUhGoUwYbxCN
      WHJXBIHz63FVjoDpSLQaZ5eaijBJtRAN+okGDTQ6TKxs7pCI7WK1N5FMSRikGHv7KbwN9Vmr
      x2K1c//2bdydvcglegCrt5f/8Edd7IdDmDTTX6VzlqipCFOVGO62XkxmC21tHjKyiM/dgED2
      LCxYGnG76qy/VWXC4T2SaalQlIpscvPeNDMzU0jKt7xXR+cJqb4CyAfMza7h9KVobzDx9Z1F
      hseHmX04h60hjpLYRBFdeH3NuKz1a2RaLSb2KhRh9tZRXpLWMDiuYNFEa0XnrFFTEfbDt14v
      bLb3ZiVhza++kSs5AjkY0NbZSXx1g1TuAnCwNcNn9xZpaB+mz5RAVZ11XzBJR0czd9YNbh+d
      HY1sb2bnsth9A7S5jGytLbLi39ZF8TpHgiYSYHfbz8bWNqF9A2MjWUWYIJoYHx8lnUjgX1ut
      SoBI0M83dx8Q248yu7SKKqe5/3DmBGqvc5rRRAIk4wdE90JMfnML/85+8QVBQDSIGGqMeGzu
      RhnqcOPf2GUnuEk4vMPmTvgYa61zFtBE03Lx4W3urx1w8dqLdHqLNkfmpm4++HELgmiiVve2
      SnYYvNnjYmE5gM/beIy11jkLaCIBLr70Jj2XsusMOazlBtwmc+3u1o7mJhY2wowM9KIIEmbz
      AXbb+Zr6UImqKkiSPv/pMGhGD1BvzqMeYPXmrwmtz510NU4VmkmA9dU1Oru7dIsknWNFE41g
      gKV7n/F3//Qr5tdLXA5VFVVRSOvTmnWOCE20AQBGLj+DLyFiMRfbAPHtGT6552crHOU///xn
      WEsawhsLj1gNpRjq7WRpM8CzE/18/NUD3nztxROovc5Joao5e6QSm6Qyx5rS7RKfsPy0bs0k
      wKOZu0R2Tbi6obsl6xFgtDrZO0hxabgXQ8Wd0X40hsnixIgBpDibgR1U0aQLYo6ZWsFXGnhq
      zi6pYNWU0yjkhTEF8UyV91dRtSXLarkmoUTdldcuFDzKSoK81LcsX5e8Iw5klQuaSYCJkUv8
      +sO7vH5toFCmKjINbg/dvX0YKxKgpacf594OG7tRvN4mllZ3aG6yn2tBTD6oCgFI3kUxr9xS
      yry/vq9s8NtM7BS1wodMrg4+5THD+HmbpkrlVn3agQKCICCK3z5TXhMJoKoK9+7Pcu1SG3cn
      V3nzxWwSGGxNNIhLzC2u4PF4yq4CFpNIWHQyPNiGIih43WmMlU5654wPv1lmwR8qODWqJYZ1
      VfZ0pbLBEuFMPUVFgiAgCkLVuq5aomYCZNIpVEHEJAqkMhIWsxlJyroyylIGSQGL2Vy3yWkz
      d26wG4sTW0szcOlSsR6RTT69cZvu3kGee/ZqWWXtDR4GGoq9PJZG3R4pnswg5862BkEA8XQZ
      1p0ENQUxi7Nz7CVSeBxm9qL7tA2Msrm2yPjYFSKBZda3Q4xevIbbaa5++xMwdu1l/OvrxAUb
      TnuxSiark2tXnyEUPqjL5+joVFJTENPa5qGlrQNMNp67OkoiAX3dHRiAhgYnkgxmc33PLaoA
      VputTBSf2t/B1jpCp9uErAtidI6AmhZJX389SXhvD6Oc4IuvH2G3qUw9esTU3CKbW0EMqkKi
      zmvxZ1LJKoskZ9cF7JF5XF3jnPNZDjpHRE1BzLt/+F5hs38s+9jV8qMjrcjQ6BjLm2HE3MxP
      KRkjnpYZf/41HLocTOeI0ExkDV96noG+Zb6YjtLf4UaO7/D3v/gHYuY2Bvu6ee8t3SJJp/5o
      poNqbvImv/9qjqGhrMmFxdPLX/3Nf+Nit5e29i7OeQ+nzhGhibCa/Oo692aW+Or6b3m4sJUr
      FUjuLCN2XiTmnyZRaZE0dY9PP/2c9dV1fv/FDaREhH/+138/9rrrnG40kQAmk0g6rfDjP/8f
      vHyxs1Du6BjHuP0QS+sgtorbH9nk4KUrI+zHU7gdIqubQTw+3SJJ53Boog0gmm10dLYTDfrZ
      9TTjaMuOLwiihVffeb/me4T0Ad9M7dLR1oXD6clZJDlq7quj8zg0owc4LIoik5FkzCZTYe6L
      AIhi9lJxHvUAv73+BUsr/pOuxqlCMxZJ9eY8WiRJ21PIBzvfvaNOAc1cAe589RkDl5/HaTUV
      xgKehvN4BdA5PJpoBAPYzAY+//gjVraKJm9KKsb29iZ3Jmf0hbF06o6qqtpoBANE97cwCo1s
      bUQZ6MieueOBeX7xf+/Q0eFmZGy0zCJpdfoe/n2Foe52ptc2eOXyMP/2yTf84Y9ef8wn6GgV
      Va10h8kKYspFMuUmHlltQlbPkM7IZGSlYOZRU88gFYU3ed2ComgoAUxmK/O3HvHSTy8Xysyu
      Zl57600GWhurLJLSkoJRNCCoBhxGmfWtIPaGRl0R9hRUiljkUuWWoqDkg1EtBmL+tVJhjazk
      9s8FbEGAU2GblC8vKLZyyjJFUQtKMtRSz5lqXUOhXCg+Ocwsfc0kgNnowN3uxd1oK5SpgoE7
      X3xIaGicN159BUPJWECDtxl5Z4fdaByv183KerYb9DwrwtaDUYJ7B2QqvLm+9WyYC8TSoMur
      yPK62nxwAtRU1+TIh14+GA8vrsnub6jUvx4hmkiAzdUF7k6tcvFiF/MzfvpbRgEwWV10t7cg
      CIYq8U2T24tocdHU4EIVVFpaZMRj/OG0yM3pDVYDkWwglvjBPY3Kq8xg7gxSsxG8v7dLKBJD
      zqQIBHdRVJX9aDSnNlKJRiLUc3q+1ebg+eevkZadXL5QtEiKBxaY29ojEspaJJVittrxepoQ
      jSJG0YjNasFsro9A57QiCAKiwZD17xKEXPCezcCtFzUVYaHQPuHoGlaTEQMycUllb3eDof4x
      DJkwX389zWvvvk69RIhuXxu3v/wcU5OPVMl9u903wE/f9bG7u6fPBNU5Emoqwuw2A81tXYgm
      C0ODnaTTBjpavAiqzMzcCi6bsczKqD4opNOZshUEEqFVplZDBPxLZORveauOzhNSUxE2OTlP
      IBjEKsp8dWuWRqfK7PQMM/MrtHZ2IooG6t0xLwhqlSLM0T7OYJPK8JUXsWqitaJz1qipCHvr
      3bcKm92D2cfWHxbLOjo6K9/11PT09bO0HkBWs/es8cAC9xe3cbYM0NNg+9beBx2dJ0UzI8Ft
      PYNcGmtncyMCgM3TQSa8wb3bN7g9OY2kjwTrHAGaSIB4LMra0gIzK1FGh7Nz+gWjjZde/QFm
      QSESrnZ+OdgLcP/BDIl4jOX1TVQlw+z80nFXXeeUo4kE2FieY9W/yc3Pr7PgDxXK5XQCRAtS
      OlHV5Fjb3KGr2c7a+g7r/lWie7ssrG0ec811TjuaaFruBTdZD+zxwz/4jwz3NhfKrd4BfvJ+
      K4LRiqWiG1QwiFhMRhQ1Q7PbkbVIam465prrnHY0kQAdA2OYPAeAQkYq7++02mqrvHyNNh6t
      BBgdGEAxZNgO7ONynO+BMMhOItP5/hT0ANn5H2fnxwuHw7jd7pOuxrEy+/k/EVjRrWIPQyEB
      MpkM8Xj8xCoiy3JBzlgP9vf3cblcdTueztlEM4qwm598SNeF5/E2ODDXYd6DrgjT+S40JYjx
      eN1M37/NwPhVetuyjVk5HmYtEGZ5PcRrP3gOsWQgLLq7yezSFoMjAyQSGdpbmgjMPTEAAA2Z
      SURBVFhd26K3p+sxn6CjVR53DlYrnqiU6wskWUWSZVIZmbQkF6Z5500+8uIXKWcGUq5DyN7y
      ayYBNv1TxBJuFheChQRIhtf4xT98wcR4N0mJMkVYeHefS9eeQYns8WB5ngbLAA/mlunpLo5S
      a+TiduZQcoKYUlFLRlJIS3LOdSYbjKU6BFlWs+VljjM5N5kK4U2pbkGqcJ0pqg6KGgVByM9+
      zfkiHALNJIDH187k9Sl+eO2VQpnR7uFnf/pzepvtWCu0LXaHibtffYHH101zk52FlW1afNlb
      nrwiTJLqPWFP2yRSGaLxNOmMnPPekouSwhIpYfFsWPG6mpciFveVSgJdye1TNS0lty0gYCi4
      zgh1M1ABEA0CYtVcmOoPOOxJTzMJkNjP0NLpKf9KRgu3rv+atZ5h3nj1lbIp0elMBsFoobHR
      idFsw78ZodVpPdeKsF99ucDy1h6CAQwcPggfrx0QEA0iogHO2i+qiQSYu3+TG/fnGBpuY315
      m4nu7C2QKBowm0wkU5mqZO/sG6Gzr7jtafIdX4U1isEg1KUD4TxRIwEkpu49ICXa6PbZmV8O
      MHFxlKWlZYaHxwiuzrIdk7l0cQJrnX7s/vErvBLbZ86/y6WxYs9NKuRnN6ng3AkgKWDSxMQN
      nbNEjZASGR4fxWYUCITiXLvQycZuGl9zI4qksBMO4/F4MBvrd6YxmsxEogd0dXfjshd1ZgaL
      k9ff/BGj/R11vZ/U0clTIwFklpbW6BscRFRl4vEURpOxsFrbwNAYQiJEMFLfQTNFMNLX10+T
      01ooM9kcTN/+kq1IusonWEenHlTfAskSsWiUh9OzjPa2sbgWZKgfph75MdmT+BoMxFVbVqRS
      R9p8Tdy/dzfrFGPL3gYZna188MGPEQSROqyWqKNTRQ1FmJWrzz9X2Lx0IRuM1557oVDWdhQV
      MRlRk7usbR8w0OHhYGuaj2/P4Wofob+9iY62Vs75qic6R4CmzqsGix1rbrjX3jJEr89JeHuN
      je0dfW1QnSNBEwkw9c0XzK4GSCVlzNZslQSDkaHhARIHB6wuL1UlwF5gndt3JolFI8wsrqDK
      Ke5OTp1A7XVOM5pIgJ6BYZocFgSzk662YjeoYBAxGgyIRlPVOMB2KMZIlxf/ZojQzhah0C7b
      oegx11zntKOJgbDPfvsrlmMi3gYHu+F9fA3ZniBzYxcf/KQFDMYql8jsisIKggBejyunCGs4
      gdrrnGY0kQDv/ae/eexrRlNtlVdnq5sFf5iR/l5kIYPFEsd+zu3kVUVByqQPsYKMWvPpd+57
      uFo95aHUGs8et2tuchz56UmV76hYahq1qAeQZZl0On2YmmmaSCRCY2PjSVfjWPHf/hdC/oVs
      8AtqWRLUfC7Ueq0YRKUvVE1DqyioOn4uCgWhNB3zdSqdo6RWvF8AQS08L5arZVuli//WPk41
      tQZTNZMAayurdPX01G3E9zwmgM7hKdwCiaKIzVbfwa3DEFi4wzePZnjuhR8w1OXNFubcHzOS
      jMV8uNubRCJxot9HR/toShE2OHEJT8KIueSeP741zfW76wQi+/znn/8x1pLpR+GtVebXdhkc
      7mMvGqe/q4XpuVXGRwdPoPY6T0PehKPUkKPSrUbJnQxL1V75f6lM1jK3yhRELt8vIxUFPPl9
      NJMA03P3CQUMuPsEelqzYnajvYH9lMyV0YGqUeDQboTe4UGsisTm1joeh4GVjW3GRgZyP+LZ
      WuXiOFBVyl1i1KJlkVIRmEVZYjaYMnk1mCSXeHEVBTaFICxRhcklirB8gBetmYqBr+YeH4dA
      TsuQF+Mc4jtrJgHGhy/yL+v3eOvaQKFMlSVsDget7R1Vk+HcPi9bK3OErd7iwli+rI5ALZxJ
      ztfw8W4kzu5+Inumk0r0ryVyQ7lEEVbUz+Y0srkglwuBmA/Oom+XkjPuKhXPqGpxW8gpw+o5
      e1cQQPy+B1TVQ3UyaSIBFEVh8sE8z1/p5O7kKm++mE0C0eam2brM0qqflpaWsqtAJp0kIYsM
      +NwYTI0ExH2cdnPWJUUUMRgMdV1m5TTw2UM/q1t7VZLEp3OJyR5HFOsY0RpCEwkwe+8G4USa
      9GaE3oniWj6pPT8ff/0NvT0DPPfs1bLKtnYN0FqyAESj63wtglULgyBgrKNO4zxQ0yLp4Z1J
      EoKZLq+dxbUg4xfHWVxcYHz0Intbi2xGM1y6MIG5cnj2CRm7+jLxgxiLWxFK/34Wh5uXn7/G
      bjipWwPoHAk1ItjI6MQoLruNvbjMi1f7CexJdHe0oCoqaxt+jKKx7mYV+7E4vpYWHNZiL1A6
      EaWl/wpjvR59NqjOkVCdAKrEzOwK3b3dGOQUOzsRTBYj6XSadEbC1diMzyESCMfqWhFFMDM2
      NoanxCfY0uBj4fZ11sKSbpKncyTUSAAVUVBYWl6jt6+XaNpMV6NIdC9GYGeHvr5uYoqJdk99
      193s6WzhweQkwfABAJlElP2UwJvv/5j333yZM9oG0zlhqtsABjNjFy8WNocHs4E+cfFSoWzE
      Wf8Gp0EUMaR3WViL0NfuRkns8cv/9ffsm1oZ7O3mvbdf168COnVHE3oAAEnKkBGseBuzU6Et
      nh7+8m/+KxOdTfjaOmpOhy7r7z+H/f46T48mEmDyxnXuz64S3g0RS6YK5cngEpaeq6S2ZklU
      rHK4OHWPzz/7gvW1dX7/xQ2kZJR//td/P+aa65x2NJEAg6MTuBsbaO4c4dp4sXPf0XkBcfsB
      5tZhbBU3a4rZyYtXRojF03idRlY2AjS3tB5zzXVOO5oYCPvio98RzJgxGSKsboYY680ucygY
      zPzg7fdqvkdIx7j1YIeuzh4cToGllRBed207JR2dx6EZg4zDoqrZ+SuiaMhtZ7+GIbeA0Hk0
      yPjd9c9ZWlkH8sM0FeIWNS8KqS0eqXpP7omQm/9TS0BT+b6q18s+N7tfrQ69x3byFT6zXOdW
      KpQp3710u/Kz1OLXEHLP8wmQTqeJxerbt3+SxGIxnE7nSVfjWJECMyjx3Sd673cFYL3QWm+2
      Zq4A33zxKQNXXsBlMxWWYXwazuMVQOfwaKIRDOCwGfny0+usbkUKZUpqn81NP7fuTulTIXSO
      BM0kwN6eH0Ex4PfvFcriwQV+8Q//xtJydTfo6tRdvrx5h8DWFp98fQs5GeXXv71+vJXWOfVo
      ohcIwGJzsPjNNK+MXC2UmZ3NvPnujxhobajqBs0oKkZRQFANOM0qa1tBXI1N2fWCchZJmUzm
      mL+FzmlDMwlgFKx4OppxuYr+AKogcufz37AzOMYbr76CoWQqhNPtJRUMEtpP4PV6WFkL42ly
      nGuLJJ3Do4kE8C/N8s2jFSYudLI4u8Fg6ygARquDNp8XtawbLYvH68PicONy2gGVtpZuDPry
      0TqHpGYCREIBMoKVJoeZYGif1tZm9qMRHE4XocAWiYxKa3t73SySnI1ufvDqS+xFD7h8sTgS
      nAgsshiM0poRyCiUzQcyWWw0FS8WnDP1o06dqKkIi0ZThCIb7BiNmESVVUUgEt5ksG8Es8XC
      1uYyTb62KuvSJ6XR4+PmZ59g8bSRyRRbu7bmfj54r5VwaE/3B9M5EmqElQmLWaG5rRvRZKG/
      r42UZKDd50FAoLHBgcXVTENlq/SpUUgmk0hycSmT5N46Dxa32FidJ6OvcKJzBFQngHzAw4cL
      bAcC2IwKX92ep8kBszMzzMwvEwqFaGlvr/uInmgQSCYTZQngaBtjrMXC+LVXsGqitaJz1qhh
      keTgzR+9Vdjsyi3T0/raW1W71pOu3l6W1reRcvEf357nm7kNXK2D9NhMNRvCOjpPi2burFs6
      +xgbamVrMzsSbPN2YUiEeHT/Dven5/SRYJ0jQRM3FrFImLWVJXYiCUYvTwAgGK08/+IL+H97
      g9DObtVqX7HwNgvrIUYGutgK7dPX6WNmfpWxEX1t0HpSOlVMLfwHavFJ+fzLx+5f3Fmt2Fct
      PWat18s+R635maqafX9OHFg8VslSj2rufYXnWlkcN7CxwsbWNpP37mFqHqTdk53Xr0gpEC0o
      UrrqCrC+tUuPz8Waf5fg3jZuh4Fl//a5ToC781usB/dLAqHkkeptCuWlwVgsy2/nKX0PhX3U
      sgBVVbX8OZQFZ+lnUBqojzlmyRYlVSnUpRJBEPje98uqRq4AO/4Vljf2ePntHzPSXZzBafH0
      89P3WxFMFswV/fyCwYDJKKKqmdzaoNuFtUHPK8tbEdaDp9snTciJF8oNOo6u8aeJBOgZvYyj
      Pes8Xzk722Kz13xPS5OD6bVdRgf6UQxpAmIMp722nZKOzuMo6AEURTlTy4mHw2Hc7vO1Xuiv
      PnvEykawpOTblhTPKay+Uw5yyNe/dffqF4tmSLmqCDV3qygUcrdF2Z0r1WGCWrl/jX3y5fkE
      yGQyJBKJb6v9qUKW5XO3OnTpMuXnhaf9O2tGEVZvJEnCaNTEHZ7OEfK0f+czmwBnGUWWkGQF
      o9Gkz4B9SjQzEKbz/VmamuTB1BTReDrbpagoyLKMrCiF53lhUGBjg5Qsn3SVNYt+j3AaURXS
      GZlUIsq9uTXaW5qZWdnCZDLjMKSISyotjXb8+0Bsh+a0ynhf50nXWpPoV4BTjKKoGEWRdCaD
      JGUwiCKQNaYzGC2MXbhMf2dL2QRDnXL+P6mX1FfErtm2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
